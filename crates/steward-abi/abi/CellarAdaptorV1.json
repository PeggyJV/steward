{
  "abi": [
    {
      "inputs": [],
      "name": "BaseAdaptor__ExternalReceiverBlocked",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "BaseAdaptor__PricingNotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__Slippage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserDepositsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserWithdrawsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "cellar",
          "type": "address"
        }
      ],
      "name": "CellarAdaptor__CellarPositionNotUsed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetOf",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetsUsed",
      "outputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Cellar",
          "name": "cellar",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "depositToCellar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDebt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "revokeApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippage",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Cellar",
          "name": "cellar",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromCellar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "withdrawableFrom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "290:5928:87:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "290:5928:87:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4733:410;;;;;;:::i;:::-;;:::i;:::-;;2203:78:78;;;2269:5;646:42:98;;634:2;619:18;2203:78:78;;;;;;;;1919:487:87;;;;;;:::i;:::-;;:::i;3691:217::-;;;;;;:::i;:::-;;:::i;:::-;;;2637:25:98;;;2625:2;2610:18;3691:217:87;2491:177:98;1331:140:87;;;:::i;4250:83::-;;;4298:4;2995:41:98;;2983:2;2968:18;4250:83:87;2855:187:98;5441:180:78;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2842:411:87:-;;;;;;:::i;:::-;;:::i;8378:107:78:-;;;;;;:::i;:::-;;:::i;3989:177:87:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5084:32:98;;;5066:51;;5054:2;5039:18;3989:177:87;4905:218:98;5360:275:87;;;;;;:::i;:::-;;:::i;3358:218::-;;;;;;:::i;:::-;;:::i;4733:410::-;4806:44;4842:6;4806:27;:44::i;:::-;4860:11;4874:6;-1:-1:-1;;;;;4874:12:87;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4860:28;;4907;4921:5;4928:6;4907:13;:28::i;:::-;4898:37;-1:-1:-1;4945:42:87;-1:-1:-1;;;;;4945:17:87;;4971:6;4898:37;4945:17;:42::i;:::-;4997:37;;-1:-1:-1;;;4997:37:87;;;;;6125:25:98;;;5028:4:87;6166:18:98;;;6159:60;-1:-1:-1;;;;;4997:14:87;;;;;6098:18:98;;4997:37:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5089:47;5113:5;5128:6;5089:23;:47::i;:::-;4796:347;4733:410;;:::o;1919:487::-;2057:13;2084:11;2073:33;;;;;;;;;;;;:::i;:::-;2057:49;;2116:44;2152:6;2116:27;:44::i;:::-;2170:11;2184:6;-1:-1:-1;;;;;2184:12:87;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2170:28;-1:-1:-1;2208:42:87;-1:-1:-1;;;;;2208:17:87;;2234:6;2243;2208:17;:42::i;:::-;2260:37;;-1:-1:-1;;;2260:37:87;;;;;6125:25:98;;;2291:4:87;6166:18:98;;;6159:60;-1:-1:-1;;;;;2260:14:87;;;;;6098:18:98;;2260:37:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2352:47;2376:5;2391:6;2352:23;:47::i;:::-;2008:398;;1919:487;;;:::o;3691:217::-;3766:7;3785:13;3812:11;3801:33;;;;;;;;;;;;:::i;:::-;3872:28;;-1:-1:-1;;;3872:28:87;;3889:10;3872:28;;;5066:51:98;3785:49:87;;-1:-1:-1;;;;;;3851:20:87;;;;;;;3872:16;;5039:18:98;;3872:28:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3851:50;;;;;;;;;;;;;2637:25:98;;2625:2;2610:18;;2491:177;3851:50:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3844:57;3691:217;-1:-1:-1;;;3691:217:87:o;1331:140::-;1383:7;1419:44;;;;;;7109:2:98;7091:21;;;7148:2;7128:18;;;7121:30;7187:32;7182:2;7167:18;;7160:60;7252:2;7237:18;;6907:354;1419:44:87;;;;;;;;;;;;;1409:55;;;;;;1402:62;;1331:140;:::o;5441:180:78:-;5558:14;;;5570:1;5558:14;;;;;;;;;5516:21;;5558:14;;;;;;;;;;;-1:-1:-1;5558:14:78;5549:23;;5594:20;5602:11;5594:7;:20::i;:::-;5582:6;5589:1;5582:9;;;;;;;;:::i;:::-;;;;;;:32;-1:-1:-1;;;;;5582:32:78;;;-1:-1:-1;;;;;5582:32:78;;;;;5441:180;;;:::o;2842:411:87:-;3000:32;3023:8;3000:22;:32::i;:::-;3085:13;3112:11;3101:33;;;;;;;;;;;;:::i;:::-;3085:49;;3144:44;3180:6;3144:27;:44::i;:::-;3198:48;;-1:-1:-1;;;3198:48:87;;;;;7600:25:98;;;-1:-1:-1;;;;;7699:15:98;;;7679:18;;;7672:43;3240:4:87;7731:18:98;;;7724:43;3198:15:87;;;;;7573:18:98;;3198:48:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2950:303;2842:411;;;;:::o;8378:107:78:-;8449:29;-1:-1:-1;;;;;8449:17:78;;8467:7;8476:1;8449:17;:29::i;:::-;8378:107;;:::o;3989:177:87:-;4062:5;4079:13;4106:11;4095:33;;;;;;;;;;;;:::i;:::-;4079:49;;4145:6;-1:-1:-1;;;;;4145:12:87;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5360:275::-;5436:44;5472:6;5436:27;:44::i;:::-;-1:-1:-1;;5494:6:87;:27;5490:75;;5532:33;;-1:-1:-1;;;5532:33:87;;5559:4;5532:33;;;5066:51:98;-1:-1:-1;;;;;5532:18:87;;;;;5039::98;;5532:33:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5523:42;;5490:75;5575:53;;-1:-1:-1;;;5575:53:87;;;;;7600:25:98;;;5607:4:87;7679:18:98;;;7672:43;;;7731:18;;;7724:43;-1:-1:-1;;;;;5575:15:87;;;;;7573:18:98;;5575:53:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3358:218::-;3454:7;3473:13;3500:11;3489:33;;;;;;;;;;;;:::i;:::-;3539:30;;-1:-1:-1;;;3539:30:87;;3558:10;3539:30;;;5066:51:98;3473:49:87;;-1:-1:-1;;;;;;3539:18:87;;;;;5039::98;;3539:30:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3532:37;;;3358:218;;;;;:::o;5754:462::-;5904:20;5948:12;:10;:12::i;:::-;5969:18;;;-1:-1:-1;;;;;5084:32:98;;5969:18:87;;;5066:51:98;5962:5:87;;5039:18:98;5969::87;;;-1:-1:-1;;5969:18:87;;;;;;;;;;5937:51;;;;5969:18;5937:51;;:::i;:::-;;;;;;;;;;;;;5927:62;;;;;;5904:85;;5999:17;6034:4;-1:-1:-1;;;;;6019:30:87;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6019:60:87;;6080:12;6019:74;;;;;;;;;;;;;2637:25:98;;2625:2;2610:18;;2491:177;6019:74:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6108:48;;-1:-1:-1;;;6108:48:87;;676:10:98;664:23;;6108:48:87;;;646:42:98;5999:94:87;;-1:-1:-1;6123:4:87;;6108:36;;619:18:98;;6108:48:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6103:106;;6165:44;;-1:-1:-1;;;6165:44:87;;-1:-1:-1;;;;;5084:32:98;;6165:44:87;;;5066:51:98;5039:18;;6165:44:87;;;;;;;;7323:207:78;7406:7;-1:-1:-1;;7429:6:78;:27;7425:98;;7465:30;;-1:-1:-1;;;7465:30:78;;7489:4;7465:30;;;5066:51:98;-1:-1:-1;;;;;7465:15:78;;;;;5039:18:98;;7465:30:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7458:37;;;;7425:98;-1:-1:-1;7517:6:78;7510:13;;4327:1454:48;4438:12;4565:4;4559:11;-1:-1:-1;;;4688:17:48;4681:93;4821:2;4817:1;4798:17;4794:25;4787:37;4901:6;4896:2;4877:17;4873:26;4866:42;5703:2;5700:1;5696:2;5677:17;5674:1;5667:5;5660;5655:51;5224:16;5217:24;5211:2;5193:16;5190:24;5186:1;5182;5176:8;5173:15;5169:46;5166:76;4966:754;4955:765;;;5748:7;5740:34;;;;-1:-1:-1;;;5740:34:48;;9733:2:98;5740:34:48;;;9715:21:98;9772:2;9752:18;;;9745:30;-1:-1:-1;;;9791:18:98;;;9784:44;9845:18;;5740:34:48;9531:338:98;5740:34:48;4428:1353;4327:1454;;;:::o;7665:167:78:-;7751:39;;-1:-1:-1;;;7751:39:78;;7775:4;7751:39;;;10086:34:98;-1:-1:-1;;;;;10156:15:98;;;10136:18;;;10129:43;7793:1:78;;7751:15;;;;;;10021:18:98;;7751:39:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;7747:78;;;7796:29;-1:-1:-1;;;;;7796:17:78;;7814:7;7823:1;7796:17;:29::i;7932:218::-;-1:-1:-1;;;;;8010:25:78;;8030:4;8010:25;;;;:74;;;8054:4;-1:-1:-1;;;;;8039:43:78;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8006:137;;;8105:38;;-1:-1:-1;;;8105:38:78;;;;;;;;;;;8006:137;7932:218;:::o;14:139:98:-;-1:-1:-1;;;;;97:31:98;;87:42;;77:70;;143:1;140;133:12;158:339;242:6;250;303:2;291:9;282:7;278:23;274:32;271:52;;;319:1;316;309:12;271:52;358:9;345:23;377:39;410:5;377:39;:::i;:::-;435:5;487:2;472:18;;;;459:32;;-1:-1:-1;;;158:339:98:o;699:127::-;760:10;755:3;751:20;748:1;741:31;791:4;788:1;781:15;815:4;812:1;805:15;831:718;873:5;926:3;919:4;911:6;907:17;903:27;893:55;;944:1;941;934:12;893:55;980:6;967:20;1006:18;1043:2;1039;1036:10;1033:36;;;1049:18;;:::i;:::-;1124:2;1118:9;1092:2;1178:13;;-1:-1:-1;;1174:22:98;;;1198:2;1170:31;1166:40;1154:53;;;1222:18;;;1242:22;;;1219:46;1216:72;;;1268:18;;:::i;:::-;1308:10;1304:2;1297:22;1343:2;1335:6;1328:18;1389:3;1382:4;1377:2;1369:6;1365:15;1361:26;1358:35;1355:55;;;1406:1;1403;1396:12;1355:55;1470:2;1463:4;1455:6;1451:17;1444:4;1436:6;1432:17;1419:54;1517:1;1510:4;1505:2;1497:6;1493:15;1489:26;1482:37;1537:6;1528:15;;;;;;831:718;;;;:::o;1554:607::-;1649:6;1657;1665;1718:2;1706:9;1697:7;1693:23;1689:32;1686:52;;;1734:1;1731;1724:12;1686:52;1770:9;1757:23;1747:33;;1831:2;1820:9;1816:18;1803:32;1854:18;1895:2;1887:6;1884:14;1881:34;;;1911:1;1908;1901:12;1881:34;1934:49;1975:7;1966:6;1955:9;1951:22;1934:49;:::i;:::-;1924:59;;2036:2;2025:9;2021:18;2008:32;1992:48;;2065:2;2055:8;2052:16;2049:36;;;2081:1;2078;2071:12;2049:36;;2104:51;2147:7;2136:8;2125:9;2121:24;2104:51;:::i;:::-;2094:61;;;1554:607;;;;;:::o;2166:320::-;2234:6;2287:2;2275:9;2266:7;2262:23;2258:32;2255:52;;;2303:1;2300;2293:12;2255:52;2343:9;2330:23;2376:18;2368:6;2365:30;2362:50;;;2408:1;2405;2398:12;2362:50;2431:49;2472:7;2463:6;2452:9;2448:22;2431:49;:::i;3047:673::-;3233:2;3285:21;;;3355:13;;3258:18;;;3377:22;;;3204:4;;3233:2;3456:15;;;;3430:2;3415:18;;;3204:4;3499:195;3513:6;3510:1;3507:13;3499:195;;;3578:13;;-1:-1:-1;;;;;3574:39:98;3562:52;;3669:15;;;;3634:12;;;;3610:1;3528:9;3499:195;;;-1:-1:-1;3711:3:98;;3047:673;-1:-1:-1;;;;;;3047:673:98:o;3725:751::-;3829:6;3837;3845;3853;3906:3;3894:9;3885:7;3881:23;3877:33;3874:53;;;3923:1;3920;3913:12;3874:53;3959:9;3946:23;3936:33;;4019:2;4008:9;4004:18;3991:32;4032:39;4065:5;4032:39;:::i;:::-;4090:5;-1:-1:-1;4146:2:98;4131:18;;4118:32;4169:18;4199:14;;;4196:34;;;4226:1;4223;4216:12;4196:34;4249:49;4290:7;4281:6;4270:9;4266:22;4249:49;:::i;:::-;4239:59;;4351:2;4340:9;4336:18;4323:32;4307:48;;4380:2;4370:8;4367:16;4364:36;;;4396:1;4393;4386:12;4364:36;;4419:51;4462:7;4451:8;4440:9;4436:24;4419:51;:::i;:::-;4409:61;;;3725:751;;;;;;;:::o;4481:419::-;4564:6;4572;4625:2;4613:9;4604:7;4600:23;4596:32;4593:52;;;4641:1;4638;4631:12;4593:52;4680:9;4667:23;4699:39;4732:5;4699:39;:::i;:::-;4757:5;-1:-1:-1;4814:2:98;4799:18;;4786:32;4827:41;4786:32;4827:41;:::i;:::-;4887:7;4877:17;;;4481:419;;;;;:::o;5128:539::-;5214:6;5222;5275:2;5263:9;5254:7;5250:23;5246:32;5243:52;;;5291:1;5288;5281:12;5243:52;5331:9;5318:23;5360:18;5401:2;5393:6;5390:14;5387:34;;;5417:1;5414;5407:12;5387:34;5440:49;5481:7;5472:6;5461:9;5457:22;5440:49;:::i;:::-;5430:59;;5542:2;5531:9;5527:18;5514:32;5498:48;;5571:2;5561:8;5558:16;5555:36;;;5587:1;5584;5577:12;5555:36;;5610:51;5653:7;5642:8;5631:9;5627:24;5610:51;:::i;:::-;5600:61;;;5128:539;;;;;:::o;5672:274::-;5757:6;5810:2;5798:9;5789:7;5785:23;5781:32;5778:52;;;5826:1;5823;5816:12;5778:52;5858:9;5852:16;5877:39;5910:5;5877:39;:::i;6230:184::-;6300:6;6353:2;6341:9;6332:7;6328:23;6324:32;6321:52;;;6369:1;6366;6359:12;6321:52;-1:-1:-1;6392:16:98;;6230:184;-1:-1:-1;6230:184:98:o;7266:127::-;7327:10;7322:3;7318:20;7315:1;7308:31;7358:4;7355:1;7348:15;7382:4;7379:1;7372:15;7778:701;7975:6;7964:9;7957:25;7938:4;8001:2;8053:6;8046:14;8039:22;8034:2;8023:9;8019:18;8012:50;8098:2;8093;8082:9;8078:18;8071:30;8130:6;8124:13;8173:6;8168:2;8157:9;8153:18;8146:34;8198:1;8208:141;8222:6;8219:1;8216:13;8208:141;;;8318:14;;;8314:23;;8308:30;8283:17;;;8302:3;8279:27;8272:67;8237:10;;8208:141;;;8212:3;8399:1;8393:3;8384:6;8373:9;8369:22;8365:32;8358:43;8469:3;8462:2;8458:7;8453:2;8445:6;8441:15;8437:29;8426:9;8422:45;8418:55;8410:63;;;;7778:701;;;;;;:::o;8766:280::-;8835:6;8888:2;8876:9;8867:7;8863:23;8859:32;8856:52;;;8904:1;8901;8894:12;8856:52;8936:9;8930:16;8986:10;8979:5;8975:22;8968:5;8965:33;8955:61;;9012:1;9009;9002:12;9249:277;9316:6;9369:2;9357:9;9348:7;9344:23;9340:32;9337:52;;;9385:1;9382;9375:12;9337:52;9417:9;9411:16;9470:5;9463:13;9456:21;9449:5;9446:32;9436:60;;9492:1;9489;9482:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "assetOf(bytes)": "e170a9bf",
    "assetsUsed(bytes)": "aeffddde",
    "balanceOf(bytes)": "78415365",
    "deposit(uint256,bytes,bytes)": "69445c31",
    "depositToCellar(address,uint256)": "0b2a0862",
    "identifier()": "7998a1c4",
    "isDebt()": "89353a09",
    "revokeApproval(address,address)": "d3bfe76a",
    "slippage()": "3e032a3b",
    "withdraw(uint256,address,bytes,bytes)": "c9111bd7",
    "withdrawFromCellar(address,uint256)": "f42e7410",
    "withdrawableFrom(bytes,bytes)": "fa50e5d2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BaseAdaptor__ExternalReceiverBlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"BaseAdaptor__PricingNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__Slippage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserDepositsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserWithdrawsNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cellar\",\"type\":\"address\"}],\"name\":\"CellarAdaptor__CellarPositionNotUsed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetOf\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetsUsed\",\"outputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Cellar\",\"name\":\"cellar\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"depositToCellar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDebt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"revokeApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippage\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Cellar\",\"name\":\"cellar\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"withdrawFromCellar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"withdrawableFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"crispymangoes\",\"kind\":\"dev\",\"methods\":{\"deposit(uint256,bytes,bytes)\":{\"details\":\"configurationData is NOT used\",\"params\":{\"adaptorData\":\"adaptor data containining the abi encoded Cellar\",\"assets\":\"the amount of assets to deposit into the Cellar position\"}},\"depositToCellar(address,uint256)\":{\"details\":\"Uses `_maxAvailable` helper function, see BaseAdaptor.sol\",\"params\":{\"assets\":\"the amount of assets to deposit into `cellar`\",\"cellar\":\"the Cellar to deposit `assets` into\"}},\"identifier()\":{\"details\":\"Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult.\"},\"revokeApproval(address,address)\":{\"params\":{\"asset\":\"the ERC20 asset to revoke `spender`s approval for\",\"spender\":\"the address to revoke approval for\"}},\"withdraw(uint256,address,bytes,bytes)\":{\"details\":\"Important to verify that external receivers are allowed if receiver is not Cellar address.configurationData is NOT used\",\"params\":{\"adaptorData\":\"data needed to withdraw from the Cellar position\",\"assets\":\"the amount of assets to withdraw from the Cellar position\",\"receiver\":\"address to send assets to'\"}},\"withdrawFromCellar(address,uint256)\":{\"params\":{\"assets\":\"the amount of assets to withdraw from `cellar`\",\"cellar\":\"the Cellar to withdraw `assets` from\"}}},\"title\":\"Cellar Adaptor\",\"version\":1},\"userdoc\":{\"errors\":{\"BaseAdaptor__ExternalReceiverBlocked()\":[{\"notice\":\"Attempted to specify an external receiver during a Cellar `callOnAdaptor` call.\"}],\"BaseAdaptor__PricingNotSupported(address)\":[{\"notice\":\"Attempted swap used unsupported output asset.\"}],\"BaseAdaptor__Slippage()\":[{\"notice\":\"Attempted swap has bad slippage.\"}],\"BaseAdaptor__UserDepositsNotAllowed()\":[{\"notice\":\"Attempted to deposit to a position where user deposits were not allowed.\"}],\"BaseAdaptor__UserWithdrawsNotAllowed()\":[{\"notice\":\"Attempted to withdraw from a position where user withdraws were not allowed.\"}],\"CellarAdaptor__CellarPositionNotUsed(address)\":[{\"notice\":\"Strategist attempted to interact with a Cellar with no position setup for it.\"}]},\"kind\":\"user\",\"methods\":{\"assetOf(bytes)\":{\"notice\":\"Returns the asset the Cellar position uses.\"},\"assetsUsed(bytes)\":{\"notice\":\"When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup.\"},\"balanceOf(bytes)\":{\"notice\":\"Uses ERC4626 `previewRedeem` to determine Cellars balance in Cellar position.\"},\"deposit(uint256,bytes,bytes)\":{\"notice\":\"Cellar must approve Cellar position to spend its assets, then deposit into the Cellar position.\"},\"depositToCellar(address,uint256)\":{\"notice\":\"Allows strategists to deposit into Cellar positions.\"},\"isDebt()\":{\"notice\":\"This adaptor returns collateral, and not debt.\"},\"revokeApproval(address,address)\":{\"notice\":\"Allows strategists to zero out an approval for a given `asset`.\"},\"slippage()\":{\"notice\":\"Max possible slippage when making a swap router swap.\"},\"withdraw(uint256,address,bytes,bytes)\":{\"notice\":\"Cellar needs to call withdraw on Cellar position.\"},\"withdrawFromCellar(address,uint256)\":{\"notice\":\"Allows strategists to withdraw from Cellar positions.\"},\"withdrawableFrom(bytes,bytes)\":{\"notice\":\"Cellar needs to call `maxWithdraw` to see if its assets are locked.\"}},\"notice\":\"Allows Cellars to interact with other Cellar positions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/adaptors/Sommelier/CellarAdaptor.sol\":\"CellarAdaptor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":@uniswapV3C/=lib/v3-core.git/contracts/\",\":@uniswapV3P/=lib/v3-periphery.git/contracts/\",\":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":v3-core.git/=lib/v3-core.git/contracts/\",\":v3-periphery.git/=lib/v3-periphery.git/contracts/\"]},\"sources\":{\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"src/Registry.sol\":{\"keccak256\":\"0x72690631323f459be3da7dd7c4644a7678a509ff6fd9a76fc6f77124ba96bcb3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://237231d6746fbf8d95ec0fc07ee1ddc0978ae77ef12fe00f445e9f22232d1108\",\"dweb:/ipfs/QmbSKScTxX8nxNnjogci32r3fRexDfFG4sH4myE85AewQp\"]},\"src/base/Cellar.sol\":{\"keccak256\":\"0x851d6f03d13fcd1e4e55d40ab04908677ef1ec92dbcaf3c02ee492602c368d67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0eff90da37039eb4fb743024373d46ce6ccc198b5cb5c61c628f7a160d94fd0b\",\"dweb:/ipfs/QmUoLuGxVU5UqKNUB75BxMvYnpTxxcq8ZiUskrTTx8WbJA\"]},\"src/base/ERC20.sol\":{\"keccak256\":\"0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4\",\"dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf\"]},\"src/base/ERC4626.sol\":{\"keccak256\":\"0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469\",\"dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE\"]},\"src/base/Multicall.sol\":{\"keccak256\":\"0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c\",\"dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K\"]},\"src/base/SafeTransferLib.sol\":{\"keccak256\":\"0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a\",\"dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3\"]},\"src/interfaces/IMulticall.sol\":{\"keccak256\":\"0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0\",\"dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5\"]},\"src/interfaces/external/IAaveToken.sol\":{\"keccak256\":\"0x77cd64637e4c0fd379b2d4d826bcd9f64fc706a291ce77d023f693d1eb8e45d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e87630603401ff3374cb610b765e46a3a235ef294fab212cf3116a35db7c4d58\",\"dweb:/ipfs/Qma8awSuYptmpBsWUMz9NZBogVRtVQwXF5cvfsVWpNKhc3\"]},\"src/interfaces/external/IChainlinkAggregator.sol\":{\"keccak256\":\"0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2\",\"dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs\"]},\"src/interfaces/external/ICurvePool.sol\":{\"keccak256\":\"0x9ae71865252aeca89fd6c74013eded1d8029eccc46e3604291be16e97b89a5da\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f504248ab846844bcd771226f7b2984455ddcc746357924fce50a41b65eec9e2\",\"dweb:/ipfs/QmQVe1VZUgxUab9ocsbrX42Ust3hs83BU3bpA1j6Cx1xo6\"]},\"src/interfaces/external/IGravity.sol\":{\"keccak256\":\"0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51\",\"dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c\"]},\"src/interfaces/external/IUniswapV2Router02.sol\":{\"keccak256\":\"0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a\",\"dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo\"]},\"src/interfaces/external/IUniswapV3Router.sol\":{\"keccak256\":\"0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd\",\"dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK\"]},\"src/modules/adaptors/BaseAdaptor.sol\":{\"keccak256\":\"0xb45700da63110e41cbb1879c3d261763644bc851effa798721cf7eca3e039f9a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7810084abb53310d5d50f5ca55557e9dcdc8fef6c987e55d82a7748aad467e27\",\"dweb:/ipfs/QmaieqMfgwWJvFy8q3jVrx8Fifo6M9UZM8cBjpmyNFPc5j\"]},\"src/modules/adaptors/Sommelier/CellarAdaptor.sol\":{\"keccak256\":\"0x071d558fb710b9a765cc79e7dc4ff228edcc89e15b8bde73e247faa77aae699a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://afcf83f08a22149bfc2c5ee044ca36aae2b18b78c3ce82c4a7212d7fd09d802d\",\"dweb:/ipfs/QmXwLQHEeh3r441oYdosNYwg8vdrE99RXy4djy4R9gewYB\"]},\"src/modules/price-router/PriceRouter.sol\":{\"keccak256\":\"0x3d0fb1c107cfbd5b72660b548a9749dfd0d07d9a0b5abdf554d593ee00569550\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f90a60a3097007a1dcd2871db79b0df74cf2a18de5126fc2bd2896f2715e93af\",\"dweb:/ipfs/QmTDqnNN9Rv29MYHCAzZsKzsDbTBMYYQi17VEwhmbE6KYC\"]},\"src/modules/swap-router/SwapRouter.sol\":{\"keccak256\":\"0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818\",\"dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312\",\"dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r\"]},\"src/utils/Uint32Array.sol\":{\"keccak256\":\"0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944\",\"dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__ExternalReceiverBlocked"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BaseAdaptor__PricingNotSupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__Slippage"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserDepositsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserWithdrawsNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "cellar",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "CellarAdaptor__CellarPositionNotUsed"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetOf",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetsUsed",
          "outputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "assets",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "contract Cellar",
              "name": "cellar",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositToCellar"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "identifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isDebt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeApproval"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "slippage",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "contract Cellar",
              "name": "cellar",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromCellar"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableFrom",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(uint256,bytes,bytes)": {
            "details": "configurationData is NOT used",
            "params": {
              "adaptorData": "adaptor data containining the abi encoded Cellar",
              "assets": "the amount of assets to deposit into the Cellar position"
            }
          },
          "depositToCellar(address,uint256)": {
            "details": "Uses `_maxAvailable` helper function, see BaseAdaptor.sol",
            "params": {
              "assets": "the amount of assets to deposit into `cellar`",
              "cellar": "the Cellar to deposit `assets` into"
            }
          },
          "identifier()": {
            "details": "Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult."
          },
          "revokeApproval(address,address)": {
            "params": {
              "asset": "the ERC20 asset to revoke `spender`s approval for",
              "spender": "the address to revoke approval for"
            }
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "details": "Important to verify that external receivers are allowed if receiver is not Cellar address.configurationData is NOT used",
            "params": {
              "adaptorData": "data needed to withdraw from the Cellar position",
              "assets": "the amount of assets to withdraw from the Cellar position",
              "receiver": "address to send assets to'"
            }
          },
          "withdrawFromCellar(address,uint256)": {
            "params": {
              "assets": "the amount of assets to withdraw from `cellar`",
              "cellar": "the Cellar to withdraw `assets` from"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "assetOf(bytes)": {
            "notice": "Returns the asset the Cellar position uses."
          },
          "assetsUsed(bytes)": {
            "notice": "When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup."
          },
          "balanceOf(bytes)": {
            "notice": "Uses ERC4626 `previewRedeem` to determine Cellars balance in Cellar position."
          },
          "deposit(uint256,bytes,bytes)": {
            "notice": "Cellar must approve Cellar position to spend its assets, then deposit into the Cellar position."
          },
          "depositToCellar(address,uint256)": {
            "notice": "Allows strategists to deposit into Cellar positions."
          },
          "isDebt()": {
            "notice": "This adaptor returns collateral, and not debt."
          },
          "revokeApproval(address,address)": {
            "notice": "Allows strategists to zero out an approval for a given `asset`."
          },
          "slippage()": {
            "notice": "Max possible slippage when making a swap router swap."
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "notice": "Cellar needs to call withdraw on Cellar position."
          },
          "withdrawFromCellar(address,uint256)": {
            "notice": "Allows strategists to withdraw from Cellar positions."
          },
          "withdrawableFrom(bytes,bytes)": {
            "notice": "Cellar needs to call `maxWithdraw` to see if its assets are locked."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=lib/chainlink/",
        ":@ds-test/=lib/forge-std/lib/ds-test/src/",
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":@uniswapV3C/=lib/v3-core.git/contracts/",
        ":@uniswapV3P/=lib/v3-periphery.git/contracts/",
        ":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-core.git/=lib/v3-core.git/contracts/",
        ":v3-periphery.git/=lib/v3-periphery.git/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/adaptors/Sommelier/CellarAdaptor.sol": "CellarAdaptor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "keccak256": "0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7",
        "urls": [
          "bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465",
          "dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2",
        "urls": [
          "bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b",
          "dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol": {
        "keccak256": "0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340",
        "urls": [
          "bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e",
          "dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028",
        "urls": [
          "bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf",
          "dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb",
        "urls": [
          "bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929",
          "dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Registry.sol": {
        "keccak256": "0x72690631323f459be3da7dd7c4644a7678a509ff6fd9a76fc6f77124ba96bcb3",
        "urls": [
          "bzz-raw://237231d6746fbf8d95ec0fc07ee1ddc0978ae77ef12fe00f445e9f22232d1108",
          "dweb:/ipfs/QmbSKScTxX8nxNnjogci32r3fRexDfFG4sH4myE85AewQp"
        ],
        "license": "Apache-2.0"
      },
      "src/base/Cellar.sol": {
        "keccak256": "0x851d6f03d13fcd1e4e55d40ab04908677ef1ec92dbcaf3c02ee492602c368d67",
        "urls": [
          "bzz-raw://0eff90da37039eb4fb743024373d46ce6ccc198b5cb5c61c628f7a160d94fd0b",
          "dweb:/ipfs/QmUoLuGxVU5UqKNUB75BxMvYnpTxxcq8ZiUskrTTx8WbJA"
        ],
        "license": "Apache-2.0"
      },
      "src/base/ERC20.sol": {
        "keccak256": "0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02",
        "urls": [
          "bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4",
          "dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ERC4626.sol": {
        "keccak256": "0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7",
        "urls": [
          "bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469",
          "dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/Multicall.sol": {
        "keccak256": "0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9",
        "urls": [
          "bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c",
          "dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/SafeTransferLib.sol": {
        "keccak256": "0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324",
        "urls": [
          "bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a",
          "dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IMulticall.sol": {
        "keccak256": "0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e",
        "urls": [
          "bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0",
          "dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/IAaveToken.sol": {
        "keccak256": "0x77cd64637e4c0fd379b2d4d826bcd9f64fc706a291ce77d023f693d1eb8e45d8",
        "urls": [
          "bzz-raw://e87630603401ff3374cb610b765e46a3a235ef294fab212cf3116a35db7c4d58",
          "dweb:/ipfs/Qma8awSuYptmpBsWUMz9NZBogVRtVQwXF5cvfsVWpNKhc3"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/IChainlinkAggregator.sol": {
        "keccak256": "0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d",
        "urls": [
          "bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2",
          "dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/ICurvePool.sol": {
        "keccak256": "0x9ae71865252aeca89fd6c74013eded1d8029eccc46e3604291be16e97b89a5da",
        "urls": [
          "bzz-raw://f504248ab846844bcd771226f7b2984455ddcc746357924fce50a41b65eec9e2",
          "dweb:/ipfs/QmQVe1VZUgxUab9ocsbrX42Ust3hs83BU3bpA1j6Cx1xo6"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IGravity.sol": {
        "keccak256": "0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11",
        "urls": [
          "bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51",
          "dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IUniswapV2Router02.sol": {
        "keccak256": "0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f",
        "urls": [
          "bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a",
          "dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IUniswapV3Router.sol": {
        "keccak256": "0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355",
        "urls": [
          "bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd",
          "dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/modules/adaptors/BaseAdaptor.sol": {
        "keccak256": "0xb45700da63110e41cbb1879c3d261763644bc851effa798721cf7eca3e039f9a",
        "urls": [
          "bzz-raw://7810084abb53310d5d50f5ca55557e9dcdc8fef6c987e55d82a7748aad467e27",
          "dweb:/ipfs/QmaieqMfgwWJvFy8q3jVrx8Fifo6M9UZM8cBjpmyNFPc5j"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/adaptors/Sommelier/CellarAdaptor.sol": {
        "keccak256": "0x071d558fb710b9a765cc79e7dc4ff228edcc89e15b8bde73e247faa77aae699a",
        "urls": [
          "bzz-raw://afcf83f08a22149bfc2c5ee044ca36aae2b18b78c3ce82c4a7212d7fd09d802d",
          "dweb:/ipfs/QmXwLQHEeh3r441oYdosNYwg8vdrE99RXy4djy4R9gewYB"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/price-router/PriceRouter.sol": {
        "keccak256": "0x3d0fb1c107cfbd5b72660b548a9749dfd0d07d9a0b5abdf554d593ee00569550",
        "urls": [
          "bzz-raw://f90a60a3097007a1dcd2871db79b0df74cf2a18de5126fc2bd2896f2715e93af",
          "dweb:/ipfs/QmTDqnNN9Rv29MYHCAzZsKzsDbTBMYYQi17VEwhmbE6KYC"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/swap-router/SwapRouter.sol": {
        "keccak256": "0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80",
        "urls": [
          "bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818",
          "dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f",
        "urls": [
          "bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312",
          "dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Uint32Array.sol": {
        "keccak256": "0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9",
        "urls": [
          "bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944",
          "dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/adaptors/Sommelier/CellarAdaptor.sol",
    "id": 46874,
    "exportedSymbols": {
      "BaseAdaptor": [
        43962
      ],
      "Cellar": [
        33437
      ],
      "CellarAdaptor": [
        46873
      ],
      "ERC20": [
        34556
      ],
      "SafeTransferLib": [
        35307
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:6180:87",
    "nodes": [
      {
        "id": 46480,
        "nodeType": "PragmaDirective",
        "src": "39:23:87",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 46485,
        "nodeType": "ImportDirective",
        "src": "64:99:87",
        "nodes": [],
        "absolutePath": "src/modules/adaptors/BaseAdaptor.sol",
        "file": "src/modules/adaptors/BaseAdaptor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46874,
        "sourceUnit": 43963,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46481,
              "name": "BaseAdaptor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43962,
              "src": "73:11:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 46482,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34556,
              "src": "86:5:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 46483,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35307,
              "src": "93:15:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 46484,
              "name": "Cellar",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33437,
              "src": "110:6:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46873,
        "nodeType": "ContractDefinition",
        "src": "290:5928:87",
        "nodes": [
          {
            "id": 46492,
            "nodeType": "UsingForDirective",
            "src": "334:32:87",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 46489,
              "name": "SafeTransferLib",
              "nameLocations": [
                "340:15:87"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35307,
              "src": "340:15:87"
            },
            "typeName": {
              "id": 46491,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46490,
                "name": "ERC20",
                "nameLocations": [
                  "360:5:87"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34556,
                "src": "360:5:87"
              },
              "referencedDeclaration": 34556,
              "src": "360:5:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$34556",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 46497,
            "nodeType": "ErrorDefinition",
            "src": "853:59:87",
            "nodes": [],
            "documentation": {
              "id": 46493,
              "nodeType": "StructuredDocumentation",
              "src": "744:104:87",
              "text": " @notice Strategist attempted to interact with a Cellar with no position setup for it."
            },
            "errorSelector": "3f1b41e9",
            "name": "CellarAdaptor__CellarPositionNotUsed",
            "nameLocation": "859:36:87",
            "parameters": {
              "id": 46496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46495,
                  "mutability": "mutable",
                  "name": "cellar",
                  "nameLocation": "904:6:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 46497,
                  "src": "896:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "895:16:87"
            }
          },
          {
            "id": 46512,
            "nodeType": "FunctionDefinition",
            "src": "1331:140:87",
            "nodes": [],
            "body": {
              "id": 46511,
              "nodeType": "Block",
              "src": "1392:79:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "536f6d6d656c6965722043656c6c61722041646170746f72205620312e30",
                            "id": 46507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1430:32:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_42418446fce44641c9603424c567dce477324a69e249b66677d399a5d6168b58",
                              "typeString": "literal_string \"Sommelier Cellar Adaptor V 1.0\""
                            },
                            "value": "Sommelier Cellar Adaptor V 1.0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_42418446fce44641c9603424c567dce477324a69e249b66677d399a5d6168b58",
                              "typeString": "literal_string \"Sommelier Cellar Adaptor V 1.0\""
                            }
                          ],
                          "expression": {
                            "id": 46505,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1419:3:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1423:6:87",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1419:10:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 46508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1419:44:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 46504,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1409:9:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 46509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1409:55:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 46503,
                  "id": 46510,
                  "nodeType": "Return",
                  "src": "1402:62:87"
                }
              ]
            },
            "baseFunctions": [
              43752
            ],
            "documentation": {
              "id": 46498,
              "nodeType": "StructuredDocumentation",
              "src": "1030:296:87",
              "text": " @dev Identifier unique to this adaptor for a shared registry.\n Normally the identifier would just be the address of this contract, but this\n Identifier is needed during Cellar Delegate Call Operations, so getting the address\n of the adaptor is more difficult."
            },
            "functionSelector": "7998a1c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "identifier",
            "nameLocation": "1340:10:87",
            "overrides": {
              "id": 46500,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1365:8:87"
            },
            "parameters": {
              "id": 46499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1350:2:87"
            },
            "returnParameters": {
              "id": 46503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46502,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46512,
                  "src": "1383:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46501,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1382:9:87"
            },
            "scope": 46873,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46576,
            "nodeType": "FunctionDefinition",
            "src": "1919:487:87",
            "nodes": [],
            "body": {
              "id": 46575,
              "nodeType": "Block",
              "src": "2008:398:87",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    46525
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46525,
                      "mutability": "mutable",
                      "name": "cellar",
                      "nameLocation": "2064:6:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 46575,
                      "src": "2057:13:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Cellar_$33437",
                        "typeString": "contract Cellar"
                      },
                      "typeName": {
                        "id": 46524,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46523,
                          "name": "Cellar",
                          "nameLocations": [
                            "2057:6:87"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33437,
                          "src": "2057:6:87"
                        },
                        "referencedDeclaration": 33437,
                        "src": "2057:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cellar_$33437",
                          "typeString": "contract Cellar"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46532,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46528,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46517,
                        "src": "2084:11:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 46529,
                            "name": "Cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33437,
                            "src": "2098:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                              "typeString": "type(contract Cellar)"
                            }
                          }
                        ],
                        "id": 46530,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2097:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                          "typeString": "type(contract Cellar)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                          "typeString": "type(contract Cellar)"
                        }
                      ],
                      "expression": {
                        "id": 46526,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2073:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 46527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2077:6:87",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2073:10:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 46531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2073:33:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Cellar_$33437",
                      "typeString": "contract Cellar"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2057:49:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46536,
                            "name": "cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46525,
                            "src": "2152:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          ],
                          "id": 46535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2144:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46534,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2144:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2144:15:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46533,
                      "name": "_verifyCellarPositionIsUsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46872,
                      "src": "2116:27:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 46538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2116:44:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46539,
                  "nodeType": "ExpressionStatement",
                  "src": "2116:44:87"
                },
                {
                  "assignments": [
                    46542
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46542,
                      "mutability": "mutable",
                      "name": "asset",
                      "nameLocation": "2176:5:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 46575,
                      "src": "2170:11:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 46541,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46540,
                          "name": "ERC20",
                          "nameLocations": [
                            "2170:5:87"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34556,
                          "src": "2170:5:87"
                        },
                        "referencedDeclaration": 34556,
                        "src": "2170:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46546,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46543,
                        "name": "cellar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46525,
                        "src": "2184:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cellar_$33437",
                          "typeString": "contract Cellar"
                        }
                      },
                      "id": 46544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2191:5:87",
                      "memberName": "asset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34599,
                      "src": "2184:12:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$34556_$",
                        "typeString": "function () view external returns (contract ERC20)"
                      }
                    },
                    "id": 46545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2184:14:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2170:28:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46552,
                            "name": "cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46525,
                            "src": "2234:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          ],
                          "id": 46551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2226:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46550,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2226:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2226:15:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46554,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46515,
                        "src": "2243:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46547,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46542,
                        "src": "2208:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 46549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2214:11:87",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35306,
                      "src": "2208:17:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$34556_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 46555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2208:42:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46556,
                  "nodeType": "ExpressionStatement",
                  "src": "2208:42:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46560,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46515,
                        "src": "2275:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46563,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2291:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                              "typeString": "contract CellarAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                              "typeString": "contract CellarAdaptor"
                            }
                          ],
                          "id": 46562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2283:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46561,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2283:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2283:13:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46557,
                        "name": "cellar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46525,
                        "src": "2260:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cellar_$33437",
                          "typeString": "contract Cellar"
                        }
                      },
                      "id": 46559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2267:7:87",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31625,
                      "src": "2260:14:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 46565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2260:37:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46566,
                  "nodeType": "ExpressionStatement",
                  "src": "2260:37:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46568,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46542,
                        "src": "2376:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46571,
                            "name": "cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46525,
                            "src": "2391:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          ],
                          "id": 46570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2383:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46569,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2383:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2383:15:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46567,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43918,
                      "src": "2352:23:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 46573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2352:47:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46574,
                  "nodeType": "ExpressionStatement",
                  "src": "2352:47:87"
                }
              ]
            },
            "baseFunctions": [
              43787
            ],
            "documentation": {
              "id": 46513,
              "nodeType": "StructuredDocumentation",
              "src": "1597:317:87",
              "text": " @notice Cellar must approve Cellar position to spend its assets, then deposit into the Cellar position.\n @param assets the amount of assets to deposit into the Cellar position\n @param adaptorData adaptor data containining the abi encoded Cellar\n @dev configurationData is NOT used"
            },
            "functionSelector": "69445c31",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1928:7:87",
            "overrides": {
              "id": 46521,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1999:8:87"
            },
            "parameters": {
              "id": 46520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46515,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "1944:6:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 46576,
                  "src": "1936:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46517,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "1965:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 46576,
                  "src": "1952:24:87",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46516,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1952:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46519,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46576,
                  "src": "1978:12:87",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46518,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1935:56:87"
            },
            "returnParameters": {
              "id": 46522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2008:0:87"
            },
            "scope": 46873,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46622,
            "nodeType": "FunctionDefinition",
            "src": "2842:411:87",
            "nodes": [],
            "body": {
              "id": 46621,
              "nodeType": "Block",
              "src": "2950:303:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46590,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46581,
                        "src": "3023:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46589,
                      "name": "_externalReceiverCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43944,
                      "src": "3000:22:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 46591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3000:32:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46592,
                  "nodeType": "ExpressionStatement",
                  "src": "3000:32:87"
                },
                {
                  "assignments": [
                    46595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46595,
                      "mutability": "mutable",
                      "name": "cellar",
                      "nameLocation": "3092:6:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 46621,
                      "src": "3085:13:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Cellar_$33437",
                        "typeString": "contract Cellar"
                      },
                      "typeName": {
                        "id": 46594,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46593,
                          "name": "Cellar",
                          "nameLocations": [
                            "3085:6:87"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33437,
                          "src": "3085:6:87"
                        },
                        "referencedDeclaration": 33437,
                        "src": "3085:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cellar_$33437",
                          "typeString": "contract Cellar"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46602,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46598,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46583,
                        "src": "3112:11:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 46599,
                            "name": "Cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33437,
                            "src": "3126:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                              "typeString": "type(contract Cellar)"
                            }
                          }
                        ],
                        "id": 46600,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3125:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                          "typeString": "type(contract Cellar)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                          "typeString": "type(contract Cellar)"
                        }
                      ],
                      "expression": {
                        "id": 46596,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3101:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 46597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3105:6:87",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3101:10:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 46601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3101:33:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Cellar_$33437",
                      "typeString": "contract Cellar"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3085:49:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46606,
                            "name": "cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46595,
                            "src": "3180:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          ],
                          "id": 46605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3172:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46604,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3172:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3172:15:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46603,
                      "name": "_verifyCellarPositionIsUsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46872,
                      "src": "3144:27:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 46608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3144:44:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46609,
                  "nodeType": "ExpressionStatement",
                  "src": "3144:44:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46613,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46579,
                        "src": "3214:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46614,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46581,
                        "src": "3222:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46617,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3240:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                              "typeString": "contract CellarAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                              "typeString": "contract CellarAdaptor"
                            }
                          ],
                          "id": 46616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3232:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46615,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3232:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3232:13:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46610,
                        "name": "cellar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46595,
                        "src": "3198:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cellar_$33437",
                          "typeString": "contract Cellar"
                        }
                      },
                      "id": 46612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3205:8:87",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31772,
                      "src": "3198:15:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 46619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3198:48:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46620,
                  "nodeType": "ExpressionStatement",
                  "src": "3198:48:87"
                }
              ]
            },
            "baseFunctions": [
              43799
            ],
            "documentation": {
              "id": 46577,
              "nodeType": "StructuredDocumentation",
              "src": "2412:425:87",
              "text": " @notice Cellar needs to call withdraw on Cellar position.\n @dev Important to verify that external receivers are allowed if receiver is not Cellar address.\n @param assets the amount of assets to withdraw from the Cellar position\n @param receiver address to send assets to'\n @param adaptorData data needed to withdraw from the Cellar position\n @dev configurationData is NOT used"
            },
            "functionSelector": "c9111bd7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2851:8:87",
            "overrides": {
              "id": 46587,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2941:8:87"
            },
            "parameters": {
              "id": 46586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46579,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "2868:6:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 46622,
                  "src": "2860:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2860:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46581,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2884:8:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 46622,
                  "src": "2876:16:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2876:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46583,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "2907:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 46622,
                  "src": "2894:24:87",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46582,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2894:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46585,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46622,
                  "src": "2920:12:87",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46584,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2920:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2859:74:87"
            },
            "returnParameters": {
              "id": 46588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2950:0:87"
            },
            "scope": 46873,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46650,
            "nodeType": "FunctionDefinition",
            "src": "3358:218:87",
            "nodes": [],
            "body": {
              "id": 46649,
              "nodeType": "Block",
              "src": "3463:113:87",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    46635
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46635,
                      "mutability": "mutable",
                      "name": "cellar",
                      "nameLocation": "3480:6:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 46649,
                      "src": "3473:13:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Cellar_$33437",
                        "typeString": "contract Cellar"
                      },
                      "typeName": {
                        "id": 46634,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46633,
                          "name": "Cellar",
                          "nameLocations": [
                            "3473:6:87"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33437,
                          "src": "3473:6:87"
                        },
                        "referencedDeclaration": 33437,
                        "src": "3473:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cellar_$33437",
                          "typeString": "contract Cellar"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46642,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46638,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46625,
                        "src": "3500:11:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 46639,
                            "name": "Cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33437,
                            "src": "3514:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                              "typeString": "type(contract Cellar)"
                            }
                          }
                        ],
                        "id": 46640,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3513:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                          "typeString": "type(contract Cellar)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                          "typeString": "type(contract Cellar)"
                        }
                      ],
                      "expression": {
                        "id": 46636,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3489:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 46637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3493:6:87",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3489:10:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 46641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3489:33:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Cellar_$33437",
                      "typeString": "contract Cellar"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3473:49:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46645,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3558:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3562:6:87",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3558:10:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46643,
                        "name": "cellar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46635,
                        "src": "3539:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cellar_$33437",
                          "typeString": "contract Cellar"
                        }
                      },
                      "id": 46644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3546:11:87",
                      "memberName": "maxWithdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32492,
                      "src": "3539:18:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 46647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3539:30:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 46632,
                  "id": 46648,
                  "nodeType": "Return",
                  "src": "3532:37:87"
                }
              ]
            },
            "baseFunctions": [
              43817
            ],
            "documentation": {
              "id": 46623,
              "nodeType": "StructuredDocumentation",
              "src": "3259:94:87",
              "text": " @notice Cellar needs to call `maxWithdraw` to see if its assets are locked."
            },
            "functionSelector": "fa50e5d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawableFrom",
            "nameLocation": "3367:16:87",
            "overrides": {
              "id": 46629,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3436:8:87"
            },
            "parameters": {
              "id": 46628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46625,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "3397:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 46650,
                  "src": "3384:24:87",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46624,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46627,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46650,
                  "src": "3410:12:87",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46626,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3410:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3383:40:87"
            },
            "returnParameters": {
              "id": 46632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46650,
                  "src": "3454:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3454:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3453:9:87"
            },
            "scope": 46873,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46679,
            "nodeType": "FunctionDefinition",
            "src": "3691:217:87",
            "nodes": [],
            "body": {
              "id": 46678,
              "nodeType": "Block",
              "src": "3775:133:87",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    46661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46661,
                      "mutability": "mutable",
                      "name": "cellar",
                      "nameLocation": "3792:6:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 46678,
                      "src": "3785:13:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Cellar_$33437",
                        "typeString": "contract Cellar"
                      },
                      "typeName": {
                        "id": 46660,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46659,
                          "name": "Cellar",
                          "nameLocations": [
                            "3785:6:87"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33437,
                          "src": "3785:6:87"
                        },
                        "referencedDeclaration": 33437,
                        "src": "3785:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cellar_$33437",
                          "typeString": "contract Cellar"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46668,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46664,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46653,
                        "src": "3812:11:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 46665,
                            "name": "Cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33437,
                            "src": "3826:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                              "typeString": "type(contract Cellar)"
                            }
                          }
                        ],
                        "id": 46666,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3825:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                          "typeString": "type(contract Cellar)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                          "typeString": "type(contract Cellar)"
                        }
                      ],
                      "expression": {
                        "id": 46662,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3801:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 46663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3805:6:87",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3801:10:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 46667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3801:33:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Cellar_$33437",
                      "typeString": "contract Cellar"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3785:49:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46673,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3889:3:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 46674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3893:6:87",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3889:10:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46671,
                            "name": "cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46661,
                            "src": "3872:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          },
                          "id": 46672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3879:9:87",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34199,
                          "src": "3872:16:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3872:28:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46669,
                        "name": "cellar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46661,
                        "src": "3851:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cellar_$33437",
                          "typeString": "contract Cellar"
                        }
                      },
                      "id": 46670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3858:13:87",
                      "memberName": "previewRedeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32393,
                      "src": "3851:20:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 46676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3851:50:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 46658,
                  "id": 46677,
                  "nodeType": "Return",
                  "src": "3844:57:87"
                }
              ]
            },
            "baseFunctions": [
              43807
            ],
            "documentation": {
              "id": 46651,
              "nodeType": "StructuredDocumentation",
              "src": "3582:104:87",
              "text": " @notice Uses ERC4626 `previewRedeem` to determine Cellars balance in Cellar position."
            },
            "functionSelector": "78415365",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3700:9:87",
            "overrides": {
              "id": 46655,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3748:8:87"
            },
            "parameters": {
              "id": 46654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46653,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "3723:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 46679,
                  "src": "3710:24:87",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46652,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3710:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3709:26:87"
            },
            "returnParameters": {
              "id": 46658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46679,
                  "src": "3766:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3766:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3765:9:87"
            },
            "scope": 46873,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46704,
            "nodeType": "FunctionDefinition",
            "src": "3989:177:87",
            "nodes": [],
            "body": {
              "id": 46703,
              "nodeType": "Block",
              "src": "4069:97:87",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    46691
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46691,
                      "mutability": "mutable",
                      "name": "cellar",
                      "nameLocation": "4086:6:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 46703,
                      "src": "4079:13:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Cellar_$33437",
                        "typeString": "contract Cellar"
                      },
                      "typeName": {
                        "id": 46690,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46689,
                          "name": "Cellar",
                          "nameLocations": [
                            "4079:6:87"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33437,
                          "src": "4079:6:87"
                        },
                        "referencedDeclaration": 33437,
                        "src": "4079:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cellar_$33437",
                          "typeString": "contract Cellar"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46698,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46694,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46682,
                        "src": "4106:11:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 46695,
                            "name": "Cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33437,
                            "src": "4120:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                              "typeString": "type(contract Cellar)"
                            }
                          }
                        ],
                        "id": 46696,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4119:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                          "typeString": "type(contract Cellar)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                          "typeString": "type(contract Cellar)"
                        }
                      ],
                      "expression": {
                        "id": 46692,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4095:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 46693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4099:6:87",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4095:10:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 46697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4095:33:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Cellar_$33437",
                      "typeString": "contract Cellar"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4079:49:87"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46699,
                        "name": "cellar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46691,
                        "src": "4145:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cellar_$33437",
                          "typeString": "contract Cellar"
                        }
                      },
                      "id": 46700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4152:5:87",
                      "memberName": "asset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34599,
                      "src": "4145:12:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$34556_$",
                        "typeString": "function () view external returns (contract ERC20)"
                      }
                    },
                    "id": 46701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4145:14:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "functionReturnParameters": 46688,
                  "id": 46702,
                  "nodeType": "Return",
                  "src": "4138:21:87"
                }
              ]
            },
            "baseFunctions": [
              43826
            ],
            "documentation": {
              "id": 46680,
              "nodeType": "StructuredDocumentation",
              "src": "3914:70:87",
              "text": " @notice Returns the asset the Cellar position uses."
            },
            "functionSelector": "e170a9bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetOf",
            "nameLocation": "3998:7:87",
            "overrides": {
              "id": 46684,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4044:8:87"
            },
            "parameters": {
              "id": 46683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46682,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "4019:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 46704,
                  "src": "4006:24:87",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46681,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4006:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4005:26:87"
            },
            "returnParameters": {
              "id": 46688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46687,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46704,
                  "src": "4062:5:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$34556",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 46686,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46685,
                      "name": "ERC20",
                      "nameLocations": [
                        "4062:5:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34556,
                      "src": "4062:5:87"
                    },
                    "referencedDeclaration": 34556,
                    "src": "4062:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4061:7:87"
            },
            "scope": 46873,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46714,
            "nodeType": "FunctionDefinition",
            "src": "4250:83:87",
            "nodes": [],
            "body": {
              "id": 46713,
              "nodeType": "Block",
              "src": "4304:29:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 46711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4321:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 46710,
                  "id": 46712,
                  "nodeType": "Return",
                  "src": "4314:12:87"
                }
              ]
            },
            "baseFunctions": [
              43860
            ],
            "documentation": {
              "id": 46705,
              "nodeType": "StructuredDocumentation",
              "src": "4172:73:87",
              "text": " @notice This adaptor returns collateral, and not debt."
            },
            "functionSelector": "89353a09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDebt",
            "nameLocation": "4259:6:87",
            "overrides": {
              "id": 46707,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4280:8:87"
            },
            "parameters": {
              "id": 46706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4265:2:87"
            },
            "returnParameters": {
              "id": 46710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46709,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46714,
                  "src": "4298:4:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46708,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4298:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4297:6:87"
            },
            "scope": 46873,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46773,
            "nodeType": "FunctionDefinition",
            "src": "4733:410:87",
            "nodes": [],
            "body": {
              "id": 46772,
              "nodeType": "Block",
              "src": "4796:347:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46726,
                            "name": "cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46718,
                            "src": "4842:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          ],
                          "id": 46725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4834:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46724,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4834:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4834:15:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46723,
                      "name": "_verifyCellarPositionIsUsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46872,
                      "src": "4806:27:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 46728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4806:44:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46729,
                  "nodeType": "ExpressionStatement",
                  "src": "4806:44:87"
                },
                {
                  "assignments": [
                    46732
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46732,
                      "mutability": "mutable",
                      "name": "asset",
                      "nameLocation": "4866:5:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 46772,
                      "src": "4860:11:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 46731,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46730,
                          "name": "ERC20",
                          "nameLocations": [
                            "4860:5:87"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34556,
                          "src": "4860:5:87"
                        },
                        "referencedDeclaration": 34556,
                        "src": "4860:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46736,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46733,
                        "name": "cellar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46718,
                        "src": "4874:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cellar_$33437",
                          "typeString": "contract Cellar"
                        }
                      },
                      "id": 46734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4881:5:87",
                      "memberName": "asset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34599,
                      "src": "4874:12:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$34556_$",
                        "typeString": "function () view external returns (contract ERC20)"
                      }
                    },
                    "id": 46735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4874:14:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4860:28:87"
                },
                {
                  "expression": {
                    "id": 46742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46737,
                      "name": "assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46720,
                      "src": "4898:6:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46739,
                          "name": "asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46732,
                          "src": "4921:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$34556",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 46740,
                          "name": "assets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46720,
                          "src": "4928:6:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$34556",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 46738,
                        "name": "_maxAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43890,
                        "src": "4907:13:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$34556_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,uint256) view returns (uint256)"
                        }
                      },
                      "id": 46741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4907:28:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4898:37:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46743,
                  "nodeType": "ExpressionStatement",
                  "src": "4898:37:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46749,
                            "name": "cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46718,
                            "src": "4971:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          ],
                          "id": 46748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4963:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46747,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4963:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4963:15:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46751,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46720,
                        "src": "4980:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46744,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46732,
                        "src": "4945:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 46746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4951:11:87",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35306,
                      "src": "4945:17:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$34556_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 46752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4945:42:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46753,
                  "nodeType": "ExpressionStatement",
                  "src": "4945:42:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46757,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46720,
                        "src": "5012:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46760,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5028:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                              "typeString": "contract CellarAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                              "typeString": "contract CellarAdaptor"
                            }
                          ],
                          "id": 46759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5020:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46758,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5020:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5020:13:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46754,
                        "name": "cellar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46718,
                        "src": "4997:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cellar_$33437",
                          "typeString": "contract Cellar"
                        }
                      },
                      "id": 46756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5004:7:87",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31625,
                      "src": "4997:14:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 46762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4997:37:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46763,
                  "nodeType": "ExpressionStatement",
                  "src": "4997:37:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46765,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46732,
                        "src": "5113:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46768,
                            "name": "cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46718,
                            "src": "5128:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          ],
                          "id": 46767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5120:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46766,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5120:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5120:15:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46764,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43918,
                      "src": "5089:23:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 46770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5089:47:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46771,
                  "nodeType": "ExpressionStatement",
                  "src": "5089:47:87"
                }
              ]
            },
            "documentation": {
              "id": 46715,
              "nodeType": "StructuredDocumentation",
              "src": "4455:273:87",
              "text": " @notice Allows strategists to deposit into Cellar positions.\n @dev Uses `_maxAvailable` helper function, see BaseAdaptor.sol\n @param cellar the Cellar to deposit `assets` into\n @param assets the amount of assets to deposit into `cellar`"
            },
            "functionSelector": "0b2a0862",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToCellar",
            "nameLocation": "4742:15:87",
            "parameters": {
              "id": 46721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46718,
                  "mutability": "mutable",
                  "name": "cellar",
                  "nameLocation": "4765:6:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 46773,
                  "src": "4758:13:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Cellar_$33437",
                    "typeString": "contract Cellar"
                  },
                  "typeName": {
                    "id": 46717,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46716,
                      "name": "Cellar",
                      "nameLocations": [
                        "4758:6:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33437,
                      "src": "4758:6:87"
                    },
                    "referencedDeclaration": 33437,
                    "src": "4758:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Cellar_$33437",
                      "typeString": "contract Cellar"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46720,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "4781:6:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 46773,
                  "src": "4773:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4773:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4757:31:87"
            },
            "returnParameters": {
              "id": 46722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4796:0:87"
            },
            "scope": 46873,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46822,
            "nodeType": "FunctionDefinition",
            "src": "5360:275:87",
            "nodes": [],
            "body": {
              "id": 46821,
              "nodeType": "Block",
              "src": "5426:209:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46785,
                            "name": "cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46777,
                            "src": "5472:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          ],
                          "id": 46784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5464:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46783,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5464:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5464:15:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46782,
                      "name": "_verifyCellarPositionIsUsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46872,
                      "src": "5436:27:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 46787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5436:44:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46788,
                  "nodeType": "ExpressionStatement",
                  "src": "5436:44:87"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46789,
                      "name": "assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46779,
                      "src": "5494:6:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 46792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5509:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 46791,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5509:7:87",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 46790,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "5504:4:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 46793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5504:13:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 46794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5518:3:87",
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "5504:17:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5494:27:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46806,
                  "nodeType": "IfStatement",
                  "src": "5490:75:87",
                  "trueBody": {
                    "expression": {
                      "id": 46804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 46796,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46779,
                        "src": "5523:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46801,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5559:4:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                                  "typeString": "contract CellarAdaptor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                                  "typeString": "contract CellarAdaptor"
                                }
                              ],
                              "id": 46800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5551:7:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46799,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5551:7:87",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5551:13:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46797,
                            "name": "cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46777,
                            "src": "5532:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          },
                          "id": 46798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5539:11:87",
                          "memberName": "maxWithdraw",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32492,
                          "src": "5532:18:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5532:33:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5523:42:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 46805,
                    "nodeType": "ExpressionStatement",
                    "src": "5523:42:87"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46810,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46779,
                        "src": "5591:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46813,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5607:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                              "typeString": "contract CellarAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                              "typeString": "contract CellarAdaptor"
                            }
                          ],
                          "id": 46812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5599:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46811,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5599:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5599:13:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46817,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5622:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                              "typeString": "contract CellarAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                              "typeString": "contract CellarAdaptor"
                            }
                          ],
                          "id": 46816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5614:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46815,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5614:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5614:13:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46807,
                        "name": "cellar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46777,
                        "src": "5575:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cellar_$33437",
                          "typeString": "contract Cellar"
                        }
                      },
                      "id": 46809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5582:8:87",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31772,
                      "src": "5575:15:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 46819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5575:53:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46820,
                  "nodeType": "ExpressionStatement",
                  "src": "5575:53:87"
                }
              ]
            },
            "documentation": {
              "id": 46774,
              "nodeType": "StructuredDocumentation",
              "src": "5149:206:87",
              "text": " @notice Allows strategists to withdraw from Cellar positions.\n @param cellar the Cellar to withdraw `assets` from\n @param assets the amount of assets to withdraw from `cellar`"
            },
            "functionSelector": "f42e7410",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFromCellar",
            "nameLocation": "5369:18:87",
            "parameters": {
              "id": 46780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46777,
                  "mutability": "mutable",
                  "name": "cellar",
                  "nameLocation": "5395:6:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 46822,
                  "src": "5388:13:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Cellar_$33437",
                    "typeString": "contract Cellar"
                  },
                  "typeName": {
                    "id": 46776,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46775,
                      "name": "Cellar",
                      "nameLocations": [
                        "5388:6:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33437,
                      "src": "5388:6:87"
                    },
                    "referencedDeclaration": 33437,
                    "src": "5388:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Cellar_$33437",
                      "typeString": "contract Cellar"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46779,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "5411:6:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 46822,
                  "src": "5403:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5403:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5387:31:87"
            },
            "returnParameters": {
              "id": 46781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5426:0:87"
            },
            "scope": 46873,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46872,
            "nodeType": "FunctionDefinition",
            "src": "5754:462:87",
            "nodes": [],
            "body": {
              "id": 46871,
              "nodeType": "Block",
              "src": "5821:395:87",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    46828
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46828,
                      "mutability": "mutable",
                      "name": "positionHash",
                      "nameLocation": "5912:12:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 46871,
                      "src": "5904:20:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 46827,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5904:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46841,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 46832,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46512
                              ],
                              "referencedDeclaration": 46512,
                              "src": "5948:10:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
                                "typeString": "function () pure returns (bytes32)"
                              }
                            },
                            "id": 46833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5948:12:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 46834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5962:5:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "arguments": [
                              {
                                "id": 46837,
                                "name": "cellar",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46824,
                                "src": "5980:6:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 46835,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5969:3:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 46836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5973:6:87",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "5969:10:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 46838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5969:18:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 46830,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5937:3:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5941:6:87",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5937:10:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 46839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5937:51:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 46829,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5927:9:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 46840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5927:62:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5904:85:87"
                },
                {
                  "assignments": [
                    46843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46843,
                      "mutability": "mutable",
                      "name": "positionId",
                      "nameLocation": "6006:10:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 46871,
                      "src": "5999:17:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 46842,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5999:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46855,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46853,
                        "name": "positionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46828,
                        "src": "6080:12:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 46847,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "6034:4:87",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                                      "typeString": "contract CellarAdaptor"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                                      "typeString": "contract CellarAdaptor"
                                    }
                                  ],
                                  "id": 46846,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6026:7:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 46845,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6026:7:87",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 46848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6026:13:87",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 46844,
                              "name": "Cellar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33437,
                              "src": "6019:6:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                                "typeString": "type(contract Cellar)"
                              }
                            },
                            "id": 46849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6019:21:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cellar_$33437",
                              "typeString": "contract Cellar"
                            }
                          },
                          "id": 46850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6041:8:87",
                          "memberName": "registry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31073,
                          "src": "6019:30:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Registry_$30033_$",
                            "typeString": "function () view external returns (contract Registry)"
                          }
                        },
                        "id": 46851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6019:32:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registry_$30033",
                          "typeString": "contract Registry"
                        }
                      },
                      "id": 46852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6052:27:87",
                      "memberName": "getPositionHashToPositionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29780,
                      "src": "6019:60:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint32_$",
                        "typeString": "function (bytes32) view external returns (uint32)"
                      }
                    },
                    "id": 46854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6019:74:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5999:94:87"
                },
                {
                  "condition": {
                    "id": 46865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6107:49:87",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 46863,
                          "name": "positionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46843,
                          "src": "6145:10:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 46859,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6123:4:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                                    "typeString": "contract CellarAdaptor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CellarAdaptor_$46873",
                                    "typeString": "contract CellarAdaptor"
                                  }
                                ],
                                "id": 46858,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6115:7:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 46857,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6115:7:87",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 46860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6115:13:87",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 46856,
                            "name": "Cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33437,
                            "src": "6108:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                              "typeString": "type(contract Cellar)"
                            }
                          },
                          "id": 46861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6108:21:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Cellar_$33437",
                            "typeString": "contract Cellar"
                          }
                        },
                        "id": 46862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6130:14:87",
                        "memberName": "isPositionUsed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30303,
                        "src": "6108:36:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 46864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6108:48:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46870,
                  "nodeType": "IfStatement",
                  "src": "6103:106:87",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 46867,
                          "name": "cellar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46824,
                          "src": "6202:6:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46866,
                        "name": "CellarAdaptor__CellarPositionNotUsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46497,
                        "src": "6165:36:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                          "typeString": "function (address) pure"
                        }
                      },
                      "id": 46868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6165:44:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46869,
                    "nodeType": "RevertStatement",
                    "src": "6158:51:87"
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyCellarPositionIsUsed",
            "nameLocation": "5763:27:87",
            "parameters": {
              "id": 46825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46824,
                  "mutability": "mutable",
                  "name": "cellar",
                  "nameLocation": "5799:6:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 46872,
                  "src": "5791:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5791:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5790:16:87"
            },
            "returnParameters": {
              "id": 46826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5821:0:87"
            },
            "scope": 46873,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46487,
              "name": "BaseAdaptor",
              "nameLocations": [
                "316:11:87"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43962,
              "src": "316:11:87"
            },
            "id": 46488,
            "nodeType": "InheritanceSpecifier",
            "src": "316:11:87"
          }
        ],
        "canonicalName": "CellarAdaptor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 46486,
          "nodeType": "StructuredDocumentation",
          "src": "165:124:87",
          "text": " @title Cellar Adaptor\n @notice Allows Cellars to interact with other Cellar positions.\n @author crispymangoes"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46873,
          43962
        ],
        "name": "CellarAdaptor",
        "nameLocation": "299:13:87",
        "scope": 46874,
        "usedErrors": [
          43724,
          43727,
          43730,
          43733,
          43738,
          46497
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 87
}