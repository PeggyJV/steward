{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_morpho",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_morphoLens",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minHealthFactor",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "rewardDistributor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__ConstructorHealthFactorTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__ExternalReceiverBlocked",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "BaseAdaptor__PricingNotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__Slippage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserDepositsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserWithdrawsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MorphoAaveV2ATokenAdaptor__HealthFactorTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BORROWING_MASK",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetOf",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetsUsed",
      "outputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimable",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAaveToken",
          "name": "aToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToDeposit",
          "type": "uint256"
        }
      ],
      "name": "depositToAaveV2Morpho",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isBorrowingAny",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDebt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumHealthFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "morpho",
      "outputs": [
        {
          "internalType": "contract IMorphoV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "morphoLens",
      "outputs": [
        {
          "internalType": "contract IMorphoLensV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "morphoRewardsDistributor",
      "outputs": [
        {
          "internalType": "contract RewardsDistributor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "revokeApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippage",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAaveToken",
          "name": "aToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToWithdraw",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromAaveV2Morpho",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "withdrawableFrom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101006040523480156200001257600080fd5b50604051620016e1380380620016e18339810160408190526200003591620000b4565b6001600160a01b0381166080526200004d826200006a565b506001600160a01b0392831660a052911660c05260e05262000108565b670e92596fd629000081101562000094576040516397ed5f4160e01b815260040160405180910390fd5b50565b80516001600160a01b0381168114620000af57600080fd5b919050565b60008060008060808587031215620000cb57600080fd5b620000d68562000097565b9350620000e66020860162000097565b925060408501519150620000fd6060860162000097565b905092959194509250565b60805160a05160c05160e051611536620001ab6000396000818161012b01526108ca0152600081816101ad01526108520152600081816102db015281816103cd015281816104e40152818161052f015281816105910152818161064701528181610692015281816106f4015281816107df015281816109e301528181610cdf01528181610d7b0152610e280152600081816101ff015261033a01526115366000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637998a1c4116100ad578063c9111bd711610071578063c9111bd7146102b0578063d3bfe76a146102c3578063d8fbc833146102d6578063e170a9bf146102fd578063fa50e5d21461031057600080fd5b80637998a1c414610247578063872de8121461024f57806389353a0914610262578063aeffddde14610269578063b505e7a21461028957600080fd5b8063425734d3116100f4578063425734d3146101a85780635528481b146101e75780635b5d4d78146101fa57806369445c3114610221578063784153651461023457600080fd5b80631caff8b1146101265780632f52ebb7146101605780632f93417c146101755780633e032a3b14610198575b600080fd5b61014d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61017361016e366004610fc9565b610323565b005b610188610183366004611090565b6103a9565b6040519015158152602001610157565b6040516123288152602001610157565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610157565b6101736101f53660046110ad565b610463565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b61017361022f366004611149565b6105ba565b61014d6102423660046111b6565b61071f565b61014d610749565b61017361025d3660046110ad565b6107b3565b6000610188565b61027c6102773660046111b6565b610909565b60405161015791906111f3565b61014d7f555555555555555555555555555555555555555555555555555555555555555581565b6101736102be366004611240565b61096c565b6101736102d13660046112c0565b610a48565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101cf61030b3660046111b6565b610a61565b61014d61031e3660046112f9565b610adc565b604051630f44fe1d60e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d13f874906103739030908690869060040161135d565b600060405180830381600087803b15801561038d57600080fd5b505af11580156103a1573d6000803e3d6000fd5b505050505050565b604051630bc45d1960e41b81526001600160a01b03828116600483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063bc45d19090602401602060405180830381865afa158015610414573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043891906113ba565b7f55555555555555555555555555555555555555555555555555555555555555551615159392505050565b6000826001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c791906113d3565b90506104d38183610b20565b91506105096001600160a01b0382167f000000000000000000000000000000000000000000000000000000000000000084610ba1565b604051631e573fb760e31b81526001600160a01b038481166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063f2b9fdb890604401600060405180830381600087803b15801561057357600080fd5b505af1158015610587573d6000803e3d6000fd5b505050506105b5817f0000000000000000000000000000000000000000000000000000000000000000610c22565b505050565b6000828060200190518101906105d091906113d3565b90506000816001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610612573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063691906113d3565b905061066c6001600160a01b0382167f000000000000000000000000000000000000000000000000000000000000000087610ba1565b604051631e573fb760e31b81526001600160a01b038381166004830152602482018790527f0000000000000000000000000000000000000000000000000000000000000000169063f2b9fdb890604401600060405180830381600087803b1580156106d657600080fd5b505af11580156106ea573d6000803e3d6000fd5b50505050610718817f0000000000000000000000000000000000000000000000000000000000000000610c22565b5050505050565b6000808280602001905181019061073691906113d3565b90506107428133610cb1565b9392505050565b60006040516020016107989060208082526023908201527f4d6f7270686f20416176652056322061546f6b656e2041646170746f7220562060408201526218971960e91b606082015260800190565b60405160208183030381529060405280519060200120905090565b604051631a4ca37b60e21b81526001600160a01b038381166004830152602482018390523060448301527f000000000000000000000000000000000000000000000000000000000000000016906369328dec90606401600060405180830381600087803b15801561082357600080fd5b505af1158015610837573d6000803e3d6000fd5b5050604051630e397f9360e31b8152306004820152600092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691506371cbfc9890602401602060405180830381865afa1580156108a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c691906113ba565b90507f00000000000000000000000000000000000000000000000000000000000000008110156105b557604051630d32445160e21b815260040160405180910390fd5b6040805160018082528183019092526060916020808301908036833701905050905061093482610a61565b81600081518110610947576109476113f0565b60200260200101906001600160a01b031690816001600160a01b031681525050919050565b61097583610ecc565b61097e306103a9565b1561099c57604051635f5003c560e11b815260040160405180910390fd5b6000828060200190518101906109b291906113d3565b604051631a4ca37b60e21b81526001600160a01b0380831660048301526024820188905286811660448301529192507f0000000000000000000000000000000000000000000000000000000000000000909116906369328dec90606401600060405180830381600087803b158015610a2957600080fd5b505af1158015610a3d573d6000803e3d6000fd5b505050505050505050565b610a5d6001600160a01b038316826000610ba1565b5050565b60008082806020019051810190610a7891906113d3565b9050806001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074291906113d3565b6000610ae7336103a9565b15610af457506000610b1a565b600083806020019051810190610b0a91906113d3565b9050610b168133610cb1565b9150505b92915050565b60006000198203610b9a576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610b6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9391906113ba565b9050610b1a565b5080610b1a565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610c1c5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa158015610c72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9691906113ba565b1115610a5d57610a5d6001600160a01b038316826000610ba1565b6040516339407b4160e21b81526001600160a01b0383811660048301528281166024830152600091829182917f00000000000000000000000000000000000000000000000000000000000000009091169063e501ed04906044016040805180830381865afa158015610d27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4b9190611406565b909250905060008215610dff5760405163854f7ebb60e01b81526001600160a01b038781166004830152610dfc917f00000000000000000000000000000000000000000000000000000000000000009091169063854f7ebb90602401602060405180830381865afa158015610dc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de891906113ba565b84906b033b2e3c9fd0803ce8000000610f63565b90505b8115610ec357604051631987357f60e21b81526001600160a01b038781166004830152610eb6917f00000000000000000000000000000000000000000000000000000000000000009091169063661cd5fc90602401606060405180830381865afa158015610e71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e959190611446565b6020015183906001600160701b03166b033b2e3c9fd0803ce8000000610f63565b610ec090826114bd565b90505b95945050505050565b6001600160a01b0381163014801590610f425750306001600160a01b0316634c4602da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4291906114de565b15610f60576040516307de9b5160e21b815260040160405180910390fd5b50565b828202811515841585830485141716610f7b57600080fd5b0492915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610fc157610fc1610f82565b604052919050565b60008060408385031215610fdc57600080fd5b8235915060208084013567ffffffffffffffff80821115610ffc57600080fd5b818601915086601f83011261101057600080fd5b81358181111561102257611022610f82565b8060051b9150611033848301610f98565b818152918301840191848101908984111561104d57600080fd5b938501935b8385101561106b57843582529385019390850190611052565b8096505050505050509250929050565b6001600160a01b0381168114610f6057600080fd5b6000602082840312156110a257600080fd5b81356107428161107b565b600080604083850312156110c057600080fd5b82356110cb8161107b565b946020939093013593505050565b600082601f8301126110ea57600080fd5b813567ffffffffffffffff81111561110457611104610f82565b611117601f8201601f1916602001610f98565b81815284602083860101111561112c57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561115e57600080fd5b83359250602084013567ffffffffffffffff8082111561117d57600080fd5b611189878388016110d9565b9350604086013591508082111561119f57600080fd5b506111ac868287016110d9565b9150509250925092565b6000602082840312156111c857600080fd5b813567ffffffffffffffff8111156111df57600080fd5b6111eb848285016110d9565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156112345783516001600160a01b03168352928401929184019160010161120f565b50909695505050505050565b6000806000806080858703121561125657600080fd5b8435935060208501356112688161107b565b9250604085013567ffffffffffffffff8082111561128557600080fd5b611291888389016110d9565b935060608701359150808211156112a757600080fd5b506112b4878288016110d9565b91505092959194509250565b600080604083850312156112d357600080fd5b82356112de8161107b565b915060208301356112ee8161107b565b809150509250929050565b6000806040838503121561130c57600080fd5b823567ffffffffffffffff8082111561132457600080fd5b611330868387016110d9565b9350602085013591508082111561134657600080fd5b50611353858286016110d9565b9150509250929050565b6001600160a01b038416815260208082018490526060604083018190528351908301819052600091848101916080850190845b818110156113ac57845183529383019391830191600101611390565b509098975050505050505050565b6000602082840312156113cc57600080fd5b5051919050565b6000602082840312156113e557600080fd5b81516107428161107b565b634e487b7160e01b600052603260045260246000fd5b6000806040838503121561141957600080fd5b505080516020909101519092909150565b80516001600160701b038116811461144157600080fd5b919050565b60006060828403121561145857600080fd5b6040516060810181811067ffffffffffffffff8211171561147b5761147b610f82565b604052825163ffffffff8116811461149257600080fd5b81526114a06020840161142a565b60208201526114b16040840161142a565b60408201529392505050565b80820180821115610b1a57634e487b7160e01b600052601160045260246000fd5b6000602082840312156114f057600080fd5b8151801515811461074257600080fdfea26469706673582212208d0b9e9929cd445f957cd709018304e40085baf90a6dc5e1569d164efc0f8c9664736f6c63430008100033",
    "sourceMap": "621:8489:197:-:0;;;2235:383;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;629:72:203;;;;2424:54:197::1;2462:15:::0;2424:37:::1;:54::i;:::-;-1:-1:-1::0;;;;;;2488:27:197;;::::1;;::::0;2525:39;::::1;;::::0;2574:37:::1;::::0;621:8489;;8743:233:188;2760:7;8847:19;:57;8843:126;;;8925:44;;-1:-1:-1;;;8925:44:188;;;;;;;;;;;8843:126;8743:233;:::o;14:177:258:-;93:13;;-1:-1:-1;;;;;135:31:258;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:440::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;558:2;547:9;543:18;537:25;527:35;;581:49;626:2;615:9;611:18;581:49;:::i;:::-;571:59;;196:440;;;;;;;:::o;:::-;621:8489:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80637998a1c4116100ad578063c9111bd711610071578063c9111bd7146102b0578063d3bfe76a146102c3578063d8fbc833146102d6578063e170a9bf146102fd578063fa50e5d21461031057600080fd5b80637998a1c414610247578063872de8121461024f57806389353a0914610262578063aeffddde14610269578063b505e7a21461028957600080fd5b8063425734d3116100f4578063425734d3146101a85780635528481b146101e75780635b5d4d78146101fa57806369445c3114610221578063784153651461023457600080fd5b80631caff8b1146101265780632f52ebb7146101605780632f93417c146101755780633e032a3b14610198575b600080fd5b61014d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61017361016e366004610fc9565b610323565b005b610188610183366004611090565b6103a9565b6040519015158152602001610157565b6040516123288152602001610157565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610157565b6101736101f53660046110ad565b610463565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b61017361022f366004611149565b6105ba565b61014d6102423660046111b6565b61071f565b61014d610749565b61017361025d3660046110ad565b6107b3565b6000610188565b61027c6102773660046111b6565b610909565b60405161015791906111f3565b61014d7f555555555555555555555555555555555555555555555555555555555555555581565b6101736102be366004611240565b61096c565b6101736102d13660046112c0565b610a48565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101cf61030b3660046111b6565b610a61565b61014d61031e3660046112f9565b610adc565b604051630f44fe1d60e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d13f874906103739030908690869060040161135d565b600060405180830381600087803b15801561038d57600080fd5b505af11580156103a1573d6000803e3d6000fd5b505050505050565b604051630bc45d1960e41b81526001600160a01b03828116600483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063bc45d19090602401602060405180830381865afa158015610414573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043891906113ba565b7f55555555555555555555555555555555555555555555555555555555555555551615159392505050565b6000826001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c791906113d3565b90506104d38183610b20565b91506105096001600160a01b0382167f000000000000000000000000000000000000000000000000000000000000000084610ba1565b604051631e573fb760e31b81526001600160a01b038481166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063f2b9fdb890604401600060405180830381600087803b15801561057357600080fd5b505af1158015610587573d6000803e3d6000fd5b505050506105b5817f0000000000000000000000000000000000000000000000000000000000000000610c22565b505050565b6000828060200190518101906105d091906113d3565b90506000816001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610612573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063691906113d3565b905061066c6001600160a01b0382167f000000000000000000000000000000000000000000000000000000000000000087610ba1565b604051631e573fb760e31b81526001600160a01b038381166004830152602482018790527f0000000000000000000000000000000000000000000000000000000000000000169063f2b9fdb890604401600060405180830381600087803b1580156106d657600080fd5b505af11580156106ea573d6000803e3d6000fd5b50505050610718817f0000000000000000000000000000000000000000000000000000000000000000610c22565b5050505050565b6000808280602001905181019061073691906113d3565b90506107428133610cb1565b9392505050565b60006040516020016107989060208082526023908201527f4d6f7270686f20416176652056322061546f6b656e2041646170746f7220562060408201526218971960e91b606082015260800190565b60405160208183030381529060405280519060200120905090565b604051631a4ca37b60e21b81526001600160a01b038381166004830152602482018390523060448301527f000000000000000000000000000000000000000000000000000000000000000016906369328dec90606401600060405180830381600087803b15801561082357600080fd5b505af1158015610837573d6000803e3d6000fd5b5050604051630e397f9360e31b8152306004820152600092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691506371cbfc9890602401602060405180830381865afa1580156108a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c691906113ba565b90507f00000000000000000000000000000000000000000000000000000000000000008110156105b557604051630d32445160e21b815260040160405180910390fd5b6040805160018082528183019092526060916020808301908036833701905050905061093482610a61565b81600081518110610947576109476113f0565b60200260200101906001600160a01b031690816001600160a01b031681525050919050565b61097583610ecc565b61097e306103a9565b1561099c57604051635f5003c560e11b815260040160405180910390fd5b6000828060200190518101906109b291906113d3565b604051631a4ca37b60e21b81526001600160a01b0380831660048301526024820188905286811660448301529192507f0000000000000000000000000000000000000000000000000000000000000000909116906369328dec90606401600060405180830381600087803b158015610a2957600080fd5b505af1158015610a3d573d6000803e3d6000fd5b505050505050505050565b610a5d6001600160a01b038316826000610ba1565b5050565b60008082806020019051810190610a7891906113d3565b9050806001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074291906113d3565b6000610ae7336103a9565b15610af457506000610b1a565b600083806020019051810190610b0a91906113d3565b9050610b168133610cb1565b9150505b92915050565b60006000198203610b9a576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610b6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9391906113ba565b9050610b1a565b5080610b1a565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610c1c5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa158015610c72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9691906113ba565b1115610a5d57610a5d6001600160a01b038316826000610ba1565b6040516339407b4160e21b81526001600160a01b0383811660048301528281166024830152600091829182917f00000000000000000000000000000000000000000000000000000000000000009091169063e501ed04906044016040805180830381865afa158015610d27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4b9190611406565b909250905060008215610dff5760405163854f7ebb60e01b81526001600160a01b038781166004830152610dfc917f00000000000000000000000000000000000000000000000000000000000000009091169063854f7ebb90602401602060405180830381865afa158015610dc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de891906113ba565b84906b033b2e3c9fd0803ce8000000610f63565b90505b8115610ec357604051631987357f60e21b81526001600160a01b038781166004830152610eb6917f00000000000000000000000000000000000000000000000000000000000000009091169063661cd5fc90602401606060405180830381865afa158015610e71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e959190611446565b6020015183906001600160701b03166b033b2e3c9fd0803ce8000000610f63565b610ec090826114bd565b90505b95945050505050565b6001600160a01b0381163014801590610f425750306001600160a01b0316634c4602da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4291906114de565b15610f60576040516307de9b5160e21b815260040160405180910390fd5b50565b828202811515841585830485141716610f7b57600080fd5b0492915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610fc157610fc1610f82565b604052919050565b60008060408385031215610fdc57600080fd5b8235915060208084013567ffffffffffffffff80821115610ffc57600080fd5b818601915086601f83011261101057600080fd5b81358181111561102257611022610f82565b8060051b9150611033848301610f98565b818152918301840191848101908984111561104d57600080fd5b938501935b8385101561106b57843582529385019390850190611052565b8096505050505050509250929050565b6001600160a01b0381168114610f6057600080fd5b6000602082840312156110a257600080fd5b81356107428161107b565b600080604083850312156110c057600080fd5b82356110cb8161107b565b946020939093013593505050565b600082601f8301126110ea57600080fd5b813567ffffffffffffffff81111561110457611104610f82565b611117601f8201601f1916602001610f98565b81815284602083860101111561112c57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561115e57600080fd5b83359250602084013567ffffffffffffffff8082111561117d57600080fd5b611189878388016110d9565b9350604086013591508082111561119f57600080fd5b506111ac868287016110d9565b9150509250925092565b6000602082840312156111c857600080fd5b813567ffffffffffffffff8111156111df57600080fd5b6111eb848285016110d9565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156112345783516001600160a01b03168352928401929184019160010161120f565b50909695505050505050565b6000806000806080858703121561125657600080fd5b8435935060208501356112688161107b565b9250604085013567ffffffffffffffff8082111561128557600080fd5b611291888389016110d9565b935060608701359150808211156112a757600080fd5b506112b4878288016110d9565b91505092959194509250565b600080604083850312156112d357600080fd5b82356112de8161107b565b915060208301356112ee8161107b565b809150509250929050565b6000806040838503121561130c57600080fd5b823567ffffffffffffffff8082111561132457600080fd5b611330868387016110d9565b9350602085013591508082111561134657600080fd5b50611353858286016110d9565b9150509250929050565b6001600160a01b038416815260208082018490526060604083018190528351908301819052600091848101916080850190845b818110156113ac57845183529383019391830191600101611390565b509098975050505050505050565b6000602082840312156113cc57600080fd5b5051919050565b6000602082840312156113e557600080fd5b81516107428161107b565b634e487b7160e01b600052603260045260246000fd5b6000806040838503121561141957600080fd5b505080516020909101519092909150565b80516001600160701b038116811461144157600080fd5b919050565b60006060828403121561145857600080fd5b6040516060810181811067ffffffffffffffff8211171561147b5761147b610f82565b604052825163ffffffff8116811461149257600080fd5b81526114a06020840161142a565b60208201526114b16040840161142a565b60408201529392505050565b80820180821115610b1a57634e487b7160e01b600052601160045260246000fd5b6000602082840312156114f057600080fd5b8151801515811461074257600080fdfea26469706673582212208d0b9e9929cd445f957cd709018304e40085baf90a6dc5e1569d164efc0f8c9664736f6c63430008100033",
    "sourceMap": "621:8489:197:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2184:44;;;;;;;;160:25:258;;;148:2;133:18;2184:44:197;;;;;;;;902:145:203;;;;;;:::i;:::-;;:::i;:::-;;8930:178:197;;;;;;:::i;:::-;;:::i;:::-;;;2180:14:258;;2173:22;2155:41;;2143:2;2128:18;8930:178:197;2015:187:258;2415:78:188;;;2481:5;2351:42:258;;2339:2;2324:18;2415:78:188;2207:192:258;1976:41:197;;;;;;;;-1:-1:-1;;;;;2591:32:258;;;2573:51;;2561:2;2546:18;1976:41:197;2404:226:258;6801:458:197;;;;;;:::i;:::-;;:::i;505:60:203:-;;;;;3649:482:197;;;;;;:::i;:::-;;:::i;5732:211::-;;;;;;:::i;:::-;;:::i;3037:145::-;;;:::i;7491:413::-;;;;;;:::i;:::-;;:::i;6320:83::-;6368:4;6320:83;;5934:180:188;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1359:107:197:-;;1400:66;1359:107;;4507:497;;;;;;:::i;:::-;;:::i;9204:107:188:-;;;;;;:::i;:::-;;:::i;1777:33:197:-;;;;;6027:209;;;;;;:::i;:::-;;:::i;5215:427::-;;;;;;:::i;:::-;;:::i;902:145:203:-;977:63;;-1:-1:-1;;;977:63:203;;-1:-1:-1;;;;;977:24:203;:30;;;;:63;;1016:4;;1023:9;;1034:5;;977:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;902:145;;:::o;8930:178:197:-;9027:24;;-1:-1:-1;;;9027:24:197;;-1:-1:-1;;;;;2591:32:258;;;9027:24:197;;;2573:51:258;8989:4:197;;;;9027:6;:18;;;;2546::258;;9027:24:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1400:66;9068:28;:33;;;8930:178;-1:-1:-1;;;8930:178:197:o;6801:458::-;6893:16;6918:6;-1:-1:-1;;;;;6918:31:197;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6893:59;;6980:42;6994:10;7006:15;6980:13;:42::i;:::-;6962:60;-1:-1:-1;7032:56:197;-1:-1:-1;;;;;7032:22:197;;7063:6;6962:60;7032:22;:56::i;:::-;7098:47;;-1:-1:-1;;;7098:47:197;;-1:-1:-1;;;;;9344:32:258;;;7098:47:197;;;9326:51:258;9393:18;;;9386:34;;;7098:6:197;:13;;;;9299:18:258;;7098:47:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7200:52;7224:10;7244:6;7200:23;:52::i;:::-;6883:376;6801:458;;:::o;3649:482::-;3785:17;3816:11;3805:37;;;;;;;;;;;;:::i;:::-;3785:57;;3852:16;3877:6;-1:-1:-1;;;;;3877:31:197;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3852:59;-1:-1:-1;3921:47:197;-1:-1:-1;;;;;3921:22:197;;3952:6;3961;3921:22;:47::i;:::-;3979:38;;-1:-1:-1;;;3979:38:197;;-1:-1:-1;;;;;9344:32:258;;;3979:38:197;;;9326:51:258;9393:18;;;9386:34;;;3979:6:197;:13;;;;9299:18:258;;3979:38:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4072:52;4096:10;4116:6;4072:23;:52::i;:::-;3738:393;;3649:482;;;:::o;5732:211::-;5807:7;5826:14;5854:11;5843:34;;;;;;;;;;;;:::i;:::-;5826:51;;5894:42;5917:6;5925:10;5894:22;:42::i;:::-;5887:49;5732:211;-1:-1:-1;;;5732:211:197:o;3037:145::-;3089:7;3125:49;;;;;;10173:2:258;10155:21;;;10212:2;10192:18;;;10185:30;10251:34;10246:2;10231:18;;10224:62;-1:-1:-1;;;10317:2:258;10302:18;;10295:33;10360:3;10345:19;;9971:399;3125:49:197;;;;;;;;;;;;;3115:60;;;;;;3108:67;;3037:145;:::o;7491:413::-;7587:65;;-1:-1:-1;;;7587:65:197;;-1:-1:-1;;;;;10633:15:258;;;7587:65:197;;;10615:34:258;10665:18;;;10658:34;;;7646:4:197;10708:18:258;;;10701:43;7587:6:197;:15;;;;10550:18:258;;7587:65:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7748:45:197;;-1:-1:-1;;;7748:45:197;;7787:4;7748:45;;;2573:51:258;7725:20:197;;-1:-1:-1;7748:10:197;-1:-1:-1;;;;;7748:30:197;;-1:-1:-1;7748:30:197;;2546:18:258;;7748:45:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7725:68;;7822:19;7807:12;:34;7803:94;;;7850:47;;-1:-1:-1;;;7850:47:197;;;;;;;;;;;5934:180:188;6051:14;;;6063:1;6051:14;;;;;;;;;6009:21;;6051:14;;;;;;;;;;;-1:-1:-1;6051:14:188;6042:23;;6087:20;6095:11;6087:7;:20::i;:::-;6075:6;6082:1;6075:9;;;;;;;;:::i;:::-;;;;;;:32;-1:-1:-1;;;;;6075:32:188;;;-1:-1:-1;;;;;6075:32:188;;;;;5934:180;;;:::o;4507:497:197:-;4665:32;4688:8;4665:22;:32::i;:::-;4767:29;4790:4;4767:14;:29::i;:::-;4763:80;;;4805:38;;-1:-1:-1;;;4805:38:197;;;;;;;;;;;4763:80;4854:14;4882:11;4871:34;;;;;;;;;;;;:::i;:::-;4956:41;;-1:-1:-1;;;4956:41:197;;-1:-1:-1;;;;;10633:15:258;;;4956:41:197;;;10615:34:258;10665:18;;;10658:34;;;10728:15;;;10708:18;;;10701:43;4854:51:197;;-1:-1:-1;4956:6:197;:15;;;;;;10550:18:258;;4956:41:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4615:389;4507:497;;;;:::o;9204:107:188:-;9275:29;-1:-1:-1;;;;;9275:17:188;;9293:7;9302:1;9275:17;:29::i;:::-;9204:107;;:::o;6027:209:197:-;6100:5;6117:16;6147:11;6136:37;;;;;;;;;;;;:::i;:::-;6117:56;;6196:5;-1:-1:-1;;;;;6196:30:197;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5215:427::-;5311:7;5446:26;5461:10;5446:14;:26::i;:::-;5442:194;;;-1:-1:-1;5481:1:197;5474:8;;5442:194;5511:14;5539:11;5528:34;;;;;;;;;;;;:::i;:::-;5511:51;;5583:42;5606:6;5614:10;5583:22;:42::i;:::-;5576:49;;;5442:194;5215:427;;;;:::o;7816:207:188:-;7899:7;-1:-1:-1;;7922:6:188;:27;7918:98;;7958:30;;-1:-1:-1;;;7958:30:188;;7982:4;7958:30;;;2573:51:258;-1:-1:-1;;;;;7958:15:188;;;;;2546:18:258;;7958:30:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7951:37;;;;7918:98;-1:-1:-1;8010:6:188;8003:13;;4327:1454:104;4438:12;4565:4;4559:11;-1:-1:-1;;;4688:17:104;4681:93;4821:2;4817:1;4798:17;4794:25;4787:37;4901:6;4896:2;4877:17;4873:26;4866:42;5703:2;5700:1;5696:2;5677:17;5674:1;5667:5;5660;5655:51;5224:16;5217:24;5211:2;5193:16;5190:24;5186:1;5182;5176:8;5173:15;5169:46;5166:76;4966:754;4955:765;;;5748:7;5740:34;;;;-1:-1:-1;;;5740:34:104;;11278:2:258;5740:34:104;;;11260:21:258;11317:2;11297:18;;;11290:30;-1:-1:-1;;;11336:18:258;;;11329:44;11390:18;;5740:34:104;;;;;;;;4428:1353;4327:1454;;;:::o;8158:167:188:-;8244:39;;-1:-1:-1;;;8244:39:188;;8268:4;8244:39;;;11631:34:258;-1:-1:-1;;;;;11701:15:258;;;11681:18;;;11674:43;8286:1:188;;8244:15;;;;;;11566:18:258;;8244:39:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;8240:78;;;8289:29;-1:-1:-1;;;;;8289:17:188;;8307:7;8316:1;8289:17;:29::i;8135:557:197:-;8276:41;;-1:-1:-1;;;8276:41:197;;-1:-1:-1;;;;;11649:15:258;;;8276:41:197;;;11631:34:258;11701:15;;;11681:18;;;11674:43;-1:-1:-1;;;;;;8276:6:197;:24;;;;;;11566:18:258;;8276:41:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8242:75;;-1:-1:-1;8242:75:197;-1:-1:-1;8328:27:197;8441:9;;8437:93;;8491:32;;-1:-1:-1;;;8491:32:197;;-1:-1:-1;;;;;2591:32:258;;;8491::197;;;2573:51:258;8474:56:197;;8491:6;:21;;;;;;2546:18:258;;8491:32:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8474:5;;8525:4;8474:16;:56::i;:::-;8452:78;;8437:93;8544:10;;8540:109;;8597:29;;-1:-1:-1;;;8597:29:197;;-1:-1:-1;;;;;2591:32:258;;;8597:29:197;;;2573:51:258;8579:70:197;;8597:6;:18;;;;;;2546::258;;8597:29:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;;8579:6;;-1:-1:-1;;;;;8579:70:197;8644:4;8579:17;:70::i;:::-;8556:93;;;;:::i;:::-;;;8540:109;8666:19;8135:557;-1:-1:-1;;;;;8135:557:197:o;8425:218:188:-;-1:-1:-1;;;;;8503:25:188;;8523:4;8503:25;;;;:74;;;8547:4;-1:-1:-1;;;;;8532:43:188;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8499:137;;;8598:38;;-1:-1:-1;;;8598:38:188;;;;;;;;;;;8499:137;8425:218;:::o;1357:535:221:-;1563:9;;;1694:19;;1687:27;1719:9;;1733;;;1730:16;;1716:31;1683:65;1673:121;;1778:1;1775;1768:12;1673:121;1857:19;;1357:535;-1:-1:-1;;1357:535:221:o;196:127:258:-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:275;399:2;393:9;464:2;445:13;;-1:-1:-1;;441:27:258;429:40;;499:18;484:34;;520:22;;;481:62;478:88;;;546:18;;:::i;:::-;582:2;575:22;328:275;;-1:-1:-1;328:275:258:o;608:1014::-;701:6;709;762:2;750:9;741:7;737:23;733:32;730:52;;;778:1;775;768:12;730:52;814:9;801:23;791:33;;843:2;896;885:9;881:18;868:32;919:18;960:2;952:6;949:14;946:34;;;976:1;973;966:12;946:34;1014:6;1003:9;999:22;989:32;;1059:7;1052:4;1048:2;1044:13;1040:27;1030:55;;1081:1;1078;1071:12;1030:55;1117:2;1104:16;1139:2;1135;1132:10;1129:36;;;1145:18;;:::i;:::-;1191:2;1188:1;1184:10;1174:20;;1214:28;1238:2;1234;1230:11;1214:28;:::i;:::-;1276:15;;;1346:11;;;1342:20;;;1307:12;;;;1374:19;;;1371:39;;;1406:1;1403;1396:12;1371:39;1430:11;;;;1450:142;1466:6;1461:3;1458:15;1450:142;;;1532:17;;1520:30;;1483:12;;;;1570;;;;1450:142;;;1611:5;1601:15;;;;;;;;608:1014;;;;;:::o;1627:131::-;-1:-1:-1;;;;;1702:31:258;;1692:42;;1682:70;;1748:1;1745;1738:12;1763:247;1822:6;1875:2;1863:9;1854:7;1850:23;1846:32;1843:52;;;1891:1;1888;1881:12;1843:52;1930:9;1917:23;1949:31;1974:5;1949:31;:::i;2635:335::-;2723:6;2731;2784:2;2772:9;2763:7;2759:23;2755:32;2752:52;;;2800:1;2797;2790:12;2752:52;2839:9;2826:23;2858:31;2883:5;2858:31;:::i;:::-;2908:5;2960:2;2945:18;;;;2932:32;;-1:-1:-1;;;2635:335:258:o;3211:530::-;3253:5;3306:3;3299:4;3291:6;3287:17;3283:27;3273:55;;3324:1;3321;3314:12;3273:55;3360:6;3347:20;3386:18;3382:2;3379:26;3376:52;;;3408:18;;:::i;:::-;3452:55;3495:2;3476:13;;-1:-1:-1;;3472:27:258;3501:4;3468:38;3452:55;:::i;:::-;3532:2;3523:7;3516:19;3578:3;3571:4;3566:2;3558:6;3554:15;3550:26;3547:35;3544:55;;;3595:1;3592;3585:12;3544:55;3660:2;3653:4;3645:6;3641:17;3634:4;3625:7;3621:18;3608:55;3708:1;3683:16;;;3701:4;3679:27;3672:38;;;;3687:7;3211:530;-1:-1:-1;;;3211:530:258:o;3746:607::-;3841:6;3849;3857;3910:2;3898:9;3889:7;3885:23;3881:32;3878:52;;;3926:1;3923;3916:12;3878:52;3962:9;3949:23;3939:33;;4023:2;4012:9;4008:18;3995:32;4046:18;4087:2;4079:6;4076:14;4073:34;;;4103:1;4100;4093:12;4073:34;4126:49;4167:7;4158:6;4147:9;4143:22;4126:49;:::i;:::-;4116:59;;4228:2;4217:9;4213:18;4200:32;4184:48;;4257:2;4247:8;4244:16;4241:36;;;4273:1;4270;4263:12;4241:36;;4296:51;4339:7;4328:8;4317:9;4313:24;4296:51;:::i;:::-;4286:61;;;3746:607;;;;;:::o;4358:320::-;4426:6;4479:2;4467:9;4458:7;4454:23;4450:32;4447:52;;;4495:1;4492;4485:12;4447:52;4535:9;4522:23;4568:18;4560:6;4557:30;4554:50;;;4600:1;4597;4590:12;4554:50;4623:49;4664:7;4655:6;4644:9;4640:22;4623:49;:::i;:::-;4613:59;4358:320;-1:-1:-1;;;;4358:320:258:o;4865:673::-;5051:2;5103:21;;;5173:13;;5076:18;;;5195:22;;;5022:4;;5051:2;5274:15;;;;5248:2;5233:18;;;5022:4;5317:195;5331:6;5328:1;5325:13;5317:195;;;5396:13;;-1:-1:-1;;;;;5392:39:258;5380:52;;5487:15;;;;5452:12;;;;5428:1;5346:9;5317:195;;;-1:-1:-1;5529:3:258;;4865:673;-1:-1:-1;;;;;;4865:673:258:o;5543:743::-;5647:6;5655;5663;5671;5724:3;5712:9;5703:7;5699:23;5695:33;5692:53;;;5741:1;5738;5731:12;5692:53;5777:9;5764:23;5754:33;;5837:2;5826:9;5822:18;5809:32;5850:31;5875:5;5850:31;:::i;:::-;5900:5;-1:-1:-1;5956:2:258;5941:18;;5928:32;5979:18;6009:14;;;6006:34;;;6036:1;6033;6026:12;6006:34;6059:49;6100:7;6091:6;6080:9;6076:22;6059:49;:::i;:::-;6049:59;;6161:2;6150:9;6146:18;6133:32;6117:48;;6190:2;6180:8;6177:16;6174:36;;;6206:1;6203;6196:12;6174:36;;6229:51;6272:7;6261:8;6250:9;6246:24;6229:51;:::i;:::-;6219:61;;;5543:743;;;;;;;:::o;6291:403::-;6374:6;6382;6435:2;6423:9;6414:7;6410:23;6406:32;6403:52;;;6451:1;6448;6441:12;6403:52;6490:9;6477:23;6509:31;6534:5;6509:31;:::i;:::-;6559:5;-1:-1:-1;6616:2:258;6601:18;;6588:32;6629:33;6588:32;6629:33;:::i;:::-;6681:7;6671:17;;;6291:403;;;;;:::o;7149:539::-;7235:6;7243;7296:2;7284:9;7275:7;7271:23;7267:32;7264:52;;;7312:1;7309;7302:12;7264:52;7352:9;7339:23;7381:18;7422:2;7414:6;7411:14;7408:34;;;7438:1;7435;7428:12;7408:34;7461:49;7502:7;7493:6;7482:9;7478:22;7461:49;:::i;:::-;7451:59;;7563:2;7552:9;7548:18;7535:32;7519:48;;7592:2;7582:8;7579:16;7576:36;;;7608:1;7605;7598:12;7576:36;;7631:51;7674:7;7663:8;7652:9;7648:24;7631:51;:::i;:::-;7621:61;;;7149:539;;;;;:::o;7693:801::-;-1:-1:-1;;;;;7969:32:258;;7951:51;;8021:2;8039:18;;;8032:34;;;7939:2;8097;8082:18;;8075:30;;;8154:13;;7924:18;;;8176:22;;;7891:4;;8256:15;;;;8229:3;8214:19;;;7891:4;8299:169;8313:6;8310:1;8307:13;8299:169;;;8374:13;;8362:26;;8443:15;;;;8408:12;;;;8335:1;8328:9;8299:169;;;-1:-1:-1;8485:3:258;;7693:801;-1:-1:-1;;;;;;;;7693:801:258:o;8707:184::-;8777:6;8830:2;8818:9;8809:7;8805:23;8801:32;8798:52;;;8846:1;8843;8836:12;8798:52;-1:-1:-1;8869:16:258;;8707:184;-1:-1:-1;8707:184:258:o;8896:251::-;8966:6;9019:2;9007:9;8998:7;8994:23;8990:32;8987:52;;;9035:1;9032;9025:12;8987:52;9067:9;9061:16;9086:31;9111:5;9086:31;:::i;10944:127::-;11005:10;11000:3;10996:20;10993:1;10986:31;11036:4;11033:1;11026:15;11060:4;11057:1;11050:15;11728:245;11807:6;11815;11868:2;11856:9;11847:7;11843:23;11839:32;11836:52;;;11884:1;11881;11874:12;11836:52;-1:-1:-1;;11907:16:258;;11963:2;11948:18;;;11942:25;11907:16;;11942:25;;-1:-1:-1;11728:245:258:o;11978:188::-;12057:13;;-1:-1:-1;;;;;12099:42:258;;12089:53;;12079:81;;12156:1;12153;12146:12;12079:81;11978:188;;;:::o;12171:710::-;12271:6;12324:2;12312:9;12303:7;12299:23;12295:32;12292:52;;;12340:1;12337;12330:12;12292:52;12373:2;12367:9;12415:2;12407:6;12403:15;12484:6;12472:10;12469:22;12448:18;12436:10;12433:34;12430:62;12427:88;;;12495:18;;:::i;:::-;12531:2;12524:22;12568:16;;12624:10;12613:22;;12603:33;;12593:61;;12650:1;12647;12640:12;12593:61;12663:21;;12717:49;12762:2;12747:18;;12717:49;:::i;:::-;12712:2;12704:6;12700:15;12693:74;12800:49;12845:2;12834:9;12830:18;12800:49;:::i;:::-;12795:2;12783:15;;12776:74;12787:6;12171:710;-1:-1:-1;;;12171:710:258:o;12886:222::-;12951:9;;;12972:10;;;12969:133;;;13024:10;13019:3;13015:20;13012:1;13005:31;13059:4;13056:1;13049:15;13087:4;13084:1;13077:15;13113:277;13180:6;13233:2;13221:9;13212:7;13208:23;13204:32;13201:52;;;13249:1;13246;13239:12;13201:52;13281:9;13275:16;13334:5;13327:13;13320:21;13313:5;13310:32;13300:60;;13356:1;13353;13346:12",
    "linkReferences": {},
    "immutableReferences": {
      "64681": [
        {
          "start": 731,
          "length": 32
        },
        {
          "start": 973,
          "length": 32
        },
        {
          "start": 1252,
          "length": 32
        },
        {
          "start": 1327,
          "length": 32
        },
        {
          "start": 1425,
          "length": 32
        },
        {
          "start": 1607,
          "length": 32
        },
        {
          "start": 1682,
          "length": 32
        },
        {
          "start": 1780,
          "length": 32
        },
        {
          "start": 2015,
          "length": 32
        },
        {
          "start": 2531,
          "length": 32
        },
        {
          "start": 3295,
          "length": 32
        },
        {
          "start": 3451,
          "length": 32
        },
        {
          "start": 3624,
          "length": 32
        }
      ],
      "64685": [
        {
          "start": 429,
          "length": 32
        },
        {
          "start": 2130,
          "length": 32
        }
      ],
      "64688": [
        {
          "start": 299,
          "length": 32
        },
        {
          "start": 2250,
          "length": 32
        }
      ],
      "66662": [
        {
          "start": 511,
          "length": 32
        },
        {
          "start": 826,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "BORROWING_MASK()": "b505e7a2",
    "assetOf(bytes)": "e170a9bf",
    "assetsUsed(bytes)": "aeffddde",
    "balanceOf(bytes)": "78415365",
    "claim(uint256,bytes32[])": "2f52ebb7",
    "deposit(uint256,bytes,bytes)": "69445c31",
    "depositToAaveV2Morpho(address,uint256)": "5528481b",
    "identifier()": "7998a1c4",
    "isBorrowingAny(address)": "2f93417c",
    "isDebt()": "89353a09",
    "minimumHealthFactor()": "1caff8b1",
    "morpho()": "d8fbc833",
    "morphoLens()": "425734d3",
    "morphoRewardsDistributor()": "5b5d4d78",
    "revokeApproval(address,address)": "d3bfe76a",
    "slippage()": "3e032a3b",
    "withdraw(uint256,address,bytes,bytes)": "c9111bd7",
    "withdrawFromAaveV2Morpho(address,uint256)": "872de812",
    "withdrawableFrom(bytes,bytes)": "fa50e5d2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_morpho\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_morphoLens\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minHealthFactor\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rewardDistributor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BaseAdaptor__ConstructorHealthFactorTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__ExternalReceiverBlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"BaseAdaptor__PricingNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__Slippage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserDepositsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserWithdrawsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MorphoAaveV2ATokenAdaptor__HealthFactorTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BORROWING_MASK\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetOf\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetsUsed\",\"outputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAaveToken\",\"name\":\"aToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToDeposit\",\"type\":\"uint256\"}],\"name\":\"depositToAaveV2Morpho\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isBorrowingAny\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDebt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumHealthFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"morpho\",\"outputs\":[{\"internalType\":\"contract IMorphoV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"morphoLens\",\"outputs\":[{\"internalType\":\"contract IMorphoLensV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"morphoRewardsDistributor\",\"outputs\":[{\"internalType\":\"contract RewardsDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"revokeApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippage\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAaveToken\",\"name\":\"aToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdrawFromAaveV2Morpho\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"withdrawableFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"crispymangoes\",\"kind\":\"dev\",\"methods\":{\"deposit(uint256,bytes,bytes)\":{\"details\":\"configurationData is not used for deposits bc it only influences user withdraws\",\"params\":{\"adaptorData\":\"adaptor data containing the abi encoded aToken\",\"assets\":\"the amount of assets to lend on Morpho\"}},\"depositToAaveV2Morpho(address,uint256)\":{\"details\":\"Uses `_maxAvailable` helper function, see BaseAdaptor.sol\",\"params\":{\"aToken\":\"the aToken to lend on Morpho\",\"amountToDeposit\":\"the amount of `tokenToDeposit` to lend on Morpho.\"}},\"identifier()\":{\"details\":\"Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult.\"},\"isBorrowingAny(address)\":{\"details\":\"Returns if a user has been borrowing from any market.\",\"params\":{\"user\":\"The address to check if it is borrowing or not.\"},\"returns\":{\"_0\":\"True if the user has been borrowing on any market, false otherwise.\"}},\"revokeApproval(address,address)\":{\"params\":{\"asset\":\"the ERC20 asset to revoke `spender`s approval for\",\"spender\":\"the address to revoke approval for\"}},\"withdraw(uint256,address,bytes,bytes)\":{\"details\":\"Important to verify that external receivers are allowed if receiver is not Cellar address.\",\"params\":{\"adaptorData\":\"adaptor data containing the abi encoded aToken\",\"assets\":\"the amount of assets to withdraw from Morpho\",\"receiver\":\"the address to send withdrawn assets to\"}},\"withdrawFromAaveV2Morpho(address,uint256)\":{\"params\":{\"aToken\":\"the atoken to withdraw from Morpho.\",\"amountToWithdraw\":\"the amount of `tokenToWithdraw` to withdraw from Morpho\"}},\"withdrawableFrom(bytes,bytes)\":{\"params\":{\"adaptorData\":\"the abi encoded aToken address\"}}},\"title\":\"Morpho Aave V2 aToken Adaptor\",\"version\":1},\"userdoc\":{\"errors\":{\"BaseAdaptor__ConstructorHealthFactorTooLow()\":[{\"notice\":\"Attempted to set a constructor minimum health factor to a value         below `MINIMUM_CONSTRUCTOR_HEALTH_FACTOR()`.\"}],\"BaseAdaptor__ExternalReceiverBlocked()\":[{\"notice\":\"Attempted to specify an external receiver during a Cellar `callOnAdaptor` call.\"}],\"BaseAdaptor__PricingNotSupported(address)\":[{\"notice\":\"Attempted swap used unsupported output asset.\"}],\"BaseAdaptor__Slippage()\":[{\"notice\":\"Attempted swap has bad slippage.\"}],\"BaseAdaptor__UserDepositsNotAllowed()\":[{\"notice\":\"Attempted to deposit to a position where user deposits were not allowed.\"}],\"BaseAdaptor__UserWithdrawsNotAllowed()\":[{\"notice\":\"Attempted to withdraw from a position where user withdraws were not allowed.\"}],\"MorphoAaveV2ATokenAdaptor__HealthFactorTooLow()\":[{\"notice\":\"Attempted withdraw would lower Cellar health factor too low.\"}]},\"kind\":\"user\",\"methods\":{\"BORROWING_MASK()\":{\"notice\":\"Bit mask used to determine if a cellar has any open borrow positions         by getting the cellar's userMarkets, and performing an AND operation         with the borrow mask.\"},\"assetOf(bytes)\":{\"notice\":\"Returns the positions aToken underlying asset.\"},\"assetsUsed(bytes)\":{\"notice\":\"When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup.\"},\"balanceOf(bytes)\":{\"notice\":\"Returns the cellars balance of the positions aToken.\"},\"claim(uint256,bytes32[])\":{\"notice\":\"Allows cellars to claim Morpho Rewards.\"},\"deposit(uint256,bytes,bytes)\":{\"notice\":\"Cellar must approve Morpho to spend its assets, then call supply to lend its assets.\"},\"depositToAaveV2Morpho(address,uint256)\":{\"notice\":\"Allows strategists to lend assets on Morpho.\"},\"isDebt()\":{\"notice\":\"This adaptor returns collateral, and not debt.\"},\"minimumHealthFactor()\":{\"notice\":\"Minimum Health Factor enforced after every aToken withdraw.Overwrites strategist set minimums if they are lower.\"},\"morpho()\":{\"notice\":\"The Morpho Aave V2 contract on current network.For mainnet use 0x777777c9898D384F785Ee44Acfe945efDFf5f3E0.\"},\"morphoLens()\":{\"notice\":\"The Morpho Aave V2 Lens contract on current network.For mainnet use 0x507fA343d0A90786d86C7cd885f5C49263A91FF4.\"},\"morphoRewardsDistributor()\":{\"notice\":\"The Morpho Aave V3 rewards handler contract on current network.For mainnet use 0x3B14E5C73e0A56D607A8688098326fD4b4292135.\"},\"revokeApproval(address,address)\":{\"notice\":\"Allows strategists to zero out an approval for a given `asset`.\"},\"slippage()\":{\"notice\":\"Max possible slippage when making a swap router swap.\"},\"withdraw(uint256,address,bytes,bytes)\":{\"notice\":\"Cellars must withdraw from Morpho\"},\"withdrawFromAaveV2Morpho(address,uint256)\":{\"notice\":\"Allows strategists to withdraw assets from Morpho.\"},\"withdrawableFrom(bytes,bytes)\":{\"notice\":\"Checks if Cellar has open borrows, and if so returns zero.         Otherwise returns balanceOf in underlying.\"}},\"notice\":\"Allows Cellars to interact with Morpho Aave V2 positions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/adaptors/Morpho/MorphoAaveV2ATokenAdaptor.sol\":\"MorphoAaveV2ATokenAdaptor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@balancer-labs/=lib/balancer-v2-monorepo/../../node_modules/@balancer-labs/\",\":@balancer/=lib/balancer-v2-monorepo/pkg/\",\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":@uniswapV3C/=lib/v3-core/contracts/\",\":@uniswapV3P/=lib/v3-periphery/contracts/\",\":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/\",\":balancer-v2-monorepo/=lib/balancer-v2-monorepo/\",\":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/\",\":compound-protocol/=lib/compound-protocol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":v3-core.git/=lib/v3-core.git/contracts/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery.git/=lib/v3-periphery.git/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53\",\"dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM\"]},\"src/Registry.sol\":{\"keccak256\":\"0x797eca06ed2adc548ca9bcc2b5565437e50862807f1014fcb90f733c4ecc9e47\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d11adaa81c94efbb8ad46c031888d7a9e3a2fb41e61356f7423b0c1be8a3189\",\"dweb:/ipfs/QmNvQ4qg7p7zphqctgKyQeuAMVXkcA8pTtb2XgNiBKf2jK\"]},\"src/base/Cellar.sol\":{\"keccak256\":\"0xcc435fc48edc29fa9119d9e7bbeea84e0e210368d525656a0f6d2dd3e6186f47\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1ae5e4dfdaa91b2fc59574669951f009f74e70682a2b058fd99c0df3c8b9058\",\"dweb:/ipfs/QmNigVHjunwDjvjQAp9NxgR6vRsGu8fzrjH7EgE4T3bdWs\"]},\"src/base/ERC20.sol\":{\"keccak256\":\"0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4\",\"dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf\"]},\"src/base/ERC4626.sol\":{\"keccak256\":\"0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469\",\"dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE\"]},\"src/base/Multicall.sol\":{\"keccak256\":\"0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c\",\"dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K\"]},\"src/base/SafeTransferLib.sol\":{\"keccak256\":\"0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a\",\"dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3\"]},\"src/interfaces/IMulticall.sol\":{\"keccak256\":\"0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0\",\"dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5\"]},\"src/interfaces/external/IAaveToken.sol\":{\"keccak256\":\"0x77cd64637e4c0fd379b2d4d826bcd9f64fc706a291ce77d023f693d1eb8e45d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e87630603401ff3374cb610b765e46a3a235ef294fab212cf3116a35db7c4d58\",\"dweb:/ipfs/Qma8awSuYptmpBsWUMz9NZBogVRtVQwXF5cvfsVWpNKhc3\"]},\"src/interfaces/external/IChainlinkAggregator.sol\":{\"keccak256\":\"0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2\",\"dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs\"]},\"src/interfaces/external/IGravity.sol\":{\"keccak256\":\"0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51\",\"dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c\"]},\"src/interfaces/external/IUniswapV2Router02.sol\":{\"keccak256\":\"0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a\",\"dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo\"]},\"src/interfaces/external/IUniswapV3Router.sol\":{\"keccak256\":\"0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd\",\"dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK\"]},\"src/interfaces/external/Morpho/IMorphoLensV2.sol\":{\"keccak256\":\"0xc9232e163c278ff37fe6a81cadc4af59ac41e31017f39366b21a1b4ed03eadf7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc3be8463c92906e52d6fcffba065fd9777568003adfeef344e03d0654064e9b\",\"dweb:/ipfs/Qme8DZoU8xHEQMxCFnVCgZw4ZrybPyFd4Ji47Attb8xQqN\"]},\"src/interfaces/external/Morpho/IMorphoV2.sol\":{\"keccak256\":\"0x7ff7eb9e520c6ed3290af890a22c77c6ba6cd5f2394f258a2b34eb7f6af5ad66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://709aa0c2a2d7ed82e09c2765462a851bfc17aab125f735e12bd5ee1ad9e7e21f\",\"dweb:/ipfs/QmWHZuwxwSu6J9crczNc8araaSLwZpbKDJKFUN2uj7AJq9\"]},\"src/interfaces/external/UniswapV3Pool.sol\":{\"keccak256\":\"0xf6a71bfbc0665b1d0aad7148b685f3b2254e1be2a3672c2c6671b7fc20db26bb\",\"urls\":[\"bzz-raw://393871fdf75656c49a3bb83bc8110a93af2cbd805df9cc6574a058f3cbf100a9\",\"dweb:/ipfs/QmZugnPctGBiWkFjXXtiKy3AQTWphA9tjZmSBVZRMg9urh\"]},\"src/modules/adaptors/BaseAdaptor.sol\":{\"keccak256\":\"0xc3d6ce867d0df59d4f4ea027bcbc8d982a89d782c648753d3ef149e1679afc5c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://98eed0613a68c44fb9df313b345ae0b984934cb677f144a1a5a2d0efe604c4ee\",\"dweb:/ipfs/Qmc6dt8S571ibT3DLGqFYRKKk2tgjADi8qpN6kDgm8N7sd\"]},\"src/modules/adaptors/Morpho/MorphoAaveV2ATokenAdaptor.sol\":{\"keccak256\":\"0x87be01824e5d787ac65c6f7929447fa9b1d62118ad0bb6a7253a918b2bdba8a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4640f6aaa9709bbb4727f6e436e01b709c2db3fc623374604daaf8210ea5aaaf\",\"dweb:/ipfs/QmZyhTLXZo264ajSRK5o8G2mUMoRxwaXZE1gGgxwNe6Caz\"]},\"src/modules/adaptors/Morpho/MorphoRewardHandler.sol\":{\"keccak256\":\"0xc1461e49dacbb75fe03a4aa08a58bec9639416d57fed6c6595ade2f343520480\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b2cc897411f203e04233ee37d60e70bed92f310df63beb5adede89009c8cfc54\",\"dweb:/ipfs/QmSgJ6xXXqRLTcmyDf5uPtd5FqLvEmuK4QQ5LBXuk5dbhp\"]},\"src/modules/price-router/Extensions/Extension.sol\":{\"keccak256\":\"0xd51d51474759b8417232e02290814bc7a06223ad5e57c93459d90a1101db558d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b5670880f335e48eda45ae95d9faa9a009885613c78634ab66114a2f842f1b1\",\"dweb:/ipfs/QmNddDkfvh36LtqrSVkDYKtxyWLv2Heb3hTrBVcUZJxJRo\"]},\"src/modules/price-router/PriceRouter.sol\":{\"keccak256\":\"0xa2a1aaeef9be7a72077cc30f1f408dae924ee4b7e25d2ee85491622410b821b9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://627e4d92a619543f08f916ec6279252d577adbd120fa2e8c2a8635d70c5a7a66\",\"dweb:/ipfs/QmTu6mJiHBUFFEXHRE6KpxE5J2W72fJWdMuvaSopD1Gk1K\"]},\"src/modules/swap-router/SwapRouter.sol\":{\"keccak256\":\"0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818\",\"dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312\",\"dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r\"]},\"src/utils/Uint32Array.sol\":{\"keccak256\":\"0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944\",\"dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_morpho",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_morphoLens",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minHealthFactor",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "rewardDistributor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__ConstructorHealthFactorTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__ExternalReceiverBlocked"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BaseAdaptor__PricingNotSupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__Slippage"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserDepositsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserWithdrawsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MorphoAaveV2ATokenAdaptor__HealthFactorTooLow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BORROWING_MASK",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetOf",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetsUsed",
          "outputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "assets",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimable",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "contract IAaveToken",
              "name": "aToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToDeposit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositToAaveV2Morpho"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "identifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBorrowingAny",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isDebt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minimumHealthFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "morpho",
          "outputs": [
            {
              "internalType": "contract IMorphoV2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "morphoLens",
          "outputs": [
            {
              "internalType": "contract IMorphoLensV2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "morphoRewardsDistributor",
          "outputs": [
            {
              "internalType": "contract RewardsDistributor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeApproval"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "slippage",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "contract IAaveToken",
              "name": "aToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToWithdraw",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromAaveV2Morpho"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableFrom",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(uint256,bytes,bytes)": {
            "details": "configurationData is not used for deposits bc it only influences user withdraws",
            "params": {
              "adaptorData": "adaptor data containing the abi encoded aToken",
              "assets": "the amount of assets to lend on Morpho"
            }
          },
          "depositToAaveV2Morpho(address,uint256)": {
            "details": "Uses `_maxAvailable` helper function, see BaseAdaptor.sol",
            "params": {
              "aToken": "the aToken to lend on Morpho",
              "amountToDeposit": "the amount of `tokenToDeposit` to lend on Morpho."
            }
          },
          "identifier()": {
            "details": "Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult."
          },
          "isBorrowingAny(address)": {
            "details": "Returns if a user has been borrowing from any market.",
            "params": {
              "user": "The address to check if it is borrowing or not."
            },
            "returns": {
              "_0": "True if the user has been borrowing on any market, false otherwise."
            }
          },
          "revokeApproval(address,address)": {
            "params": {
              "asset": "the ERC20 asset to revoke `spender`s approval for",
              "spender": "the address to revoke approval for"
            }
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "details": "Important to verify that external receivers are allowed if receiver is not Cellar address.",
            "params": {
              "adaptorData": "adaptor data containing the abi encoded aToken",
              "assets": "the amount of assets to withdraw from Morpho",
              "receiver": "the address to send withdrawn assets to"
            }
          },
          "withdrawFromAaveV2Morpho(address,uint256)": {
            "params": {
              "aToken": "the atoken to withdraw from Morpho.",
              "amountToWithdraw": "the amount of `tokenToWithdraw` to withdraw from Morpho"
            }
          },
          "withdrawableFrom(bytes,bytes)": {
            "params": {
              "adaptorData": "the abi encoded aToken address"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "BORROWING_MASK()": {
            "notice": "Bit mask used to determine if a cellar has any open borrow positions         by getting the cellar's userMarkets, and performing an AND operation         with the borrow mask."
          },
          "assetOf(bytes)": {
            "notice": "Returns the positions aToken underlying asset."
          },
          "assetsUsed(bytes)": {
            "notice": "When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup."
          },
          "balanceOf(bytes)": {
            "notice": "Returns the cellars balance of the positions aToken."
          },
          "claim(uint256,bytes32[])": {
            "notice": "Allows cellars to claim Morpho Rewards."
          },
          "deposit(uint256,bytes,bytes)": {
            "notice": "Cellar must approve Morpho to spend its assets, then call supply to lend its assets."
          },
          "depositToAaveV2Morpho(address,uint256)": {
            "notice": "Allows strategists to lend assets on Morpho."
          },
          "isDebt()": {
            "notice": "This adaptor returns collateral, and not debt."
          },
          "minimumHealthFactor()": {
            "notice": "Minimum Health Factor enforced after every aToken withdraw.Overwrites strategist set minimums if they are lower."
          },
          "morpho()": {
            "notice": "The Morpho Aave V2 contract on current network.For mainnet use 0x777777c9898D384F785Ee44Acfe945efDFf5f3E0."
          },
          "morphoLens()": {
            "notice": "The Morpho Aave V2 Lens contract on current network.For mainnet use 0x507fA343d0A90786d86C7cd885f5C49263A91FF4."
          },
          "morphoRewardsDistributor()": {
            "notice": "The Morpho Aave V3 rewards handler contract on current network.For mainnet use 0x3B14E5C73e0A56D607A8688098326fD4b4292135."
          },
          "revokeApproval(address,address)": {
            "notice": "Allows strategists to zero out an approval for a given `asset`."
          },
          "slippage()": {
            "notice": "Max possible slippage when making a swap router swap."
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "notice": "Cellars must withdraw from Morpho"
          },
          "withdrawFromAaveV2Morpho(address,uint256)": {
            "notice": "Allows strategists to withdraw assets from Morpho."
          },
          "withdrawableFrom(bytes,bytes)": {
            "notice": "Checks if Cellar has open borrows, and if so returns zero.         Otherwise returns balanceOf in underlying."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@balancer-labs/=lib/balancer-v2-monorepo/../../node_modules/@balancer-labs/",
        ":@balancer/=lib/balancer-v2-monorepo/pkg/",
        ":@chainlink/=lib/chainlink/",
        ":@ds-test/=lib/forge-std/lib/ds-test/src/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":@uniswapV3C/=lib/v3-core/contracts/",
        ":@uniswapV3P/=lib/v3-periphery/contracts/",
        ":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/",
        ":balancer-v2-monorepo/=lib/balancer-v2-monorepo/",
        ":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/",
        ":compound-protocol/=lib/compound-protocol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-core.git/=lib/v3-core.git/contracts/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery.git/=lib/v3-periphery.git/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/adaptors/Morpho/MorphoAaveV2ATokenAdaptor.sol": "MorphoAaveV2ATokenAdaptor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "keccak256": "0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7",
        "urls": [
          "bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465",
          "dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2",
        "urls": [
          "bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b",
          "dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028",
        "urls": [
          "bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf",
          "dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb",
        "urls": [
          "bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929",
          "dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b",
        "urls": [
          "bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53",
          "dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/Registry.sol": {
        "keccak256": "0x797eca06ed2adc548ca9bcc2b5565437e50862807f1014fcb90f733c4ecc9e47",
        "urls": [
          "bzz-raw://5d11adaa81c94efbb8ad46c031888d7a9e3a2fb41e61356f7423b0c1be8a3189",
          "dweb:/ipfs/QmNvQ4qg7p7zphqctgKyQeuAMVXkcA8pTtb2XgNiBKf2jK"
        ],
        "license": "Apache-2.0"
      },
      "src/base/Cellar.sol": {
        "keccak256": "0xcc435fc48edc29fa9119d9e7bbeea84e0e210368d525656a0f6d2dd3e6186f47",
        "urls": [
          "bzz-raw://a1ae5e4dfdaa91b2fc59574669951f009f74e70682a2b058fd99c0df3c8b9058",
          "dweb:/ipfs/QmNigVHjunwDjvjQAp9NxgR6vRsGu8fzrjH7EgE4T3bdWs"
        ],
        "license": "Apache-2.0"
      },
      "src/base/ERC20.sol": {
        "keccak256": "0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02",
        "urls": [
          "bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4",
          "dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ERC4626.sol": {
        "keccak256": "0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7",
        "urls": [
          "bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469",
          "dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/Multicall.sol": {
        "keccak256": "0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9",
        "urls": [
          "bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c",
          "dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/SafeTransferLib.sol": {
        "keccak256": "0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324",
        "urls": [
          "bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a",
          "dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IMulticall.sol": {
        "keccak256": "0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e",
        "urls": [
          "bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0",
          "dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/IAaveToken.sol": {
        "keccak256": "0x77cd64637e4c0fd379b2d4d826bcd9f64fc706a291ce77d023f693d1eb8e45d8",
        "urls": [
          "bzz-raw://e87630603401ff3374cb610b765e46a3a235ef294fab212cf3116a35db7c4d58",
          "dweb:/ipfs/Qma8awSuYptmpBsWUMz9NZBogVRtVQwXF5cvfsVWpNKhc3"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/IChainlinkAggregator.sol": {
        "keccak256": "0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d",
        "urls": [
          "bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2",
          "dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IGravity.sol": {
        "keccak256": "0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11",
        "urls": [
          "bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51",
          "dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IUniswapV2Router02.sol": {
        "keccak256": "0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f",
        "urls": [
          "bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a",
          "dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IUniswapV3Router.sol": {
        "keccak256": "0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355",
        "urls": [
          "bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd",
          "dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/Morpho/IMorphoLensV2.sol": {
        "keccak256": "0xc9232e163c278ff37fe6a81cadc4af59ac41e31017f39366b21a1b4ed03eadf7",
        "urls": [
          "bzz-raw://cc3be8463c92906e52d6fcffba065fd9777568003adfeef344e03d0654064e9b",
          "dweb:/ipfs/Qme8DZoU8xHEQMxCFnVCgZw4ZrybPyFd4Ji47Attb8xQqN"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/Morpho/IMorphoV2.sol": {
        "keccak256": "0x7ff7eb9e520c6ed3290af890a22c77c6ba6cd5f2394f258a2b34eb7f6af5ad66",
        "urls": [
          "bzz-raw://709aa0c2a2d7ed82e09c2765462a851bfc17aab125f735e12bd5ee1ad9e7e21f",
          "dweb:/ipfs/QmWHZuwxwSu6J9crczNc8araaSLwZpbKDJKFUN2uj7AJq9"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/UniswapV3Pool.sol": {
        "keccak256": "0xf6a71bfbc0665b1d0aad7148b685f3b2254e1be2a3672c2c6671b7fc20db26bb",
        "urls": [
          "bzz-raw://393871fdf75656c49a3bb83bc8110a93af2cbd805df9cc6574a058f3cbf100a9",
          "dweb:/ipfs/QmZugnPctGBiWkFjXXtiKy3AQTWphA9tjZmSBVZRMg9urh"
        ],
        "license": null
      },
      "src/modules/adaptors/BaseAdaptor.sol": {
        "keccak256": "0xc3d6ce867d0df59d4f4ea027bcbc8d982a89d782c648753d3ef149e1679afc5c",
        "urls": [
          "bzz-raw://98eed0613a68c44fb9df313b345ae0b984934cb677f144a1a5a2d0efe604c4ee",
          "dweb:/ipfs/Qmc6dt8S571ibT3DLGqFYRKKk2tgjADi8qpN6kDgm8N7sd"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/adaptors/Morpho/MorphoAaveV2ATokenAdaptor.sol": {
        "keccak256": "0x87be01824e5d787ac65c6f7929447fa9b1d62118ad0bb6a7253a918b2bdba8a0",
        "urls": [
          "bzz-raw://4640f6aaa9709bbb4727f6e436e01b709c2db3fc623374604daaf8210ea5aaaf",
          "dweb:/ipfs/QmZyhTLXZo264ajSRK5o8G2mUMoRxwaXZE1gGgxwNe6Caz"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/adaptors/Morpho/MorphoRewardHandler.sol": {
        "keccak256": "0xc1461e49dacbb75fe03a4aa08a58bec9639416d57fed6c6595ade2f343520480",
        "urls": [
          "bzz-raw://b2cc897411f203e04233ee37d60e70bed92f310df63beb5adede89009c8cfc54",
          "dweb:/ipfs/QmSgJ6xXXqRLTcmyDf5uPtd5FqLvEmuK4QQ5LBXuk5dbhp"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/price-router/Extensions/Extension.sol": {
        "keccak256": "0xd51d51474759b8417232e02290814bc7a06223ad5e57c93459d90a1101db558d",
        "urls": [
          "bzz-raw://0b5670880f335e48eda45ae95d9faa9a009885613c78634ab66114a2f842f1b1",
          "dweb:/ipfs/QmNddDkfvh36LtqrSVkDYKtxyWLv2Heb3hTrBVcUZJxJRo"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/price-router/PriceRouter.sol": {
        "keccak256": "0xa2a1aaeef9be7a72077cc30f1f408dae924ee4b7e25d2ee85491622410b821b9",
        "urls": [
          "bzz-raw://627e4d92a619543f08f916ec6279252d577adbd120fa2e8c2a8635d70c5a7a66",
          "dweb:/ipfs/QmTu6mJiHBUFFEXHRE6KpxE5J2W72fJWdMuvaSopD1Gk1K"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/swap-router/SwapRouter.sol": {
        "keccak256": "0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80",
        "urls": [
          "bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818",
          "dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f",
        "urls": [
          "bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312",
          "dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Uint32Array.sol": {
        "keccak256": "0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9",
        "urls": [
          "bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944",
          "dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/adaptors/Morpho/MorphoAaveV2ATokenAdaptor.sol",
    "id": 65118,
    "exportedSymbols": {
      "BaseAdaptor": [
        61644
      ],
      "ERC20": [
        45747
      ],
      "IAaveToken": [
        49523
      ],
      "IMorphoLensV2": [
        53305
      ],
      "IMorphoV2": [
        53396
      ],
      "Math": [
        74811
      ],
      "MorphoAaveV2ATokenAdaptor": [
        65117
      ],
      "MorphoRewardHandler": [
        66696
      ],
      "SafeTransferLib": [
        46498
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9072:197",
    "nodes": [
      {
        "id": 64645,
        "nodeType": "PragmaDirective",
        "src": "39:23:197",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 64650,
        "nodeType": "ImportDirective",
        "src": "64:97:197",
        "nodes": [],
        "absolutePath": "src/modules/adaptors/BaseAdaptor.sol",
        "file": "src/modules/adaptors/BaseAdaptor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 65118,
        "sourceUnit": 61645,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64646,
              "name": "BaseAdaptor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61644,
              "src": "73:11:197",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 64647,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45747,
              "src": "86:5:197",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 64648,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46498,
              "src": "93:15:197",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 64649,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 74811,
              "src": "110:4:197",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64652,
        "nodeType": "ImportDirective",
        "src": "162:73:197",
        "nodes": [],
        "absolutePath": "src/interfaces/external/Morpho/IMorphoV2.sol",
        "file": "src/interfaces/external/Morpho/IMorphoV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 65118,
        "sourceUnit": 53397,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64651,
              "name": "IMorphoV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53396,
              "src": "171:9:197",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64654,
        "nodeType": "ImportDirective",
        "src": "236:81:197",
        "nodes": [],
        "absolutePath": "src/interfaces/external/Morpho/IMorphoLensV2.sol",
        "file": "src/interfaces/external/Morpho/IMorphoLensV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 65118,
        "sourceUnit": 53306,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64653,
              "name": "IMorphoLensV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53305,
              "src": "245:13:197",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64656,
        "nodeType": "ImportDirective",
        "src": "318:90:197",
        "nodes": [],
        "absolutePath": "src/modules/adaptors/Morpho/MorphoRewardHandler.sol",
        "file": "src/modules/adaptors/Morpho/MorphoRewardHandler.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 65118,
        "sourceUnit": 66697,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64655,
              "name": "MorphoRewardHandler",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66696,
              "src": "327:19:197",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64658,
        "nodeType": "ImportDirective",
        "src": "409:68:197",
        "nodes": [],
        "absolutePath": "src/interfaces/external/IAaveToken.sol",
        "file": "src/interfaces/external/IAaveToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 65118,
        "sourceUnit": 49524,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64657,
              "name": "IAaveToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49523,
              "src": "418:10:197",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 65117,
        "nodeType": "ContractDefinition",
        "src": "621:8489:197",
        "nodes": [
          {
            "id": 64667,
            "nodeType": "UsingForDirective",
            "src": "698:32:197",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 64664,
              "name": "SafeTransferLib",
              "nameLocations": [
                "704:15:197"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46498,
              "src": "704:15:197"
            },
            "typeName": {
              "id": 64666,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 64665,
                "name": "ERC20",
                "nameLocations": [
                  "724:5:197"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45747,
                "src": "724:5:197"
              },
              "referencedDeclaration": 45747,
              "src": "724:5:197",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$45747",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 64670,
            "nodeType": "UsingForDirective",
            "src": "735:23:197",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 64668,
              "name": "Math",
              "nameLocations": [
                "741:4:197"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 74811,
              "src": "741:4:197"
            },
            "typeName": {
              "id": 64669,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "750:7:197",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 64674,
            "nodeType": "VariableDeclaration",
            "src": "1359:107:197",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 64671,
              "nodeType": "StructuredDocumentation",
              "src": "1138:216:197",
              "text": " @notice Bit mask used to determine if a cellar has any open borrow positions\n         by getting the cellar's userMarkets, and performing an AND operation\n         with the borrow mask."
            },
            "functionSelector": "b505e7a2",
            "mutability": "constant",
            "name": "BORROWING_MASK",
            "nameLocation": "1383:14:197",
            "scope": 65117,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 64672,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1359:7:197",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307835353535353535353535353535353535353535353535353535353535353535353535353535353535353535353535353535353535353535353535353535353535",
              "id": 64673,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1400:66:197",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_38597363079105398474523661669562635951089994888546854679819194669304376546645_by_1",
                "typeString": "int_const 3859...(69 digits omitted)...6645"
              },
              "value": "0x5555555555555555555555555555555555555555555555555555555555555555"
            },
            "visibility": "public"
          },
          {
            "id": 64677,
            "nodeType": "ErrorDefinition",
            "src": "1563:54:197",
            "nodes": [],
            "documentation": {
              "id": 64675,
              "nodeType": "StructuredDocumentation",
              "src": "1473:85:197",
              "text": "@notice Attempted withdraw would lower Cellar health factor too low."
            },
            "errorSelector": "34c91144",
            "name": "MorphoAaveV2ATokenAdaptor__HealthFactorTooLow",
            "nameLocation": "1569:45:197",
            "parameters": {
              "id": 64676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1614:2:197"
            }
          },
          {
            "id": 64681,
            "nodeType": "VariableDeclaration",
            "src": "1777:33:197",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 64678,
              "nodeType": "StructuredDocumentation",
              "src": "1623:149:197",
              "text": " @notice The Morpho Aave V2 contract on current network.\n @notice For mainnet use 0x777777c9898D384F785Ee44Acfe945efDFf5f3E0."
            },
            "functionSelector": "d8fbc833",
            "mutability": "immutable",
            "name": "morpho",
            "nameLocation": "1804:6:197",
            "scope": 65117,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMorphoV2_$53396",
              "typeString": "contract IMorphoV2"
            },
            "typeName": {
              "id": 64680,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 64679,
                "name": "IMorphoV2",
                "nameLocations": [
                  "1777:9:197"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53396,
                "src": "1777:9:197"
              },
              "referencedDeclaration": 53396,
              "src": "1777:9:197",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                "typeString": "contract IMorphoV2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 64685,
            "nodeType": "VariableDeclaration",
            "src": "1976:41:197",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 64682,
              "nodeType": "StructuredDocumentation",
              "src": "1817:154:197",
              "text": " @notice The Morpho Aave V2 Lens contract on current network.\n @notice For mainnet use 0x507fA343d0A90786d86C7cd885f5C49263A91FF4."
            },
            "functionSelector": "425734d3",
            "mutability": "immutable",
            "name": "morphoLens",
            "nameLocation": "2007:10:197",
            "scope": 65117,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMorphoLensV2_$53305",
              "typeString": "contract IMorphoLensV2"
            },
            "typeName": {
              "id": 64684,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 64683,
                "name": "IMorphoLensV2",
                "nameLocations": [
                  "1976:13:197"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53305,
                "src": "1976:13:197"
              },
              "referencedDeclaration": 53305,
              "src": "1976:13:197",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMorphoLensV2_$53305",
                "typeString": "contract IMorphoLensV2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 64688,
            "nodeType": "VariableDeclaration",
            "src": "2184:44:197",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 64686,
              "nodeType": "StructuredDocumentation",
              "src": "2024:155:197",
              "text": " @notice Minimum Health Factor enforced after every aToken withdraw.\n @notice Overwrites strategist set minimums if they are lower."
            },
            "functionSelector": "1caff8b1",
            "mutability": "immutable",
            "name": "minimumHealthFactor",
            "nameLocation": "2209:19:197",
            "scope": 65117,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 64687,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2184:7:197",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 64723,
            "nodeType": "FunctionDefinition",
            "src": "2235:383:197",
            "nodes": [],
            "body": {
              "id": 64722,
              "nodeType": "Block",
              "src": "2414:204:197",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64703,
                        "name": "minHealthFactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64694,
                        "src": "2462:15:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 64702,
                      "name": "_verifyConstructorMinimumHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61626,
                      "src": "2424:37:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) pure"
                      }
                    },
                    "id": 64704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2424:54:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64705,
                  "nodeType": "ExpressionStatement",
                  "src": "2424:54:197"
                },
                {
                  "expression": {
                    "id": 64710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64706,
                      "name": "morpho",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64681,
                      "src": "2488:6:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                        "typeString": "contract IMorphoV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 64708,
                          "name": "_morpho",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64690,
                          "src": "2507:7:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 64707,
                        "name": "IMorphoV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53396,
                        "src": "2497:9:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IMorphoV2_$53396_$",
                          "typeString": "type(contract IMorphoV2)"
                        }
                      },
                      "id": 64709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2497:18:197",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                        "typeString": "contract IMorphoV2"
                      }
                    },
                    "src": "2488:27:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                      "typeString": "contract IMorphoV2"
                    }
                  },
                  "id": 64711,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:27:197"
                },
                {
                  "expression": {
                    "id": 64716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64712,
                      "name": "morphoLens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64685,
                      "src": "2525:10:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMorphoLensV2_$53305",
                        "typeString": "contract IMorphoLensV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 64714,
                          "name": "_morphoLens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64692,
                          "src": "2552:11:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 64713,
                        "name": "IMorphoLensV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53305,
                        "src": "2538:13:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IMorphoLensV2_$53305_$",
                          "typeString": "type(contract IMorphoLensV2)"
                        }
                      },
                      "id": 64715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2538:26:197",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMorphoLensV2_$53305",
                        "typeString": "contract IMorphoLensV2"
                      }
                    },
                    "src": "2525:39:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMorphoLensV2_$53305",
                      "typeString": "contract IMorphoLensV2"
                    }
                  },
                  "id": 64717,
                  "nodeType": "ExpressionStatement",
                  "src": "2525:39:197"
                },
                {
                  "expression": {
                    "id": 64720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64718,
                      "name": "minimumHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64688,
                      "src": "2574:19:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 64719,
                      "name": "minHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64694,
                      "src": "2596:15:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2574:37:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64721,
                  "nodeType": "ExpressionStatement",
                  "src": "2574:37:197"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 64699,
                    "name": "rewardDistributor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 64696,
                    "src": "2395:17:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 64700,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 64698,
                  "name": "MorphoRewardHandler",
                  "nameLocations": [
                    "2375:19:197"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66696,
                  "src": "2375:19:197"
                },
                "nodeType": "ModifierInvocation",
                "src": "2375:38:197"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 64697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64690,
                  "mutability": "mutable",
                  "name": "_morpho",
                  "nameLocation": "2264:7:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 64723,
                  "src": "2256:15:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2256:7:197",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64692,
                  "mutability": "mutable",
                  "name": "_morphoLens",
                  "nameLocation": "2289:11:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 64723,
                  "src": "2281:19:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2281:7:197",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64694,
                  "mutability": "mutable",
                  "name": "minHealthFactor",
                  "nameLocation": "2318:15:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 64723,
                  "src": "2310:23:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2310:7:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64696,
                  "mutability": "mutable",
                  "name": "rewardDistributor",
                  "nameLocation": "2351:17:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 64723,
                  "src": "2343:25:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2343:7:197",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2246:128:197"
            },
            "returnParameters": {
              "id": 64701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2414:0:197"
            },
            "scope": 65117,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64738,
            "nodeType": "FunctionDefinition",
            "src": "3037:145:197",
            "nodes": [],
            "body": {
              "id": 64737,
              "nodeType": "Block",
              "src": "3098:84:197",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d6f7270686f20416176652056322061546f6b656e2041646170746f72205620312e32",
                            "id": 64733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3136:37:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4a2dae23e3b1312ed6fe4ce495c0cac8d7bd6b8de028aee507b4286973db6b81",
                              "typeString": "literal_string \"Morpho Aave V2 aToken Adaptor V 1.2\""
                            },
                            "value": "Morpho Aave V2 aToken Adaptor V 1.2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_4a2dae23e3b1312ed6fe4ce495c0cac8d7bd6b8de028aee507b4286973db6b81",
                              "typeString": "literal_string \"Morpho Aave V2 aToken Adaptor V 1.2\""
                            }
                          ],
                          "expression": {
                            "id": 64731,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3125:3:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 64732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3129:6:197",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3125:10:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 64734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3125:49:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 64730,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3115:9:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 64735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3115:60:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 64729,
                  "id": 64736,
                  "nodeType": "Return",
                  "src": "3108:67:197"
                }
              ]
            },
            "baseFunctions": [
              61410
            ],
            "documentation": {
              "id": 64724,
              "nodeType": "StructuredDocumentation",
              "src": "2736:296:197",
              "text": " @dev Identifier unique to this adaptor for a shared registry.\n Normally the identifier would just be the address of this contract, but this\n Identifier is needed during Cellar Delegate Call Operations, so getting the address\n of the adaptor is more difficult."
            },
            "functionSelector": "7998a1c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "identifier",
            "nameLocation": "3046:10:197",
            "overrides": {
              "id": 64726,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3071:8:197"
            },
            "parameters": {
              "id": 64725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:2:197"
            },
            "returnParameters": {
              "id": 64729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64728,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64738,
                  "src": "3089:7:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 64727,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3089:7:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3088:9:197"
            },
            "scope": 65117,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64797,
            "nodeType": "FunctionDefinition",
            "src": "3649:482:197",
            "nodes": [],
            "body": {
              "id": 64796,
              "nodeType": "Block",
              "src": "3738:393:197",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    64751
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64751,
                      "mutability": "mutable",
                      "name": "aToken",
                      "nameLocation": "3796:6:197",
                      "nodeType": "VariableDeclaration",
                      "scope": 64796,
                      "src": "3785:17:197",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveToken_$49523",
                        "typeString": "contract IAaveToken"
                      },
                      "typeName": {
                        "id": 64750,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64749,
                          "name": "IAaveToken",
                          "nameLocations": [
                            "3785:10:197"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49523,
                          "src": "3785:10:197"
                        },
                        "referencedDeclaration": 49523,
                        "src": "3785:10:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveToken_$49523",
                          "typeString": "contract IAaveToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64758,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64754,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64743,
                        "src": "3816:11:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 64755,
                            "name": "IAaveToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49523,
                            "src": "3830:10:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IAaveToken_$49523_$",
                              "typeString": "type(contract IAaveToken)"
                            }
                          }
                        ],
                        "id": 64756,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3829:12:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAaveToken_$49523_$",
                          "typeString": "type(contract IAaveToken)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_IAaveToken_$49523_$",
                          "typeString": "type(contract IAaveToken)"
                        }
                      ],
                      "expression": {
                        "id": 64752,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3805:3:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 64753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3809:6:197",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3805:10:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 64757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3805:37:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveToken_$49523",
                      "typeString": "contract IAaveToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3785:57:197"
                },
                {
                  "assignments": [
                    64761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64761,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "3858:10:197",
                      "nodeType": "VariableDeclaration",
                      "scope": 64796,
                      "src": "3852:16:197",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$45747",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 64760,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64759,
                          "name": "ERC20",
                          "nameLocations": [
                            "3852:5:197"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45747,
                          "src": "3852:5:197"
                        },
                        "referencedDeclaration": 45747,
                        "src": "3852:5:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64767,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 64763,
                            "name": "aToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64751,
                            "src": "3877:6:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveToken_$49523",
                              "typeString": "contract IAaveToken"
                            }
                          },
                          "id": 64764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3884:24:197",
                          "memberName": "UNDERLYING_ASSET_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49522,
                          "src": "3877:31:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 64765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3877:33:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64762,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45747,
                      "src": "3871:5:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 64766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3871:40:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3852:59:197"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64773,
                            "name": "morpho",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64681,
                            "src": "3952:6:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                              "typeString": "contract IMorphoV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                              "typeString": "contract IMorphoV2"
                            }
                          ],
                          "id": 64772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3944:7:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64771,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3944:7:197",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3944:15:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64775,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64741,
                        "src": "3961:6:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64768,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64761,
                        "src": "3921:10:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 64770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3932:11:197",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46497,
                      "src": "3921:22:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$45747_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 64776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3921:47:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64777,
                  "nodeType": "ExpressionStatement",
                  "src": "3921:47:197"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64783,
                            "name": "aToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64751,
                            "src": "4001:6:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveToken_$49523",
                              "typeString": "contract IAaveToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IAaveToken_$49523",
                              "typeString": "contract IAaveToken"
                            }
                          ],
                          "id": 64782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3993:7:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64781,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3993:7:197",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3993:15:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64785,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64741,
                        "src": "4010:6:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64778,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64681,
                        "src": "3979:6:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                          "typeString": "contract IMorphoV2"
                        }
                      },
                      "id": 64780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3986:6:197",
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53372,
                      "src": "3979:13:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 64786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3979:38:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64787,
                  "nodeType": "ExpressionStatement",
                  "src": "3979:38:197"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64789,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64761,
                        "src": "4096:10:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64792,
                            "name": "morpho",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64681,
                            "src": "4116:6:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                              "typeString": "contract IMorphoV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                              "typeString": "contract IMorphoV2"
                            }
                          ],
                          "id": 64791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4108:7:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64790,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4108:7:197",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4108:15:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64788,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61585,
                      "src": "4072:23:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 64794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:52:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64795,
                  "nodeType": "ExpressionStatement",
                  "src": "4072:52:197"
                }
              ]
            },
            "baseFunctions": [
              61454
            ],
            "documentation": {
              "id": 64739,
              "nodeType": "StructuredDocumentation",
              "src": "3308:336:197",
              "text": " @notice Cellar must approve Morpho to spend its assets, then call supply to lend its assets.\n @param assets the amount of assets to lend on Morpho\n @param adaptorData adaptor data containing the abi encoded aToken\n @dev configurationData is not used for deposits bc it only influences user withdraws"
            },
            "functionSelector": "69445c31",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "3658:7:197",
            "overrides": {
              "id": 64747,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3729:8:197"
            },
            "parameters": {
              "id": 64746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64741,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "3674:6:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 64797,
                  "src": "3666:14:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3666:7:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64743,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "3695:11:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 64797,
                  "src": "3682:24:197",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64742,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3682:5:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64745,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64797,
                  "src": "3708:12:197",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64744,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3708:5:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3665:56:197"
            },
            "returnParameters": {
              "id": 64748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3738:0:197"
            },
            "scope": 65117,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64843,
            "nodeType": "FunctionDefinition",
            "src": "4507:497:197",
            "nodes": [],
            "body": {
              "id": 64842,
              "nodeType": "Block",
              "src": "4615:389:197",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64811,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64802,
                        "src": "4688:8:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64810,
                      "name": "_externalReceiverCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61611,
                      "src": "4665:22:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 64812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4665:32:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64813,
                  "nodeType": "ExpressionStatement",
                  "src": "4665:32:197"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64817,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4790:4:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV2ATokenAdaptor_$65117",
                              "typeString": "contract MorphoAaveV2ATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV2ATokenAdaptor_$65117",
                              "typeString": "contract MorphoAaveV2ATokenAdaptor"
                            }
                          ],
                          "id": 64816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4782:7:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64815,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4782:7:197",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4782:13:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64814,
                      "name": "isBorrowingAny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65116,
                      "src": "4767:14:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 64819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4767:29:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64823,
                  "nodeType": "IfStatement",
                  "src": "4763:80:197",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 64820,
                        "name": "BaseAdaptor__UserWithdrawsNotAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61385,
                        "src": "4805:36:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 64821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4805:38:197",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 64822,
                    "nodeType": "RevertStatement",
                    "src": "4798:45:197"
                  }
                },
                {
                  "assignments": [
                    64825
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64825,
                      "mutability": "mutable",
                      "name": "aToken",
                      "nameLocation": "4862:6:197",
                      "nodeType": "VariableDeclaration",
                      "scope": 64842,
                      "src": "4854:14:197",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 64824,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4854:7:197",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64833,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64828,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64804,
                        "src": "4882:11:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 64830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4896:7:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 64829,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4896:7:197",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 64831,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4895:9:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 64826,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4871:3:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 64827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4875:6:197",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4871:10:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 64832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4871:34:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4854:51:197"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64837,
                        "name": "aToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64825,
                        "src": "4972:6:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64838,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64800,
                        "src": "4980:6:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 64839,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64802,
                        "src": "4988:8:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64834,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64681,
                        "src": "4956:6:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                          "typeString": "contract IMorphoV2"
                        }
                      },
                      "id": 64836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4963:8:197",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53395,
                      "src": "4956:15:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address) external"
                      }
                    },
                    "id": 64840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4956:41:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64841,
                  "nodeType": "ExpressionStatement",
                  "src": "4956:41:197"
                }
              ]
            },
            "baseFunctions": [
              61466
            ],
            "documentation": {
              "id": 64798,
              "nodeType": "StructuredDocumentation",
              "src": "4137:365:197",
              "text": " @notice Cellars must withdraw from Morpho\n @dev Important to verify that external receivers are allowed if receiver is not Cellar address.\n @param assets the amount of assets to withdraw from Morpho\n @param receiver the address to send withdrawn assets to\n @param adaptorData adaptor data containing the abi encoded aToken"
            },
            "functionSelector": "c9111bd7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "4516:8:197",
            "overrides": {
              "id": 64808,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4606:8:197"
            },
            "parameters": {
              "id": 64807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64800,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "4533:6:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 64843,
                  "src": "4525:14:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4525:7:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64802,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "4549:8:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 64843,
                  "src": "4541:16:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4541:7:197",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64804,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "4572:11:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 64843,
                  "src": "4559:24:197",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64803,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4559:5:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64806,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64843,
                  "src": "4585:12:197",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64805,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4585:5:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4524:74:197"
            },
            "returnParameters": {
              "id": 64809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4615:0:197"
            },
            "scope": 65117,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64879,
            "nodeType": "FunctionDefinition",
            "src": "5215:427:197",
            "nodes": [],
            "body": {
              "id": 64878,
              "nodeType": "Block",
              "src": "5320:322:197",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 64855,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5461:3:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 64856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5465:6:197",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5461:10:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64854,
                      "name": "isBorrowingAny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65116,
                      "src": "5446:14:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 64857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5446:26:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 64876,
                    "nodeType": "Block",
                    "src": "5497:139:197",
                    "statements": [
                      {
                        "assignments": [
                          64861
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 64861,
                            "mutability": "mutable",
                            "name": "aToken",
                            "nameLocation": "5519:6:197",
                            "nodeType": "VariableDeclaration",
                            "scope": 64876,
                            "src": "5511:14:197",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 64860,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5511:7:197",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 64869,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 64864,
                              "name": "adaptorData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64846,
                              "src": "5539:11:197",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 64866,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5553:7:197",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 64865,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5553:7:197",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 64867,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5552:9:197",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 64862,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5528:3:197",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 64863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5532:6:197",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5528:10:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 64868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5528:34:197",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5511:51:197"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 64871,
                              "name": "aToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64861,
                              "src": "5606:6:197",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 64872,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5614:3:197",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 64873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5618:6:197",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5614:10:197",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 64870,
                            "name": "_balanceOfInUnderlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65094,
                            "src": "5583:22:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 64874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5583:42:197",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 64853,
                        "id": 64875,
                        "nodeType": "Return",
                        "src": "5576:49:197"
                      }
                    ]
                  },
                  "id": 64877,
                  "nodeType": "IfStatement",
                  "src": "5442:194:197",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 64858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5481:1:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 64853,
                    "id": 64859,
                    "nodeType": "Return",
                    "src": "5474:8:197"
                  }
                }
              ]
            },
            "baseFunctions": [
              61484
            ],
            "documentation": {
              "id": 64844,
              "nodeType": "StructuredDocumentation",
              "src": "5010:200:197",
              "text": " @notice Checks if Cellar has open borrows, and if so returns zero.\n         Otherwise returns balanceOf in underlying.\n @param adaptorData the abi encoded aToken address"
            },
            "functionSelector": "fa50e5d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawableFrom",
            "nameLocation": "5224:16:197",
            "overrides": {
              "id": 64850,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5293:8:197"
            },
            "parameters": {
              "id": 64849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64846,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "5254:11:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 64879,
                  "src": "5241:24:197",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64845,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5241:5:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64848,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64879,
                  "src": "5267:12:197",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64847,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5267:5:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5240:40:197"
            },
            "returnParameters": {
              "id": 64853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64852,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64879,
                  "src": "5311:7:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5311:7:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5310:9:197"
            },
            "scope": 65117,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64905,
            "nodeType": "FunctionDefinition",
            "src": "5732:211:197",
            "nodes": [],
            "body": {
              "id": 64904,
              "nodeType": "Block",
              "src": "5816:127:197",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    64889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64889,
                      "mutability": "mutable",
                      "name": "aToken",
                      "nameLocation": "5834:6:197",
                      "nodeType": "VariableDeclaration",
                      "scope": 64904,
                      "src": "5826:14:197",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 64888,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5826:7:197",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64897,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64892,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64882,
                        "src": "5854:11:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 64894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5868:7:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 64893,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5868:7:197",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 64895,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5867:9:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 64890,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5843:3:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 64891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5847:6:197",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5843:10:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 64896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5843:34:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5826:51:197"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64899,
                        "name": "aToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64889,
                        "src": "5917:6:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 64900,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5925:3:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 64901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5929:6:197",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5925:10:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64898,
                      "name": "_balanceOfInUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65094,
                      "src": "5894:22:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 64902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5894:42:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 64887,
                  "id": 64903,
                  "nodeType": "Return",
                  "src": "5887:49:197"
                }
              ]
            },
            "baseFunctions": [
              61474
            ],
            "documentation": {
              "id": 64880,
              "nodeType": "StructuredDocumentation",
              "src": "5648:79:197",
              "text": " @notice Returns the cellars balance of the positions aToken."
            },
            "functionSelector": "78415365",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5741:9:197",
            "overrides": {
              "id": 64884,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5789:8:197"
            },
            "parameters": {
              "id": 64883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64882,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "5764:11:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 64905,
                  "src": "5751:24:197",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64881,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5751:5:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5750:26:197"
            },
            "returnParameters": {
              "id": 64887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64886,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64905,
                  "src": "5807:7:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5807:7:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5806:9:197"
            },
            "scope": 65117,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64932,
            "nodeType": "FunctionDefinition",
            "src": "6027:209:197",
            "nodes": [],
            "body": {
              "id": 64931,
              "nodeType": "Block",
              "src": "6107:129:197",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    64917
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64917,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "6128:5:197",
                      "nodeType": "VariableDeclaration",
                      "scope": 64931,
                      "src": "6117:16:197",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveToken_$49523",
                        "typeString": "contract IAaveToken"
                      },
                      "typeName": {
                        "id": 64916,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64915,
                          "name": "IAaveToken",
                          "nameLocations": [
                            "6117:10:197"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49523,
                          "src": "6117:10:197"
                        },
                        "referencedDeclaration": 49523,
                        "src": "6117:10:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveToken_$49523",
                          "typeString": "contract IAaveToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64924,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64920,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64908,
                        "src": "6147:11:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 64921,
                            "name": "IAaveToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49523,
                            "src": "6161:10:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IAaveToken_$49523_$",
                              "typeString": "type(contract IAaveToken)"
                            }
                          }
                        ],
                        "id": 64922,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6160:12:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAaveToken_$49523_$",
                          "typeString": "type(contract IAaveToken)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_IAaveToken_$49523_$",
                          "typeString": "type(contract IAaveToken)"
                        }
                      ],
                      "expression": {
                        "id": 64918,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6136:3:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 64919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6140:6:197",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6136:10:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 64923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6136:37:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveToken_$49523",
                      "typeString": "contract IAaveToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6117:56:197"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 64926,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64917,
                            "src": "6196:5:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveToken_$49523",
                              "typeString": "contract IAaveToken"
                            }
                          },
                          "id": 64927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6202:24:197",
                          "memberName": "UNDERLYING_ASSET_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49522,
                          "src": "6196:30:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 64928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6196:32:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64925,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45747,
                      "src": "6190:5:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 64929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6190:39:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "functionReturnParameters": 64914,
                  "id": 64930,
                  "nodeType": "Return",
                  "src": "6183:46:197"
                }
              ]
            },
            "baseFunctions": [
              61493
            ],
            "documentation": {
              "id": 64906,
              "nodeType": "StructuredDocumentation",
              "src": "5949:73:197",
              "text": " @notice Returns the positions aToken underlying asset."
            },
            "functionSelector": "e170a9bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetOf",
            "nameLocation": "6036:7:197",
            "overrides": {
              "id": 64910,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6082:8:197"
            },
            "parameters": {
              "id": 64909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64908,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "6057:11:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 64932,
                  "src": "6044:24:197",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64907,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6044:5:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6043:26:197"
            },
            "returnParameters": {
              "id": 64914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64932,
                  "src": "6100:5:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$45747",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 64912,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64911,
                      "name": "ERC20",
                      "nameLocations": [
                        "6100:5:197"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45747,
                      "src": "6100:5:197"
                    },
                    "referencedDeclaration": 45747,
                    "src": "6100:5:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6099:7:197"
            },
            "scope": 65117,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64942,
            "nodeType": "FunctionDefinition",
            "src": "6320:83:197",
            "nodes": [],
            "body": {
              "id": 64941,
              "nodeType": "Block",
              "src": "6374:29:197",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 64939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6391:5:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 64938,
                  "id": 64940,
                  "nodeType": "Return",
                  "src": "6384:12:197"
                }
              ]
            },
            "baseFunctions": [
              61527
            ],
            "documentation": {
              "id": 64933,
              "nodeType": "StructuredDocumentation",
              "src": "6242:73:197",
              "text": " @notice This adaptor returns collateral, and not debt."
            },
            "functionSelector": "89353a09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDebt",
            "nameLocation": "6329:6:197",
            "overrides": {
              "id": 64935,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6350:8:197"
            },
            "parameters": {
              "id": 64934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6335:2:197"
            },
            "returnParameters": {
              "id": 64938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64937,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64942,
                  "src": "6368:4:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64936,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6368:4:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6367:6:197"
            },
            "scope": 65117,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64996,
            "nodeType": "FunctionDefinition",
            "src": "6801:458:197",
            "nodes": [],
            "body": {
              "id": 64995,
              "nodeType": "Block",
              "src": "6883:376:197",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    64953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64953,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "6899:10:197",
                      "nodeType": "VariableDeclaration",
                      "scope": 64995,
                      "src": "6893:16:197",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$45747",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 64952,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64951,
                          "name": "ERC20",
                          "nameLocations": [
                            "6893:5:197"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45747,
                          "src": "6893:5:197"
                        },
                        "referencedDeclaration": 45747,
                        "src": "6893:5:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64959,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 64955,
                            "name": "aToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64946,
                            "src": "6918:6:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveToken_$49523",
                              "typeString": "contract IAaveToken"
                            }
                          },
                          "id": 64956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6925:24:197",
                          "memberName": "UNDERLYING_ASSET_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49522,
                          "src": "6918:31:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 64957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6918:33:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64954,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45747,
                      "src": "6912:5:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 64958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6912:40:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6893:59:197"
                },
                {
                  "expression": {
                    "id": 64965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64960,
                      "name": "amountToDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64948,
                      "src": "6962:15:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 64962,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64953,
                          "src": "6994:10:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$45747",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 64963,
                          "name": "amountToDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64948,
                          "src": "7006:15:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$45747",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 64961,
                        "name": "_maxAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61557,
                        "src": "6980:13:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$45747_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,uint256) view returns (uint256)"
                        }
                      },
                      "id": 64964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6980:42:197",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6962:60:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64966,
                  "nodeType": "ExpressionStatement",
                  "src": "6962:60:197"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64972,
                            "name": "morpho",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64681,
                            "src": "7063:6:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                              "typeString": "contract IMorphoV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                              "typeString": "contract IMorphoV2"
                            }
                          ],
                          "id": 64971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7055:7:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64970,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7055:7:197",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7055:15:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64974,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64948,
                        "src": "7072:15:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64967,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64953,
                        "src": "7032:10:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 64969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7043:11:197",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46497,
                      "src": "7032:22:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$45747_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 64975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7032:56:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64976,
                  "nodeType": "ExpressionStatement",
                  "src": "7032:56:197"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64982,
                            "name": "aToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64946,
                            "src": "7120:6:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveToken_$49523",
                              "typeString": "contract IAaveToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IAaveToken_$49523",
                              "typeString": "contract IAaveToken"
                            }
                          ],
                          "id": 64981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7112:7:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64980,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7112:7:197",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7112:15:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64984,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64948,
                        "src": "7129:15:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64977,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64681,
                        "src": "7098:6:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                          "typeString": "contract IMorphoV2"
                        }
                      },
                      "id": 64979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7105:6:197",
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53372,
                      "src": "7098:13:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 64985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7098:47:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64986,
                  "nodeType": "ExpressionStatement",
                  "src": "7098:47:197"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64988,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64953,
                        "src": "7224:10:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64991,
                            "name": "morpho",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64681,
                            "src": "7244:6:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                              "typeString": "contract IMorphoV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                              "typeString": "contract IMorphoV2"
                            }
                          ],
                          "id": 64990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7236:7:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64989,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7236:7:197",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7236:15:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64987,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61585,
                      "src": "7200:23:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 64993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7200:52:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64994,
                  "nodeType": "ExpressionStatement",
                  "src": "7200:52:197"
                }
              ]
            },
            "documentation": {
              "id": 64943,
              "nodeType": "StructuredDocumentation",
              "src": "6525:271:197",
              "text": " @notice Allows strategists to lend assets on Morpho.\n @dev Uses `_maxAvailable` helper function, see BaseAdaptor.sol\n @param aToken the aToken to lend on Morpho\n @param amountToDeposit the amount of `tokenToDeposit` to lend on Morpho."
            },
            "functionSelector": "5528481b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToAaveV2Morpho",
            "nameLocation": "6810:21:197",
            "parameters": {
              "id": 64949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64946,
                  "mutability": "mutable",
                  "name": "aToken",
                  "nameLocation": "6843:6:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 64996,
                  "src": "6832:17:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAaveToken_$49523",
                    "typeString": "contract IAaveToken"
                  },
                  "typeName": {
                    "id": 64945,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64944,
                      "name": "IAaveToken",
                      "nameLocations": [
                        "6832:10:197"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49523,
                      "src": "6832:10:197"
                    },
                    "referencedDeclaration": 49523,
                    "src": "6832:10:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveToken_$49523",
                      "typeString": "contract IAaveToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64948,
                  "mutability": "mutable",
                  "name": "amountToDeposit",
                  "nameLocation": "6859:15:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 64996,
                  "src": "6851:23:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6851:7:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6831:44:197"
            },
            "returnParameters": {
              "id": 64950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6883:0:197"
            },
            "scope": 65117,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65037,
            "nodeType": "FunctionDefinition",
            "src": "7491:413:197",
            "nodes": [],
            "body": {
              "id": 65036,
              "nodeType": "Block",
              "src": "7577:327:197",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65010,
                            "name": "aToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65000,
                            "src": "7611:6:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveToken_$49523",
                              "typeString": "contract IAaveToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IAaveToken_$49523",
                              "typeString": "contract IAaveToken"
                            }
                          ],
                          "id": 65009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7603:7:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65008,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7603:7:197",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7603:15:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65012,
                        "name": "amountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65002,
                        "src": "7620:16:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65015,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7646:4:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV2ATokenAdaptor_$65117",
                              "typeString": "contract MorphoAaveV2ATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV2ATokenAdaptor_$65117",
                              "typeString": "contract MorphoAaveV2ATokenAdaptor"
                            }
                          ],
                          "id": 65014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7638:7:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65013,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7638:7:197",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7638:13:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 65005,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64681,
                        "src": "7587:6:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                          "typeString": "contract IMorphoV2"
                        }
                      },
                      "id": 65007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7594:8:197",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53395,
                      "src": "7587:15:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address) external"
                      }
                    },
                    "id": 65017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7587:65:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65018,
                  "nodeType": "ExpressionStatement",
                  "src": "7587:65:197"
                },
                {
                  "assignments": [
                    65020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65020,
                      "mutability": "mutable",
                      "name": "healthFactor",
                      "nameLocation": "7733:12:197",
                      "nodeType": "VariableDeclaration",
                      "scope": 65036,
                      "src": "7725:20:197",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65019,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7725:7:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65028,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65025,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7787:4:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV2ATokenAdaptor_$65117",
                              "typeString": "contract MorphoAaveV2ATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV2ATokenAdaptor_$65117",
                              "typeString": "contract MorphoAaveV2ATokenAdaptor"
                            }
                          ],
                          "id": 65024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7779:7:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65023,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7779:7:197",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7779:13:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 65021,
                        "name": "morphoLens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64685,
                        "src": "7748:10:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoLensV2_$53305",
                          "typeString": "contract IMorphoLensV2"
                        }
                      },
                      "id": 65022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7759:19:197",
                      "memberName": "getUserHealthFactor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53304,
                      "src": "7748:30:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 65027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7748:45:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7725:68:197"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 65031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 65029,
                      "name": "healthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65020,
                      "src": "7807:12:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 65030,
                      "name": "minimumHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64688,
                      "src": "7822:19:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7807:34:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65035,
                  "nodeType": "IfStatement",
                  "src": "7803:94:197",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 65032,
                        "name": "MorphoAaveV2ATokenAdaptor__HealthFactorTooLow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64677,
                        "src": "7850:45:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 65033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7850:47:197",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 65034,
                    "nodeType": "RevertStatement",
                    "src": "7843:54:197"
                  }
                }
              ]
            },
            "documentation": {
              "id": 64997,
              "nodeType": "StructuredDocumentation",
              "src": "7265:221:197",
              "text": " @notice Allows strategists to withdraw assets from Morpho.\n @param aToken the atoken to withdraw from Morpho.\n @param amountToWithdraw the amount of `tokenToWithdraw` to withdraw from Morpho"
            },
            "functionSelector": "872de812",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFromAaveV2Morpho",
            "nameLocation": "7500:24:197",
            "parameters": {
              "id": 65003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65000,
                  "mutability": "mutable",
                  "name": "aToken",
                  "nameLocation": "7536:6:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 65037,
                  "src": "7525:17:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAaveToken_$49523",
                    "typeString": "contract IAaveToken"
                  },
                  "typeName": {
                    "id": 64999,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64998,
                      "name": "IAaveToken",
                      "nameLocations": [
                        "7525:10:197"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49523,
                      "src": "7525:10:197"
                    },
                    "referencedDeclaration": 49523,
                    "src": "7525:10:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveToken_$49523",
                      "typeString": "contract IAaveToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65002,
                  "mutability": "mutable",
                  "name": "amountToWithdraw",
                  "nameLocation": "7552:16:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 65037,
                  "src": "7544:24:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7544:7:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7524:45:197"
            },
            "returnParameters": {
              "id": 65004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7577:0:197"
            },
            "scope": 65117,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65094,
            "nodeType": "FunctionDefinition",
            "src": "8135:557:197",
            "nodes": [],
            "body": {
              "id": 65093,
              "nodeType": "Block",
              "src": "8232:460:197",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    65048,
                    65050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65048,
                      "mutability": "mutable",
                      "name": "inP2P",
                      "nameLocation": "8251:5:197",
                      "nodeType": "VariableDeclaration",
                      "scope": 65093,
                      "src": "8243:13:197",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65047,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8243:7:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65050,
                      "mutability": "mutable",
                      "name": "onPool",
                      "nameLocation": "8266:6:197",
                      "nodeType": "VariableDeclaration",
                      "scope": 65093,
                      "src": "8258:14:197",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65049,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8258:7:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65056,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 65053,
                        "name": "poolToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65040,
                        "src": "8301:9:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65054,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65042,
                        "src": "8312:4:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 65051,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64681,
                        "src": "8276:6:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                          "typeString": "contract IMorphoV2"
                        }
                      },
                      "id": 65052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8283:17:197",
                      "memberName": "supplyBalanceInOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53343,
                      "src": "8276:24:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 65055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8276:41:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8242:75:197"
                },
                {
                  "assignments": [
                    65058
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65058,
                      "mutability": "mutable",
                      "name": "balanceInUnderlying",
                      "nameLocation": "8336:19:197",
                      "nodeType": "VariableDeclaration",
                      "scope": 65093,
                      "src": "8328:27:197",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65057,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8328:7:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65059,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8328:27:197"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 65062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 65060,
                      "name": "inP2P",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65048,
                      "src": "8441:5:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 65061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8449:1:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8441:9:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65074,
                  "nodeType": "IfStatement",
                  "src": "8437:93:197",
                  "trueBody": {
                    "expression": {
                      "id": 65072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 65063,
                        "name": "balanceInUnderlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65058,
                        "src": "8452:19:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 65068,
                                "name": "poolToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65040,
                                "src": "8513:9:197",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 65066,
                                "name": "morpho",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64681,
                                "src": "8491:6:197",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                                  "typeString": "contract IMorphoV2"
                                }
                              },
                              "id": 65067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8498:14:197",
                              "memberName": "p2pSupplyIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53358,
                              "src": "8491:21:197",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 65069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8491:32:197",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31653237",
                            "id": 65070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8525:4:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000000000"
                            },
                            "value": "1e27"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 65064,
                            "name": "inP2P",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65048,
                            "src": "8474:5:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 65065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8480:10:197",
                          "memberName": "mulDivDown",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74797,
                          "src": "8474:16:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 65071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8474:56:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8452:78:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 65073,
                    "nodeType": "ExpressionStatement",
                    "src": "8452:78:197"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 65077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 65075,
                      "name": "onPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65050,
                      "src": "8544:6:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 65076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8553:1:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8544:10:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65090,
                  "nodeType": "IfStatement",
                  "src": "8540:109:197",
                  "trueBody": {
                    "expression": {
                      "id": 65088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 65078,
                        "name": "balanceInUnderlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65058,
                        "src": "8556:19:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 65083,
                                  "name": "poolToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65040,
                                  "src": "8616:9:197",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 65081,
                                  "name": "morpho",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64681,
                                  "src": "8597:6:197",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                                    "typeString": "contract IMorphoV2"
                                  }
                                },
                                "id": 65082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8604:11:197",
                                "memberName": "poolIndexes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 53351,
                                "src": "8597:18:197",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_PoolIndexes_$53314_memory_ptr_$",
                                  "typeString": "function (address) view external returns (struct IMorphoV2.PoolIndexes memory)"
                                }
                              },
                              "id": 65084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8597:29:197",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolIndexes_$53314_memory_ptr",
                                "typeString": "struct IMorphoV2.PoolIndexes memory"
                              }
                            },
                            "id": 65085,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8627:15:197",
                            "memberName": "poolSupplyIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53311,
                            "src": "8597:45:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          {
                            "hexValue": "31653237",
                            "id": 65086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8644:4:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000000000"
                            },
                            "value": "1e27"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 65079,
                            "name": "onPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65050,
                            "src": "8579:6:197",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 65080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8586:10:197",
                          "memberName": "mulDivDown",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74797,
                          "src": "8579:17:197",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 65087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8579:70:197",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8556:93:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 65089,
                    "nodeType": "ExpressionStatement",
                    "src": "8556:93:197"
                  }
                },
                {
                  "expression": {
                    "id": 65091,
                    "name": "balanceInUnderlying",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 65058,
                    "src": "8666:19:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 65046,
                  "id": 65092,
                  "nodeType": "Return",
                  "src": "8659:26:197"
                }
              ]
            },
            "documentation": {
              "id": 65038,
              "nodeType": "StructuredDocumentation",
              "src": "7910:220:197",
              "text": " @notice Returns the balance in underlying of collateral.\n @param poolToken the Aave V2 a Token user has supplied as collateral\n @param user the address of the user to query their balance of"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_balanceOfInUnderlying",
            "nameLocation": "8144:22:197",
            "parameters": {
              "id": 65043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65040,
                  "mutability": "mutable",
                  "name": "poolToken",
                  "nameLocation": "8175:9:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 65094,
                  "src": "8167:17:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8167:7:197",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65042,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8194:4:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 65094,
                  "src": "8186:12:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8186:7:197",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8166:33:197"
            },
            "returnParameters": {
              "id": 65046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65045,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65094,
                  "src": "8223:7:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8223:7:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8222:9:197"
            },
            "scope": 65117,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 65116,
            "nodeType": "FunctionDefinition",
            "src": "8930:178:197",
            "nodes": [],
            "body": {
              "id": 65115,
              "nodeType": "Block",
              "src": "8995:113:197",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    65103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65103,
                      "mutability": "mutable",
                      "name": "userMarkets",
                      "nameLocation": "9013:11:197",
                      "nodeType": "VariableDeclaration",
                      "scope": 65115,
                      "src": "9005:19:197",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 65102,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9005:7:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65108,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 65106,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65097,
                        "src": "9046:4:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 65104,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64681,
                        "src": "9027:6:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV2_$53396",
                          "typeString": "contract IMorphoV2"
                        }
                      },
                      "id": 65105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9034:11:197",
                      "memberName": "userMarkets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53321,
                      "src": "9027:18:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (address) view external returns (bytes32)"
                      }
                    },
                    "id": 65107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9027:24:197",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9005:46:197"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 65113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 65111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 65109,
                        "name": "userMarkets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65103,
                        "src": "9068:11:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&",
                      "rightExpression": {
                        "id": 65110,
                        "name": "BORROWING_MASK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64674,
                        "src": "9082:14:197",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "9068:28:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 65112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9100:1:197",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9068:33:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 65101,
                  "id": 65114,
                  "nodeType": "Return",
                  "src": "9061:40:197"
                }
              ]
            },
            "documentation": {
              "id": 65095,
              "nodeType": "StructuredDocumentation",
              "src": "8698:227:197",
              "text": " @dev Returns if a user has been borrowing from any market.\n @param user The address to check if it is borrowing or not.\n @return True if the user has been borrowing on any market, false otherwise."
            },
            "functionSelector": "2f93417c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBorrowingAny",
            "nameLocation": "8939:14:197",
            "parameters": {
              "id": 65098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65097,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8962:4:197",
                  "nodeType": "VariableDeclaration",
                  "scope": 65116,
                  "src": "8954:12:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8954:7:197",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8953:14:197"
            },
            "returnParameters": {
              "id": 65101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65116,
                  "src": "8989:4:197",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 65099,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8989:4:197",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8988:6:197"
            },
            "scope": 65117,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 64660,
              "name": "BaseAdaptor",
              "nameLocations": [
                "659:11:197"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61644,
              "src": "659:11:197"
            },
            "id": 64661,
            "nodeType": "InheritanceSpecifier",
            "src": "659:11:197"
          },
          {
            "baseName": {
              "id": 64662,
              "name": "MorphoRewardHandler",
              "nameLocations": [
                "672:19:197"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66696,
              "src": "672:19:197"
            },
            "id": 64663,
            "nodeType": "InheritanceSpecifier",
            "src": "672:19:197"
          }
        ],
        "canonicalName": "MorphoAaveV2ATokenAdaptor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 64659,
          "nodeType": "StructuredDocumentation",
          "src": "479:141:197",
          "text": " @title Morpho Aave V2 aToken Adaptor\n @notice Allows Cellars to interact with Morpho Aave V2 positions.\n @author crispymangoes"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          65117,
          66696,
          61644
        ],
        "name": "MorphoAaveV2ATokenAdaptor",
        "nameLocation": "630:25:197",
        "scope": 65118,
        "usedErrors": [
          61379,
          61382,
          61385,
          61388,
          61393,
          61396,
          64677
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 197
}