{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_morpho",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minHealthFactor",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "rewardDistributor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__ConstructorHealthFactorTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__ExternalReceiverBlocked",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "BaseAdaptor__PricingNotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__Slippage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserDepositsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserWithdrawsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MorphoAaveV3ATokenCollateralAdaptor__HealthFactorTooLow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetOf",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetsUsed",
      "outputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimable",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "tokenToDeposit",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToDeposit",
          "type": "uint256"
        }
      ],
      "name": "depositToAaveV3Morpho",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDebt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumHealthFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "morpho",
      "outputs": [
        {
          "internalType": "contract IMorphoV3",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "morphoRewardsDistributor",
      "outputs": [
        {
          "internalType": "contract RewardsDistributor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "revokeApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippage",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "tokenToWithdraw",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToWithdraw",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromAaveV3Morpho",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "withdrawableFrom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b5060405162001518380380620015188339810160408190526200003491620000ae565b6001600160a01b0381166080526200004c8262000064565b506001600160a01b0390911660a05260c052620000ef565b670e92596fd62900008110156200008e576040516397ed5f4160e01b815260040160405180910390fd5b50565b80516001600160a01b0381168114620000a957600080fd5b919050565b600080600060608486031215620000c457600080fd5b620000cf8462000091565b925060208401519150620000e66040850162000091565b90509250925092565b60805160a05160c051611390620001886000396000818161010a01526103f001526000818161025101528181610352015281816103c70152818161044f015281816104a00152818161051401528181610563015281816105b40152818161062801528181610691015281816107fe015281816108e5015281816109ab0152610a6c01526000818161018f01526102b001526113906000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637998a1c411610097578063d3bfe76a11610066578063d3bfe76a14610239578063d8fbc8331461024c578063e170a9bf14610273578063fa50e5d21461028657600080fd5b80637998a1c4146101ef57806389353a09146101f7578063aeffddde14610206578063c9111bd71461022657600080fd5b806353cbf54c116100d357806353cbf54c146101775780635b5d4d781461018a57806369445c31146101c957806378415365146101dc57600080fd5b80631caff8b1146101055780632f52ebb71461013f57806337761272146101545780633e032a3b14610167575b600080fd5b61012c7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61015261014d366004610e3a565b610299565b005b610152610162366004610ef1565b61031f565b6040516123288152602001610136565b610152610185366004610ef1565b610434565b6101b17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610136565b6101526101d7366004610f8d565b61053c565b61012c6101ea366004610ffa565b610652565b61012c610705565b60405160008152602001610136565b610219610214366004610ffa565b61077a565b604051610136919061102f565b61015261023436600461107c565b6107dd565b6101526102473660046110fc565b61095d565b6101b17f000000000000000000000000000000000000000000000000000000000000000081565b6101b1610281366004610ffa565b610972565b61012c610294366004611135565b610989565b604051630f44fe1d60e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d13f874906102e990309086908690600401611199565b600060405180830381600087803b15801561030357600080fd5b505af1158015610317573d6000803e3d6000fd5b505050505050565b604051632bbccf0160e01b81526001600160a01b03838116600483015260248201839052306044830181905260648301527f00000000000000000000000000000000000000000000000000000000000000001690632bbccf01906084016020604051808303816000875af115801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf91906111f6565b5060006103ec7f000000000000000000000000000000000000000000000000000000000000000030610ae4565b90507f000000000000000000000000000000000000000000000000000000000000000081101561042f57604051631976ce1360e31b815260040160405180910390fd5b505050565b61043e8282610b8e565b90506104746001600160a01b0383167f000000000000000000000000000000000000000000000000000000000000000083610c0f565b604051636c887d3360e11b81526001600160a01b038381166004830152602482018390523060448301527f0000000000000000000000000000000000000000000000000000000000000000169063d910fa66906064016020604051808303816000875af11580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d91906111f6565b50610538827f0000000000000000000000000000000000000000000000000000000000000000610c8a565b5050565b600082806020019051810190610552919061120f565b90506105886001600160a01b0382167f000000000000000000000000000000000000000000000000000000000000000086610c0f565b604051636c887d3360e11b81526001600160a01b038281166004830152602482018690523060448301527f0000000000000000000000000000000000000000000000000000000000000000169063d910fa66906064016020604051808303816000875af11580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062191906111f6565b5061064c817f0000000000000000000000000000000000000000000000000000000000000000610c8a565b50505050565b60008082806020019051810190610669919061120f565b60405163e7602b9d60e01b81526001600160a01b0380831660048301523360248301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063e7602b9d90604401602060405180830381865afa1580156106da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fe91906111f6565b9392505050565b600060405160200161075f906020808252602e908201527f4d6f7270686f20416176652056332061546f6b656e20436f6c6c61746572616c60408201526d1020b230b83a37b9102b1018971960911b606082015260800190565b60405160208183030381529060405280519060200120905090565b604080516001808252818301909252606091602080830190803683370190505090506107a582610972565b816000815181106107b8576107b861122c565b60200260200101906001600160a01b031690816001600160a01b031681525050919050565b6107e683610d19565b604051631dd64f3160e21b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906377593cc490602401600060405180830381865afa15801561084d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108759190810190611242565b80519091501561089857604051635f5003c560e11b815260040160405180910390fd5b6000838060200190518101906108ae919061120f565b604051632bbccf0160e01b81526001600160a01b0380831660048301526024820189905230604483015287811660648301529192507f000000000000000000000000000000000000000000000000000000000000000090911690632bbccf01906084016020604051808303816000875af1158015610930573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095491906111f6565b50505050505050565b6105386001600160a01b038316826000610c0f565b600080828060200190518101906106fe919061120f565b604051631dd64f3160e21b815233600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906377593cc490602401600060405180830381865afa1580156109f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a1a9190810190611242565b805190915015610a2e576000915050610ade565b600084806020019051810190610a44919061120f565b60405163e7602b9d60e01b81526001600160a01b0380831660048301523360248301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063e7602b9d90604401602060405180830381865afa158015610ab5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad991906111f6565b925050505b92915050565b604051632459428560e11b81526001600160a01b03828116600483015260009182918516906348b2850a90602401606060405180830381865afa158015610b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5391906112dc565b90506000816040015111610b6957600019610b86565b60208101516040820151610b8691670de0b6b3a764000091610db0565b949350505050565b60006000198203610c08576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0191906111f6565b9050610ade565b5080610ade565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061064c5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa158015610cda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfe91906111f6565b1115610538576105386001600160a01b038316826000610c0f565b6001600160a01b0381163014801590610d8f5750306001600160a01b0316634c4602da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8f9190611338565b15610dad576040516307de9b5160e21b815260040160405180910390fd5b50565b828202811515841585830485141716610dc857600080fd5b0492915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e0e57610e0e610dcf565b604052919050565b600067ffffffffffffffff821115610e3057610e30610dcf565b5060051b60200190565b60008060408385031215610e4d57600080fd5b8235915060208084013567ffffffffffffffff811115610e6c57600080fd5b8401601f81018613610e7d57600080fd5b8035610e90610e8b82610e16565b610de5565b81815260059190911b82018301908381019088831115610eaf57600080fd5b928401925b82841015610ecd57833582529284019290840190610eb4565b80955050505050509250929050565b6001600160a01b0381168114610dad57600080fd5b60008060408385031215610f0457600080fd5b8235610f0f81610edc565b946020939093013593505050565b600082601f830112610f2e57600080fd5b813567ffffffffffffffff811115610f4857610f48610dcf565b610f5b601f8201601f1916602001610de5565b818152846020838601011115610f7057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215610fa257600080fd5b83359250602084013567ffffffffffffffff80821115610fc157600080fd5b610fcd87838801610f1d565b93506040860135915080821115610fe357600080fd5b50610ff086828701610f1d565b9150509250925092565b60006020828403121561100c57600080fd5b813567ffffffffffffffff81111561102357600080fd5b610b8684828501610f1d565b6020808252825182820181905260009190848201906040850190845b818110156110705783516001600160a01b03168352928401929184019160010161104b565b50909695505050505050565b6000806000806080858703121561109257600080fd5b8435935060208501356110a481610edc565b9250604085013567ffffffffffffffff808211156110c157600080fd5b6110cd88838901610f1d565b935060608701359150808211156110e357600080fd5b506110f087828801610f1d565b91505092959194509250565b6000806040838503121561110f57600080fd5b823561111a81610edc565b9150602083013561112a81610edc565b809150509250929050565b6000806040838503121561114857600080fd5b823567ffffffffffffffff8082111561116057600080fd5b61116c86838701610f1d565b9350602085013591508082111561118257600080fd5b5061118f85828601610f1d565b9150509250929050565b6001600160a01b038416815260208082018490526060604083018190528351908301819052600091848101916080850190845b818110156111e8578451835293830193918301916001016111cc565b509098975050505050505050565b60006020828403121561120857600080fd5b5051919050565b60006020828403121561122157600080fd5b81516106fe81610edc565b634e487b7160e01b600052603260045260246000fd5b6000602080838503121561125557600080fd5b825167ffffffffffffffff81111561126c57600080fd5b8301601f8101851361127d57600080fd5b805161128b610e8b82610e16565b81815260059190911b820183019083810190878311156112aa57600080fd5b928401925b828410156112d15783516112c281610edc565b825292840192908401906112af565b979650505050505050565b6000606082840312156112ee57600080fd5b6040516060810181811067ffffffffffffffff8211171561131157611311610dcf565b80604052508251815260208301516020820152604083015160408201528091505092915050565b60006020828403121561134a57600080fd5b815180151581146106fe57600080fdfea264697066735822122022fe2e674f50c4799da7354f6ba002f00b78639102020302980a5c158bc7557164736f6c63430008100033",
    "sourceMap": "575:6593:199:-:0;;;1600:305;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;629:72:203;;;;1760:54:199::1;1798:15:::0;1760:37:::1;:54::i;:::-;-1:-1:-1::0;;;;;;1824:27:199;;::::1;;::::0;1861:37:::1;::::0;575:6593;;8743:233:188;2760:7;8847:19;:57;8843:126;;;8925:44;;-1:-1:-1;;;8925:44:188;;;;;;;;;;;8843:126;8743:233;:::o;14:177:258:-;93:13;;-1:-1:-1;;;;;135:31:258;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;472:2;461:9;457:18;451:25;441:35;;495:49;540:2;529:9;525:18;495:49;:::i;:::-;485:59;;196:354;;;;;:::o;:::-;575:6593:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80637998a1c411610097578063d3bfe76a11610066578063d3bfe76a14610239578063d8fbc8331461024c578063e170a9bf14610273578063fa50e5d21461028657600080fd5b80637998a1c4146101ef57806389353a09146101f7578063aeffddde14610206578063c9111bd71461022657600080fd5b806353cbf54c116100d357806353cbf54c146101775780635b5d4d781461018a57806369445c31146101c957806378415365146101dc57600080fd5b80631caff8b1146101055780632f52ebb71461013f57806337761272146101545780633e032a3b14610167575b600080fd5b61012c7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61015261014d366004610e3a565b610299565b005b610152610162366004610ef1565b61031f565b6040516123288152602001610136565b610152610185366004610ef1565b610434565b6101b17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610136565b6101526101d7366004610f8d565b61053c565b61012c6101ea366004610ffa565b610652565b61012c610705565b60405160008152602001610136565b610219610214366004610ffa565b61077a565b604051610136919061102f565b61015261023436600461107c565b6107dd565b6101526102473660046110fc565b61095d565b6101b17f000000000000000000000000000000000000000000000000000000000000000081565b6101b1610281366004610ffa565b610972565b61012c610294366004611135565b610989565b604051630f44fe1d60e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d13f874906102e990309086908690600401611199565b600060405180830381600087803b15801561030357600080fd5b505af1158015610317573d6000803e3d6000fd5b505050505050565b604051632bbccf0160e01b81526001600160a01b03838116600483015260248201839052306044830181905260648301527f00000000000000000000000000000000000000000000000000000000000000001690632bbccf01906084016020604051808303816000875af115801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf91906111f6565b5060006103ec7f000000000000000000000000000000000000000000000000000000000000000030610ae4565b90507f000000000000000000000000000000000000000000000000000000000000000081101561042f57604051631976ce1360e31b815260040160405180910390fd5b505050565b61043e8282610b8e565b90506104746001600160a01b0383167f000000000000000000000000000000000000000000000000000000000000000083610c0f565b604051636c887d3360e11b81526001600160a01b038381166004830152602482018390523060448301527f0000000000000000000000000000000000000000000000000000000000000000169063d910fa66906064016020604051808303816000875af11580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d91906111f6565b50610538827f0000000000000000000000000000000000000000000000000000000000000000610c8a565b5050565b600082806020019051810190610552919061120f565b90506105886001600160a01b0382167f000000000000000000000000000000000000000000000000000000000000000086610c0f565b604051636c887d3360e11b81526001600160a01b038281166004830152602482018690523060448301527f0000000000000000000000000000000000000000000000000000000000000000169063d910fa66906064016020604051808303816000875af11580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062191906111f6565b5061064c817f0000000000000000000000000000000000000000000000000000000000000000610c8a565b50505050565b60008082806020019051810190610669919061120f565b60405163e7602b9d60e01b81526001600160a01b0380831660048301523360248301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063e7602b9d90604401602060405180830381865afa1580156106da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fe91906111f6565b9392505050565b600060405160200161075f906020808252602e908201527f4d6f7270686f20416176652056332061546f6b656e20436f6c6c61746572616c60408201526d1020b230b83a37b9102b1018971960911b606082015260800190565b60405160208183030381529060405280519060200120905090565b604080516001808252818301909252606091602080830190803683370190505090506107a582610972565b816000815181106107b8576107b861122c565b60200260200101906001600160a01b031690816001600160a01b031681525050919050565b6107e683610d19565b604051631dd64f3160e21b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906377593cc490602401600060405180830381865afa15801561084d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108759190810190611242565b80519091501561089857604051635f5003c560e11b815260040160405180910390fd5b6000838060200190518101906108ae919061120f565b604051632bbccf0160e01b81526001600160a01b0380831660048301526024820189905230604483015287811660648301529192507f000000000000000000000000000000000000000000000000000000000000000090911690632bbccf01906084016020604051808303816000875af1158015610930573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095491906111f6565b50505050505050565b6105386001600160a01b038316826000610c0f565b600080828060200190518101906106fe919061120f565b604051631dd64f3160e21b815233600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906377593cc490602401600060405180830381865afa1580156109f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a1a9190810190611242565b805190915015610a2e576000915050610ade565b600084806020019051810190610a44919061120f565b60405163e7602b9d60e01b81526001600160a01b0380831660048301523360248301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063e7602b9d90604401602060405180830381865afa158015610ab5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad991906111f6565b925050505b92915050565b604051632459428560e11b81526001600160a01b03828116600483015260009182918516906348b2850a90602401606060405180830381865afa158015610b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5391906112dc565b90506000816040015111610b6957600019610b86565b60208101516040820151610b8691670de0b6b3a764000091610db0565b949350505050565b60006000198203610c08576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0191906111f6565b9050610ade565b5080610ade565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061064c5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa158015610cda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfe91906111f6565b1115610538576105386001600160a01b038316826000610c0f565b6001600160a01b0381163014801590610d8f5750306001600160a01b0316634c4602da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8f9190611338565b15610dad576040516307de9b5160e21b815260040160405180910390fd5b50565b828202811515841585830485141716610dc857600080fd5b0492915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e0e57610e0e610dcf565b604052919050565b600067ffffffffffffffff821115610e3057610e30610dcf565b5060051b60200190565b60008060408385031215610e4d57600080fd5b8235915060208084013567ffffffffffffffff811115610e6c57600080fd5b8401601f81018613610e7d57600080fd5b8035610e90610e8b82610e16565b610de5565b81815260059190911b82018301908381019088831115610eaf57600080fd5b928401925b82841015610ecd57833582529284019290840190610eb4565b80955050505050509250929050565b6001600160a01b0381168114610dad57600080fd5b60008060408385031215610f0457600080fd5b8235610f0f81610edc565b946020939093013593505050565b600082601f830112610f2e57600080fd5b813567ffffffffffffffff811115610f4857610f48610dcf565b610f5b601f8201601f1916602001610de5565b818152846020838601011115610f7057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215610fa257600080fd5b83359250602084013567ffffffffffffffff80821115610fc157600080fd5b610fcd87838801610f1d565b93506040860135915080821115610fe357600080fd5b50610ff086828701610f1d565b9150509250925092565b60006020828403121561100c57600080fd5b813567ffffffffffffffff81111561102357600080fd5b610b8684828501610f1d565b6020808252825182820181905260009190848201906040850190845b818110156110705783516001600160a01b03168352928401929184019160010161104b565b50909695505050505050565b6000806000806080858703121561109257600080fd5b8435935060208501356110a481610edc565b9250604085013567ffffffffffffffff808211156110c157600080fd5b6110cd88838901610f1d565b935060608701359150808211156110e357600080fd5b506110f087828801610f1d565b91505092959194509250565b6000806040838503121561110f57600080fd5b823561111a81610edc565b9150602083013561112a81610edc565b809150509250929050565b6000806040838503121561114857600080fd5b823567ffffffffffffffff8082111561116057600080fd5b61116c86838701610f1d565b9350602085013591508082111561118257600080fd5b5061118f85828601610f1d565b9150509250929050565b6001600160a01b038416815260208082018490526060604083018190528351908301819052600091848101916080850190845b818110156111e8578451835293830193918301916001016111cc565b509098975050505050505050565b60006020828403121561120857600080fd5b5051919050565b60006020828403121561122157600080fd5b81516106fe81610edc565b634e487b7160e01b600052603260045260246000fd5b6000602080838503121561125557600080fd5b825167ffffffffffffffff81111561126c57600080fd5b8301601f8101851361127d57600080fd5b805161128b610e8b82610e16565b81815260059190911b820183019083810190878311156112aa57600080fd5b928401925b828410156112d15783516112c281610edc565b825292840192908401906112af565b979650505050505050565b6000606082840312156112ee57600080fd5b6040516060810181811067ffffffffffffffff8211171561131157611311610dcf565b80604052508251815260208301516020820152604083015160408201528091505092915050565b60006020828403121561134a57600080fd5b815180151581146106fe57600080fdfea264697066735822122022fe2e674f50c4799da7354f6ba002f00b78639102020302980a5c158bc7557164736f6c63430008100033",
    "sourceMap": "575:6593:199:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1549:44;;;;;;;;160:25:258;;;148:2;133:18;1549:44:199;;;;;;;;902:145:203;;;;;;:::i;:::-;;:::i;:::-;;6707:459:199;;;;;;:::i;:::-;;:::i;2415:78:188:-;;;2481:5;2389:42:258;;2377:2;2362:18;2415:78:188;2245:192:258;6030:437:199;;;;;;:::i;:::-;;:::i;505:60:203:-;;;;;;;;-1:-1:-1;;;;;2634:32:258;;;2616:51;;2604:2;2589:18;505:60:203;2442:231:258;2912:436:199;;;;;;:::i;:::-;;:::i;4985:221::-;;;;;;:::i;:::-;;:::i;2324:156::-;;;:::i;5542:83::-;;;5590:4;4472:41:258;;4460:2;4445:18;5542:83:199;4332:187:258;5934:180:188;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3806:584:199:-;;;;;;:::i;:::-;;:::i;9204:107:188:-;;;;;;:::i;:::-;;:::i;1418:33:199:-;;;;;5283:175;;;;;;:::i;:::-;;:::i;4490:384::-;;;;;;:::i;:::-;;:::i;902:145:203:-;977:63;;-1:-1:-1;;;977:63:203;;-1:-1:-1;;;;;977:24:203;:30;;;;:63;;1016:4;;1023:9;;1034:5;;977:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;902:145;;:::o;6707:459:199:-;6807:99;;-1:-1:-1;;;6807:99:199;;-1:-1:-1;;;;;8466:15:258;;;6807:99:199;;;8448:34:258;8498:18;;;8491:34;;;6885:4:199;8541:18:258;;;8534:43;;;8593:18;;;8586:43;6807:6:199;:25;;;;8382:19:258;;6807:99:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6979:20;7002:43;7023:6;7039:4;7002:20;:43::i;:::-;6979:66;;7074:19;7059:12;:34;7055:104;;;7102:57;;-1:-1:-1;;;7102:57:199;;;;;;;;;;;7055:104;6797:369;6707:459;;:::o;6030:437::-;6143:46;6157:14;6173:15;6143:13;:46::i;:::-;6125:64;-1:-1:-1;6199:60:199;-1:-1:-1;;;;;6199:26:199;;6234:6;6125:64;6199:26;:60::i;:::-;6269:80;;-1:-1:-1;;;6269:80:199;;-1:-1:-1;;;;;9087:15:258;;;6269:80:199;;;9069:34:258;9119:18;;;9112:34;;;6343:4:199;9162:18:258;;;9155:43;6269:6:199;:23;;;;9004:18:258;;6269:80:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6404:56;6428:14;6452:6;6404:23;:56::i;:::-;6030:437;;:::o;2912:436::-;3048:16;3078:11;3067:32;;;;;;;;;;;;:::i;:::-;3048:51;-1:-1:-1;3109:47:199;-1:-1:-1;;;;;3109:22:199;;3140:6;3149;3109:22;:47::i;:::-;3167:67;;-1:-1:-1;;;3167:67:199;;-1:-1:-1;;;;;9087:15:258;;;3167:67:199;;;9069:34:258;9119:18;;;9112:34;;;3228:4:199;9162:18:258;;;9155:43;3167:6:199;:23;;;;9004:18:258;;3167:67:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3289:52;3313:10;3333:6;3289:23;:52::i;:::-;3001:347;2912:436;;;:::o;4985:221::-;5060:7;5079:18;5111:11;5100:34;;;;;;;;;;;;:::i;:::-;5151:48;;-1:-1:-1;;;5151:48:199;;-1:-1:-1;;;;;9988:15:258;;;5151:48:199;;;9970:34:258;5188:10:199;10020:18:258;;;10013:43;5079:55:199;;-1:-1:-1;5151:6:199;:24;;;;;;9905:18:258;;5151:48:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5144:55;4985:221;-1:-1:-1;;;4985:221:199:o;2324:156::-;2376:7;2412:60;;;;;;10269:2:258;10251:21;;;10308:2;10288:18;;;10281:30;10347:34;10342:2;10327:18;;10320:62;-1:-1:-1;;;10413:2:258;10398:18;;10391:44;10467:3;10452:19;;10067:410;2412:60:199;;;;;;;;;;;;;2402:71;;;;;;2395:78;;2324:156;:::o;5934:180:188:-;6051:14;;;6063:1;6051:14;;;;;;;;;6009:21;;6051:14;;;;;;;;;;;-1:-1:-1;6051:14:188;6042:23;;6087:20;6095:11;6087:7;:20::i;:::-;6075:6;6082:1;6075:9;;;;;;;;:::i;:::-;;;;;;:32;-1:-1:-1;;;;;6075:32:188;;;-1:-1:-1;;;;;6075:32:188;;;;;5934:180;;;:::o;3806:584:199:-;3964:32;3987:8;3964:22;:32::i;:::-;4084:33;;-1:-1:-1;;;4084:33:199;;4111:4;4084:33;;;2616:51:258;4057:24:199;;4084:6;-1:-1:-1;;;;;4084:18:199;;;;2589::258;;4084:33:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4084:33:199;;;;;;;;;;;;:::i;:::-;4131:14;;4057:60;;-1:-1:-1;4131:18:199;4127:69;;4158:38;;-1:-1:-1;;;4158:38:199;;;;;;;;;;;4127:69;4207:18;4239:11;4228:34;;;;;;;;;;;;:::i;:::-;4313:70;;-1:-1:-1;;;4313:70:199;;-1:-1:-1;;;;;8466:15:258;;;4313:70:199;;;8448:34:258;8498:18;;;8491:34;;;4367:4:199;8541:18:258;;;8534:43;8613:15;;;8593:18;;;8586:43;4207:55:199;;-1:-1:-1;4313:6:199;:25;;;;;;8382:19:258;;4313:70:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3914:476;;3806:584;;;;:::o;9204:107:188:-;9275:29;-1:-1:-1;;;;;9275:17:188;;9293:7;9302:1;9275:17;:29::i;5283:175:199:-;5356:5;5373:16;5403:11;5392:32;;;;;;;;;;;;:::i;4490:384::-;4632:30;;-1:-1:-1;;;4632:30:199;;4651:10;4632:30;;;2616:51:258;4586:7:199;;;;-1:-1:-1;;;;;4632:6:199;:18;;;;2589::258;;4632:30:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4632:30:199;;;;;;;;;;;;:::i;:::-;4676:14;;4605:57;;-1:-1:-1;4676:18:199;4672:196;;4703:1;4696:8;;;;;4672:196;4733:18;4765:11;4754:34;;;;;;;;;;;;:::i;:::-;4809:48;;-1:-1:-1;;;4809:48:199;;-1:-1:-1;;;;;9988:15:258;;;4809:48:199;;;9970:34:258;4846:10:199;10020:18:258;;;10013:43;4733:55:199;;-1:-1:-1;4809:6:199;:24;;;;;;9905:18:258;;4809:48:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4802:55;;;;4490:384;;;;;:::o;629:358:202:-;780:26;;-1:-1:-1;;;780:26:202;;-1:-1:-1;;;;;2634:32:258;;;780:26:202;;;2616:51:258;714:7:202;;;;780:20;;;;;2589:18:258;;780:26:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;733:73;;857:1;836:13;:18;;;:22;:144;;-1:-1:-1;;836:144:202;;;902:21;;;;925:18;;;;877:67;;885:4;;877:24;:67::i;:::-;817:163;629:358;-1:-1:-1;;;;629:358:202:o;7816:207:188:-;7899:7;-1:-1:-1;;7922:6:188;:27;7918:98;;7958:30;;-1:-1:-1;;;7958:30:188;;7982:4;7958:30;;;2616:51:258;-1:-1:-1;;;;;7958:15:188;;;;;2589:18:258;;7958:30:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7951:37;;;;7918:98;-1:-1:-1;8010:6:188;8003:13;;4327:1454:104;4438:12;4565:4;4559:11;-1:-1:-1;;;4688:17:104;4681:93;4821:2;4817:1;4798:17;4794:25;4787:37;4901:6;4896:2;4877:17;4873:26;4866:42;5703:2;5700:1;5696:2;5677:17;5674:1;5667:5;5660;5655:51;5224:16;5217:24;5211:2;5193:16;5190:24;5186:1;5182;5176:8;5173:15;5169:46;5166:76;4966:754;4955:765;;;5748:7;5740:34;;;;-1:-1:-1;;;5740:34:104;;12564:2:258;5740:34:104;;;12546:21:258;12603:2;12583:18;;;12576:30;-1:-1:-1;;;12622:18:258;;;12615:44;12676:18;;5740:34:104;;;;;;;8158:167:188;8244:39;;-1:-1:-1;;;8244:39:188;;8268:4;8244:39;;;9970:34:258;-1:-1:-1;;;;;10040:15:258;;;10020:18;;;10013:43;8286:1:188;;8244:15;;;;;;9905:18:258;;8244:39:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;8240:78;;;8289:29;-1:-1:-1;;;;;8289:17:188;;8307:7;8316:1;8289:17;:29::i;8425:218::-;-1:-1:-1;;;;;8503:25:188;;8523:4;8503:25;;;;:74;;;8547:4;-1:-1:-1;;;;;8532:43:188;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8499:137;;;8598:38;;-1:-1:-1;;;8598:38:188;;;;;;;;;;;8499:137;8425:218;:::o;1357:535:221:-;1563:9;;;1694:19;;1687:27;1719:9;;1733;;;1730:16;;1716:31;1683:65;1673:121;;1778:1;1775;1768:12;1673:121;1857:19;;1357:535;-1:-1:-1;;1357:535:221:o;196:127:258:-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:275;399:2;393:9;464:2;445:13;;-1:-1:-1;;441:27:258;429:40;;499:18;484:34;;520:22;;;481:62;478:88;;;546:18;;:::i;:::-;582:2;575:22;328:275;;-1:-1:-1;328:275:258:o;608:183::-;668:4;701:18;693:6;690:30;687:56;;;723:18;;:::i;:::-;-1:-1:-1;768:1:258;764:14;780:4;760:25;;608:183::o;796:959::-;889:6;897;950:2;938:9;929:7;925:23;921:32;918:52;;;966:1;963;956:12;918:52;1002:9;989:23;979:33;;1031:2;1084;1073:9;1069:18;1056:32;1111:18;1103:6;1100:30;1097:50;;;1143:1;1140;1133:12;1097:50;1166:22;;1219:4;1211:13;;1207:27;-1:-1:-1;1197:55:258;;1248:1;1245;1238:12;1197:55;1284:2;1271:16;1307:60;1323:43;1363:2;1323:43;:::i;:::-;1307:60;:::i;:::-;1401:15;;;1483:1;1479:10;;;;1471:19;;1467:28;;;1432:12;;;;1507:19;;;1504:39;;;1539:1;1536;1529:12;1504:39;1563:11;;;;1583:142;1599:6;1594:3;1591:15;1583:142;;;1665:17;;1653:30;;1616:12;;;;1703;;;;1583:142;;;1744:5;1734:15;;;;;;;796:959;;;;;:::o;1760:138::-;-1:-1:-1;;;;;1842:31:258;;1832:42;;1822:70;;1888:1;1885;1878:12;1903:337;1986:6;1994;2047:2;2035:9;2026:7;2022:23;2018:32;2015:52;;;2063:1;2060;2053:12;2015:52;2102:9;2089:23;2121:38;2153:5;2121:38;:::i;:::-;2178:5;2230:2;2215:18;;;;2202:32;;-1:-1:-1;;;1903:337:258:o;2678:530::-;2720:5;2773:3;2766:4;2758:6;2754:17;2750:27;2740:55;;2791:1;2788;2781:12;2740:55;2827:6;2814:20;2853:18;2849:2;2846:26;2843:52;;;2875:18;;:::i;:::-;2919:55;2962:2;2943:13;;-1:-1:-1;;2939:27:258;2968:4;2935:38;2919:55;:::i;:::-;2999:2;2990:7;2983:19;3045:3;3038:4;3033:2;3025:6;3021:15;3017:26;3014:35;3011:55;;;3062:1;3059;3052:12;3011:55;3127:2;3120:4;3112:6;3108:17;3101:4;3092:7;3088:18;3075:55;3175:1;3150:16;;;3168:4;3146:27;3139:38;;;;3154:7;2678:530;-1:-1:-1;;;2678:530:258:o;3213:607::-;3308:6;3316;3324;3377:2;3365:9;3356:7;3352:23;3348:32;3345:52;;;3393:1;3390;3383:12;3345:52;3429:9;3416:23;3406:33;;3490:2;3479:9;3475:18;3462:32;3513:18;3554:2;3546:6;3543:14;3540:34;;;3570:1;3567;3560:12;3540:34;3593:49;3634:7;3625:6;3614:9;3610:22;3593:49;:::i;:::-;3583:59;;3695:2;3684:9;3680:18;3667:32;3651:48;;3724:2;3714:8;3711:16;3708:36;;;3740:1;3737;3730:12;3708:36;;3763:51;3806:7;3795:8;3784:9;3780:24;3763:51;:::i;:::-;3753:61;;;3213:607;;;;;:::o;3825:320::-;3893:6;3946:2;3934:9;3925:7;3921:23;3917:32;3914:52;;;3962:1;3959;3952:12;3914:52;4002:9;3989:23;4035:18;4027:6;4024:30;4021:50;;;4067:1;4064;4057:12;4021:50;4090:49;4131:7;4122:6;4111:9;4107:22;4090:49;:::i;4524:673::-;4710:2;4762:21;;;4832:13;;4735:18;;;4854:22;;;4681:4;;4710:2;4933:15;;;;4907:2;4892:18;;;4681:4;4976:195;4990:6;4987:1;4984:13;4976:195;;;5055:13;;-1:-1:-1;;;;;5051:39:258;5039:52;;5146:15;;;;5111:12;;;;5087:1;5005:9;4976:195;;;-1:-1:-1;5188:3:258;;4524:673;-1:-1:-1;;;;;;4524:673:258:o;5202:750::-;5306:6;5314;5322;5330;5383:3;5371:9;5362:7;5358:23;5354:33;5351:53;;;5400:1;5397;5390:12;5351:53;5436:9;5423:23;5413:33;;5496:2;5485:9;5481:18;5468:32;5509:38;5541:5;5509:38;:::i;:::-;5566:5;-1:-1:-1;5622:2:258;5607:18;;5594:32;5645:18;5675:14;;;5672:34;;;5702:1;5699;5692:12;5672:34;5725:49;5766:7;5757:6;5746:9;5742:22;5725:49;:::i;:::-;5715:59;;5827:2;5816:9;5812:18;5799:32;5783:48;;5856:2;5846:8;5843:16;5840:36;;;5872:1;5869;5862:12;5840:36;;5895:51;5938:7;5927:8;5916:9;5912:24;5895:51;:::i;:::-;5885:61;;;5202:750;;;;;;;:::o;5957:417::-;6040:6;6048;6101:2;6089:9;6080:7;6076:23;6072:32;6069:52;;;6117:1;6114;6107:12;6069:52;6156:9;6143:23;6175:38;6207:5;6175:38;:::i;:::-;6232:5;-1:-1:-1;6289:2:258;6274:18;;6261:32;6302:40;6261:32;6302:40;:::i;:::-;6361:7;6351:17;;;5957:417;;;;;:::o;6829:539::-;6915:6;6923;6976:2;6964:9;6955:7;6951:23;6947:32;6944:52;;;6992:1;6989;6982:12;6944:52;7032:9;7019:23;7061:18;7102:2;7094:6;7091:14;7088:34;;;7118:1;7115;7108:12;7088:34;7141:49;7182:7;7173:6;7162:9;7158:22;7141:49;:::i;:::-;7131:59;;7243:2;7232:9;7228:18;7215:32;7199:48;;7272:2;7262:8;7259:16;7256:36;;;7288:1;7285;7278:12;7256:36;;7311:51;7354:7;7343:8;7332:9;7328:24;7311:51;:::i;:::-;7301:61;;;6829:539;;;;;:::o;7373:801::-;-1:-1:-1;;;;;7649:32:258;;7631:51;;7701:2;7719:18;;;7712:34;;;7619:2;7777;7762:18;;7755:30;;;7834:13;;7604:18;;;7856:22;;;7571:4;;7936:15;;;;7909:3;7894:19;;;7571:4;7979:169;7993:6;7990:1;7987:13;7979:169;;;8054:13;;8042:26;;8123:15;;;;8088:12;;;;8015:1;8008:9;7979:169;;;-1:-1:-1;8165:3:258;;7373:801;-1:-1:-1;;;;;;;;7373:801:258:o;8640:184::-;8710:6;8763:2;8751:9;8742:7;8738:23;8734:32;8731:52;;;8779:1;8776;8769:12;8731:52;-1:-1:-1;8802:16:258;;8640:184;-1:-1:-1;8640:184:258:o;9209:273::-;9294:6;9347:2;9335:9;9326:7;9322:23;9318:32;9315:52;;;9363:1;9360;9353:12;9315:52;9395:9;9389:16;9414:38;9446:5;9414:38;:::i;10482:127::-;10543:10;10538:3;10534:20;10531:1;10524:31;10574:4;10571:1;10564:15;10598:4;10595:1;10588:15;10822:963;10917:6;10948:2;10991;10979:9;10970:7;10966:23;10962:32;10959:52;;;11007:1;11004;10997:12;10959:52;11040:9;11034:16;11073:18;11065:6;11062:30;11059:50;;;11105:1;11102;11095:12;11059:50;11128:22;;11181:4;11173:13;;11169:27;-1:-1:-1;11159:55:258;;11210:1;11207;11200:12;11159:55;11239:2;11233:9;11262:60;11278:43;11318:2;11278:43;:::i;11262:60::-;11356:15;;;11438:1;11434:10;;;;11426:19;;11422:28;;;11387:12;;;;11462:19;;;11459:39;;;11494:1;11491;11484:12;11459:39;11518:11;;;;11538:217;11554:6;11549:3;11546:15;11538:217;;;11627:3;11621:10;11644:38;11676:5;11644:38;:::i;:::-;11695:18;;11571:12;;;;11733;;;;11538:217;;;11774:5;10822:963;-1:-1:-1;;;;;;;10822:963:258:o;11790:567::-;11892:6;11945:2;11933:9;11924:7;11920:23;11916:32;11913:52;;;11961:1;11958;11951:12;11913:52;11994:2;11988:9;12036:2;12028:6;12024:15;12105:6;12093:10;12090:22;12069:18;12057:10;12054:34;12051:62;12048:88;;;12116:18;;:::i;:::-;12156:10;12152:2;12145:22;;12197:9;12191:16;12183:6;12176:32;12262:2;12251:9;12247:18;12241:25;12236:2;12228:6;12224:15;12217:50;12321:2;12310:9;12306:18;12300:25;12295:2;12287:6;12283:15;12276:50;12345:6;12335:16;;;11790:567;;;;:::o;12705:277::-;12772:6;12825:2;12813:9;12804:7;12800:23;12796:32;12793:52;;;12841:1;12838;12831:12;12793:52;12873:9;12867:16;12926:5;12919:13;12912:21;12905:5;12902:32;12892:60;;12948:1;12945;12938:12",
    "linkReferences": {},
    "immutableReferences": {
      "65527": [
        {
          "start": 593,
          "length": 32
        },
        {
          "start": 850,
          "length": 32
        },
        {
          "start": 967,
          "length": 32
        },
        {
          "start": 1103,
          "length": 32
        },
        {
          "start": 1184,
          "length": 32
        },
        {
          "start": 1300,
          "length": 32
        },
        {
          "start": 1379,
          "length": 32
        },
        {
          "start": 1460,
          "length": 32
        },
        {
          "start": 1576,
          "length": 32
        },
        {
          "start": 1681,
          "length": 32
        },
        {
          "start": 2046,
          "length": 32
        },
        {
          "start": 2277,
          "length": 32
        },
        {
          "start": 2475,
          "length": 32
        },
        {
          "start": 2668,
          "length": 32
        }
      ],
      "65530": [
        {
          "start": 266,
          "length": 32
        },
        {
          "start": 1008,
          "length": 32
        }
      ],
      "66662": [
        {
          "start": 399,
          "length": 32
        },
        {
          "start": 688,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "assetOf(bytes)": "e170a9bf",
    "assetsUsed(bytes)": "aeffddde",
    "balanceOf(bytes)": "78415365",
    "claim(uint256,bytes32[])": "2f52ebb7",
    "deposit(uint256,bytes,bytes)": "69445c31",
    "depositToAaveV3Morpho(address,uint256)": "53cbf54c",
    "identifier()": "7998a1c4",
    "isDebt()": "89353a09",
    "minimumHealthFactor()": "1caff8b1",
    "morpho()": "d8fbc833",
    "morphoRewardsDistributor()": "5b5d4d78",
    "revokeApproval(address,address)": "d3bfe76a",
    "slippage()": "3e032a3b",
    "withdraw(uint256,address,bytes,bytes)": "c9111bd7",
    "withdrawFromAaveV3Morpho(address,uint256)": "37761272",
    "withdrawableFrom(bytes,bytes)": "fa50e5d2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_morpho\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minHealthFactor\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rewardDistributor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BaseAdaptor__ConstructorHealthFactorTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__ExternalReceiverBlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"BaseAdaptor__PricingNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__Slippage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserDepositsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserWithdrawsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MorphoAaveV3ATokenCollateralAdaptor__HealthFactorTooLow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetOf\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetsUsed\",\"outputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"tokenToDeposit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToDeposit\",\"type\":\"uint256\"}],\"name\":\"depositToAaveV3Morpho\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDebt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumHealthFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"morpho\",\"outputs\":[{\"internalType\":\"contract IMorphoV3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"morphoRewardsDistributor\",\"outputs\":[{\"internalType\":\"contract RewardsDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"revokeApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippage\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"tokenToWithdraw\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdrawFromAaveV3Morpho\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"withdrawableFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"crispymangoes\",\"kind\":\"dev\",\"methods\":{\"deposit(uint256,bytes,bytes)\":{\"details\":\"configurationData is NOT used\",\"params\":{\"adaptorData\":\"adaptor data containing the abi encoded ERC20 token\",\"assets\":\"the amount of assets to lend on Morpho\"}},\"depositToAaveV3Morpho(address,uint256)\":{\"details\":\"Uses `_maxAvailable` helper function, see BaseAdaptor.sol\",\"params\":{\"amountToDeposit\":\"the amount of `tokenToDeposit` to lend on Morpho.\",\"tokenToDeposit\":\"the token to lend on Morpho\"}},\"identifier()\":{\"details\":\"Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult.\"},\"revokeApproval(address,address)\":{\"params\":{\"asset\":\"the ERC20 asset to revoke `spender`s approval for\",\"spender\":\"the address to revoke approval for\"}},\"withdraw(uint256,address,bytes,bytes)\":{\"details\":\"Important to verify that external receivers are allowed if receiver is not Cellar address.\",\"params\":{\"adaptorData\":\"adaptor data containing the abi encoded aToken\",\"assets\":\"the amount of assets to withdraw from Morpho\",\"receiver\":\"the address to send withdrawn assets to\"}},\"withdrawFromAaveV3Morpho(address,uint256)\":{\"params\":{\"amountToWithdraw\":\"the amount of `tokenToWithdraw` to withdraw from Morpho\",\"tokenToWithdraw\":\"the token to withdraw from Morpho.\"}}},\"title\":\"Morpho Aave V3 aToken Adaptor\",\"version\":1},\"userdoc\":{\"errors\":{\"BaseAdaptor__ConstructorHealthFactorTooLow()\":[{\"notice\":\"Attempted to set a constructor minimum health factor to a value         below `MINIMUM_CONSTRUCTOR_HEALTH_FACTOR()`.\"}],\"BaseAdaptor__ExternalReceiverBlocked()\":[{\"notice\":\"Attempted to specify an external receiver during a Cellar `callOnAdaptor` call.\"}],\"BaseAdaptor__PricingNotSupported(address)\":[{\"notice\":\"Attempted swap used unsupported output asset.\"}],\"BaseAdaptor__Slippage()\":[{\"notice\":\"Attempted swap has bad slippage.\"}],\"BaseAdaptor__UserDepositsNotAllowed()\":[{\"notice\":\"Attempted to deposit to a position where user deposits were not allowed.\"}],\"BaseAdaptor__UserWithdrawsNotAllowed()\":[{\"notice\":\"Attempted to withdraw from a position where user withdraws were not allowed.\"}],\"MorphoAaveV3ATokenCollateralAdaptor__HealthFactorTooLow()\":[{\"notice\":\"Attempted withdraw would lower Cellar health factor too low.\"}]},\"kind\":\"user\",\"methods\":{\"assetOf(bytes)\":{\"notice\":\"Returns the positions underlying asset.\"},\"assetsUsed(bytes)\":{\"notice\":\"When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup.\"},\"balanceOf(bytes)\":{\"notice\":\"Returns the cellars balance of the position in terms of underlying asset.\"},\"claim(uint256,bytes32[])\":{\"notice\":\"Allows cellars to claim Morpho Rewards.\"},\"deposit(uint256,bytes,bytes)\":{\"notice\":\"Cellar must approve Morpho to spend its assets, then call supplyCollateral to lend its assets.\"},\"depositToAaveV3Morpho(address,uint256)\":{\"notice\":\"Allows strategists to lend assets on Morpho.\"},\"isDebt()\":{\"notice\":\"This adaptor returns collateral, and not debt.\"},\"minimumHealthFactor()\":{\"notice\":\"Minimum Health Factor enforced after every aToken withdraw.\"},\"morpho()\":{\"notice\":\"The Morpho Aave V3 contract on current network.For mainnet use 0x33333aea097c193e66081E930c33020272b33333.\"},\"morphoRewardsDistributor()\":{\"notice\":\"The Morpho Aave V3 rewards handler contract on current network.For mainnet use 0x3B14E5C73e0A56D607A8688098326fD4b4292135.\"},\"revokeApproval(address,address)\":{\"notice\":\"Allows strategists to zero out an approval for a given `asset`.\"},\"slippage()\":{\"notice\":\"Max possible slippage when making a swap router swap.\"},\"withdraw(uint256,address,bytes,bytes)\":{\"notice\":\"Cellars must withdraw from Morpho, check if collateral is backing any loans       and prevent withdraws if so.\"},\"withdrawFromAaveV3Morpho(address,uint256)\":{\"notice\":\"Allows strategists to withdraw assets from Morpho.\"},\"withdrawableFrom(bytes,bytes)\":{\"notice\":\"Checks that cellar has no active borrows, and if so returns 0.\"}},\"notice\":\"Allows Cellars to interact with Morpho Aave V3 positions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/adaptors/Morpho/MorphoAaveV3ATokenCollateralAdaptor.sol\":\"MorphoAaveV3ATokenCollateralAdaptor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@balancer-labs/=lib/balancer-v2-monorepo/../../node_modules/@balancer-labs/\",\":@balancer/=lib/balancer-v2-monorepo/pkg/\",\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":@uniswapV3C/=lib/v3-core/contracts/\",\":@uniswapV3P/=lib/v3-periphery/contracts/\",\":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/\",\":balancer-v2-monorepo/=lib/balancer-v2-monorepo/\",\":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/\",\":compound-protocol/=lib/compound-protocol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":v3-core.git/=lib/v3-core.git/contracts/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery.git/=lib/v3-periphery.git/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53\",\"dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM\"]},\"src/Registry.sol\":{\"keccak256\":\"0x797eca06ed2adc548ca9bcc2b5565437e50862807f1014fcb90f733c4ecc9e47\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d11adaa81c94efbb8ad46c031888d7a9e3a2fb41e61356f7423b0c1be8a3189\",\"dweb:/ipfs/QmNvQ4qg7p7zphqctgKyQeuAMVXkcA8pTtb2XgNiBKf2jK\"]},\"src/base/Cellar.sol\":{\"keccak256\":\"0xcc435fc48edc29fa9119d9e7bbeea84e0e210368d525656a0f6d2dd3e6186f47\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1ae5e4dfdaa91b2fc59574669951f009f74e70682a2b058fd99c0df3c8b9058\",\"dweb:/ipfs/QmNigVHjunwDjvjQAp9NxgR6vRsGu8fzrjH7EgE4T3bdWs\"]},\"src/base/ERC20.sol\":{\"keccak256\":\"0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4\",\"dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf\"]},\"src/base/ERC4626.sol\":{\"keccak256\":\"0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469\",\"dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE\"]},\"src/base/Multicall.sol\":{\"keccak256\":\"0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c\",\"dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K\"]},\"src/base/SafeTransferLib.sol\":{\"keccak256\":\"0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a\",\"dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3\"]},\"src/interfaces/IMulticall.sol\":{\"keccak256\":\"0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0\",\"dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5\"]},\"src/interfaces/external/IChainlinkAggregator.sol\":{\"keccak256\":\"0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2\",\"dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs\"]},\"src/interfaces/external/IGravity.sol\":{\"keccak256\":\"0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51\",\"dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c\"]},\"src/interfaces/external/IUniswapV2Router02.sol\":{\"keccak256\":\"0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a\",\"dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo\"]},\"src/interfaces/external/IUniswapV3Router.sol\":{\"keccak256\":\"0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd\",\"dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK\"]},\"src/interfaces/external/Morpho/IMorphoV3.sol\":{\"keccak256\":\"0xb7d9b09efb93ccd8deacb62a899512f2e8d467682158dc73e936c27aedba3dd9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6ed4d09ea863c00bad9b19e1b8bc1ab8568a5b1c972b2ef4c02901f019d58241\",\"dweb:/ipfs/Qmd4873kMieGZd4K5BuKU6eCPxmczFEQ8BqaGyVbh3YtYE\"]},\"src/interfaces/external/UniswapV3Pool.sol\":{\"keccak256\":\"0xf6a71bfbc0665b1d0aad7148b685f3b2254e1be2a3672c2c6671b7fc20db26bb\",\"urls\":[\"bzz-raw://393871fdf75656c49a3bb83bc8110a93af2cbd805df9cc6574a058f3cbf100a9\",\"dweb:/ipfs/QmZugnPctGBiWkFjXXtiKy3AQTWphA9tjZmSBVZRMg9urh\"]},\"src/modules/adaptors/BaseAdaptor.sol\":{\"keccak256\":\"0xc3d6ce867d0df59d4f4ea027bcbc8d982a89d782c648753d3ef149e1679afc5c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://98eed0613a68c44fb9df313b345ae0b984934cb677f144a1a5a2d0efe604c4ee\",\"dweb:/ipfs/Qmc6dt8S571ibT3DLGqFYRKKk2tgjADi8qpN6kDgm8N7sd\"]},\"src/modules/adaptors/Morpho/MorphoAaveV3ATokenCollateralAdaptor.sol\":{\"keccak256\":\"0x019df734e952225534e6ae0d75a868833a92fd54edf0e717e380b20ce44ee449\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c223a0ee330b6ea2c8af0ceb7f30ac396d52ec00f8f049e0051a97b89bfb1197\",\"dweb:/ipfs/QmTxTpwqF8osJjYeDEGVh9zoySTREFtRKoHws5ZaRvLFuK\"]},\"src/modules/adaptors/Morpho/MorphoAaveV3HealthFactorLogic.sol\":{\"keccak256\":\"0x2e5863d04838373cd7d8e5bb96105bbd170b5b99faaf7aa22b58be42d433ed9f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c246aee962bb5a21a4ee17b87b6b30b1eef98c21facd43724d3e4c972da37188\",\"dweb:/ipfs/QmWH8Aq1V9RUPCxQhdBeACy2RGxznub6J7cKE6hqK55Aoh\"]},\"src/modules/adaptors/Morpho/MorphoRewardHandler.sol\":{\"keccak256\":\"0xc1461e49dacbb75fe03a4aa08a58bec9639416d57fed6c6595ade2f343520480\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b2cc897411f203e04233ee37d60e70bed92f310df63beb5adede89009c8cfc54\",\"dweb:/ipfs/QmSgJ6xXXqRLTcmyDf5uPtd5FqLvEmuK4QQ5LBXuk5dbhp\"]},\"src/modules/price-router/Extensions/Extension.sol\":{\"keccak256\":\"0xd51d51474759b8417232e02290814bc7a06223ad5e57c93459d90a1101db558d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b5670880f335e48eda45ae95d9faa9a009885613c78634ab66114a2f842f1b1\",\"dweb:/ipfs/QmNddDkfvh36LtqrSVkDYKtxyWLv2Heb3hTrBVcUZJxJRo\"]},\"src/modules/price-router/PriceRouter.sol\":{\"keccak256\":\"0xa2a1aaeef9be7a72077cc30f1f408dae924ee4b7e25d2ee85491622410b821b9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://627e4d92a619543f08f916ec6279252d577adbd120fa2e8c2a8635d70c5a7a66\",\"dweb:/ipfs/QmTu6mJiHBUFFEXHRE6KpxE5J2W72fJWdMuvaSopD1Gk1K\"]},\"src/modules/swap-router/SwapRouter.sol\":{\"keccak256\":\"0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818\",\"dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312\",\"dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r\"]},\"src/utils/Uint32Array.sol\":{\"keccak256\":\"0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944\",\"dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_morpho",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minHealthFactor",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "rewardDistributor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__ConstructorHealthFactorTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__ExternalReceiverBlocked"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BaseAdaptor__PricingNotSupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__Slippage"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserDepositsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserWithdrawsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MorphoAaveV3ATokenCollateralAdaptor__HealthFactorTooLow"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "assetOf",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetsUsed",
          "outputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "assets",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimable",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "tokenToDeposit",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToDeposit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositToAaveV3Morpho"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "identifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isDebt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minimumHealthFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "morpho",
          "outputs": [
            {
              "internalType": "contract IMorphoV3",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "morphoRewardsDistributor",
          "outputs": [
            {
              "internalType": "contract RewardsDistributor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeApproval"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "slippage",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "tokenToWithdraw",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToWithdraw",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromAaveV3Morpho"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableFrom",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(uint256,bytes,bytes)": {
            "details": "configurationData is NOT used",
            "params": {
              "adaptorData": "adaptor data containing the abi encoded ERC20 token",
              "assets": "the amount of assets to lend on Morpho"
            }
          },
          "depositToAaveV3Morpho(address,uint256)": {
            "details": "Uses `_maxAvailable` helper function, see BaseAdaptor.sol",
            "params": {
              "amountToDeposit": "the amount of `tokenToDeposit` to lend on Morpho.",
              "tokenToDeposit": "the token to lend on Morpho"
            }
          },
          "identifier()": {
            "details": "Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult."
          },
          "revokeApproval(address,address)": {
            "params": {
              "asset": "the ERC20 asset to revoke `spender`s approval for",
              "spender": "the address to revoke approval for"
            }
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "details": "Important to verify that external receivers are allowed if receiver is not Cellar address.",
            "params": {
              "adaptorData": "adaptor data containing the abi encoded aToken",
              "assets": "the amount of assets to withdraw from Morpho",
              "receiver": "the address to send withdrawn assets to"
            }
          },
          "withdrawFromAaveV3Morpho(address,uint256)": {
            "params": {
              "amountToWithdraw": "the amount of `tokenToWithdraw` to withdraw from Morpho",
              "tokenToWithdraw": "the token to withdraw from Morpho."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "assetOf(bytes)": {
            "notice": "Returns the positions underlying asset."
          },
          "assetsUsed(bytes)": {
            "notice": "When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup."
          },
          "balanceOf(bytes)": {
            "notice": "Returns the cellars balance of the position in terms of underlying asset."
          },
          "claim(uint256,bytes32[])": {
            "notice": "Allows cellars to claim Morpho Rewards."
          },
          "deposit(uint256,bytes,bytes)": {
            "notice": "Cellar must approve Morpho to spend its assets, then call supplyCollateral to lend its assets."
          },
          "depositToAaveV3Morpho(address,uint256)": {
            "notice": "Allows strategists to lend assets on Morpho."
          },
          "isDebt()": {
            "notice": "This adaptor returns collateral, and not debt."
          },
          "minimumHealthFactor()": {
            "notice": "Minimum Health Factor enforced after every aToken withdraw."
          },
          "morpho()": {
            "notice": "The Morpho Aave V3 contract on current network.For mainnet use 0x33333aea097c193e66081E930c33020272b33333."
          },
          "morphoRewardsDistributor()": {
            "notice": "The Morpho Aave V3 rewards handler contract on current network.For mainnet use 0x3B14E5C73e0A56D607A8688098326fD4b4292135."
          },
          "revokeApproval(address,address)": {
            "notice": "Allows strategists to zero out an approval for a given `asset`."
          },
          "slippage()": {
            "notice": "Max possible slippage when making a swap router swap."
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "notice": "Cellars must withdraw from Morpho, check if collateral is backing any loans       and prevent withdraws if so."
          },
          "withdrawFromAaveV3Morpho(address,uint256)": {
            "notice": "Allows strategists to withdraw assets from Morpho."
          },
          "withdrawableFrom(bytes,bytes)": {
            "notice": "Checks that cellar has no active borrows, and if so returns 0."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@balancer-labs/=lib/balancer-v2-monorepo/../../node_modules/@balancer-labs/",
        ":@balancer/=lib/balancer-v2-monorepo/pkg/",
        ":@chainlink/=lib/chainlink/",
        ":@ds-test/=lib/forge-std/lib/ds-test/src/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":@uniswapV3C/=lib/v3-core/contracts/",
        ":@uniswapV3P/=lib/v3-periphery/contracts/",
        ":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/",
        ":balancer-v2-monorepo/=lib/balancer-v2-monorepo/",
        ":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/",
        ":compound-protocol/=lib/compound-protocol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-core.git/=lib/v3-core.git/contracts/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery.git/=lib/v3-periphery.git/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/adaptors/Morpho/MorphoAaveV3ATokenCollateralAdaptor.sol": "MorphoAaveV3ATokenCollateralAdaptor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "keccak256": "0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7",
        "urls": [
          "bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465",
          "dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2",
        "urls": [
          "bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b",
          "dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028",
        "urls": [
          "bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf",
          "dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb",
        "urls": [
          "bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929",
          "dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b",
        "urls": [
          "bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53",
          "dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/Registry.sol": {
        "keccak256": "0x797eca06ed2adc548ca9bcc2b5565437e50862807f1014fcb90f733c4ecc9e47",
        "urls": [
          "bzz-raw://5d11adaa81c94efbb8ad46c031888d7a9e3a2fb41e61356f7423b0c1be8a3189",
          "dweb:/ipfs/QmNvQ4qg7p7zphqctgKyQeuAMVXkcA8pTtb2XgNiBKf2jK"
        ],
        "license": "Apache-2.0"
      },
      "src/base/Cellar.sol": {
        "keccak256": "0xcc435fc48edc29fa9119d9e7bbeea84e0e210368d525656a0f6d2dd3e6186f47",
        "urls": [
          "bzz-raw://a1ae5e4dfdaa91b2fc59574669951f009f74e70682a2b058fd99c0df3c8b9058",
          "dweb:/ipfs/QmNigVHjunwDjvjQAp9NxgR6vRsGu8fzrjH7EgE4T3bdWs"
        ],
        "license": "Apache-2.0"
      },
      "src/base/ERC20.sol": {
        "keccak256": "0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02",
        "urls": [
          "bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4",
          "dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ERC4626.sol": {
        "keccak256": "0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7",
        "urls": [
          "bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469",
          "dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/Multicall.sol": {
        "keccak256": "0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9",
        "urls": [
          "bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c",
          "dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/SafeTransferLib.sol": {
        "keccak256": "0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324",
        "urls": [
          "bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a",
          "dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IMulticall.sol": {
        "keccak256": "0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e",
        "urls": [
          "bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0",
          "dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/IChainlinkAggregator.sol": {
        "keccak256": "0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d",
        "urls": [
          "bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2",
          "dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IGravity.sol": {
        "keccak256": "0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11",
        "urls": [
          "bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51",
          "dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IUniswapV2Router02.sol": {
        "keccak256": "0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f",
        "urls": [
          "bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a",
          "dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IUniswapV3Router.sol": {
        "keccak256": "0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355",
        "urls": [
          "bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd",
          "dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/Morpho/IMorphoV3.sol": {
        "keccak256": "0xb7d9b09efb93ccd8deacb62a899512f2e8d467682158dc73e936c27aedba3dd9",
        "urls": [
          "bzz-raw://6ed4d09ea863c00bad9b19e1b8bc1ab8568a5b1c972b2ef4c02901f019d58241",
          "dweb:/ipfs/Qmd4873kMieGZd4K5BuKU6eCPxmczFEQ8BqaGyVbh3YtYE"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/UniswapV3Pool.sol": {
        "keccak256": "0xf6a71bfbc0665b1d0aad7148b685f3b2254e1be2a3672c2c6671b7fc20db26bb",
        "urls": [
          "bzz-raw://393871fdf75656c49a3bb83bc8110a93af2cbd805df9cc6574a058f3cbf100a9",
          "dweb:/ipfs/QmZugnPctGBiWkFjXXtiKy3AQTWphA9tjZmSBVZRMg9urh"
        ],
        "license": null
      },
      "src/modules/adaptors/BaseAdaptor.sol": {
        "keccak256": "0xc3d6ce867d0df59d4f4ea027bcbc8d982a89d782c648753d3ef149e1679afc5c",
        "urls": [
          "bzz-raw://98eed0613a68c44fb9df313b345ae0b984934cb677f144a1a5a2d0efe604c4ee",
          "dweb:/ipfs/Qmc6dt8S571ibT3DLGqFYRKKk2tgjADi8qpN6kDgm8N7sd"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/adaptors/Morpho/MorphoAaveV3ATokenCollateralAdaptor.sol": {
        "keccak256": "0x019df734e952225534e6ae0d75a868833a92fd54edf0e717e380b20ce44ee449",
        "urls": [
          "bzz-raw://c223a0ee330b6ea2c8af0ceb7f30ac396d52ec00f8f049e0051a97b89bfb1197",
          "dweb:/ipfs/QmTxTpwqF8osJjYeDEGVh9zoySTREFtRKoHws5ZaRvLFuK"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/adaptors/Morpho/MorphoAaveV3HealthFactorLogic.sol": {
        "keccak256": "0x2e5863d04838373cd7d8e5bb96105bbd170b5b99faaf7aa22b58be42d433ed9f",
        "urls": [
          "bzz-raw://c246aee962bb5a21a4ee17b87b6b30b1eef98c21facd43724d3e4c972da37188",
          "dweb:/ipfs/QmWH8Aq1V9RUPCxQhdBeACy2RGxznub6J7cKE6hqK55Aoh"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/adaptors/Morpho/MorphoRewardHandler.sol": {
        "keccak256": "0xc1461e49dacbb75fe03a4aa08a58bec9639416d57fed6c6595ade2f343520480",
        "urls": [
          "bzz-raw://b2cc897411f203e04233ee37d60e70bed92f310df63beb5adede89009c8cfc54",
          "dweb:/ipfs/QmSgJ6xXXqRLTcmyDf5uPtd5FqLvEmuK4QQ5LBXuk5dbhp"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/price-router/Extensions/Extension.sol": {
        "keccak256": "0xd51d51474759b8417232e02290814bc7a06223ad5e57c93459d90a1101db558d",
        "urls": [
          "bzz-raw://0b5670880f335e48eda45ae95d9faa9a009885613c78634ab66114a2f842f1b1",
          "dweb:/ipfs/QmNddDkfvh36LtqrSVkDYKtxyWLv2Heb3hTrBVcUZJxJRo"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/price-router/PriceRouter.sol": {
        "keccak256": "0xa2a1aaeef9be7a72077cc30f1f408dae924ee4b7e25d2ee85491622410b821b9",
        "urls": [
          "bzz-raw://627e4d92a619543f08f916ec6279252d577adbd120fa2e8c2a8635d70c5a7a66",
          "dweb:/ipfs/QmTu6mJiHBUFFEXHRE6KpxE5J2W72fJWdMuvaSopD1Gk1K"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/swap-router/SwapRouter.sol": {
        "keccak256": "0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80",
        "urls": [
          "bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818",
          "dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f",
        "urls": [
          "bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312",
          "dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Uint32Array.sol": {
        "keccak256": "0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9",
        "urls": [
          "bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944",
          "dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/adaptors/Morpho/MorphoAaveV3ATokenCollateralAdaptor.sol",
    "id": 65891,
    "exportedSymbols": {
      "BaseAdaptor": [
        61644
      ],
      "ERC20": [
        45747
      ],
      "IMorphoV3": [
        53563
      ],
      "MorphoAaveV3ATokenCollateralAdaptor": [
        65890
      ],
      "MorphoAaveV3HealthFactorLogic": [
        66644
      ],
      "MorphoRewardHandler": [
        66696
      ],
      "SafeTransferLib": [
        46498
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7130:199",
    "nodes": [
      {
        "id": 65499,
        "nodeType": "PragmaDirective",
        "src": "39:23:199",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 65503,
        "nodeType": "ImportDirective",
        "src": "64:91:199",
        "nodes": [],
        "absolutePath": "src/modules/adaptors/BaseAdaptor.sol",
        "file": "src/modules/adaptors/BaseAdaptor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 65891,
        "sourceUnit": 61645,
        "symbolAliases": [
          {
            "foreign": {
              "id": 65500,
              "name": "BaseAdaptor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61644,
              "src": "73:11:199",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 65501,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45747,
              "src": "86:5:199",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 65502,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46498,
              "src": "93:15:199",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 65505,
        "nodeType": "ImportDirective",
        "src": "156:73:199",
        "nodes": [],
        "absolutePath": "src/interfaces/external/Morpho/IMorphoV3.sol",
        "file": "src/interfaces/external/Morpho/IMorphoV3.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 65891,
        "sourceUnit": 53564,
        "symbolAliases": [
          {
            "foreign": {
              "id": 65504,
              "name": "IMorphoV3",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53563,
              "src": "165:9:199",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 65507,
        "nodeType": "ImportDirective",
        "src": "230:90:199",
        "nodes": [],
        "absolutePath": "src/modules/adaptors/Morpho/MorphoRewardHandler.sol",
        "file": "src/modules/adaptors/Morpho/MorphoRewardHandler.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 65891,
        "sourceUnit": 66697,
        "symbolAliases": [
          {
            "foreign": {
              "id": 65506,
              "name": "MorphoRewardHandler",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66696,
              "src": "239:19:199",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 65509,
        "nodeType": "ImportDirective",
        "src": "321:110:199",
        "nodes": [],
        "absolutePath": "src/modules/adaptors/Morpho/MorphoAaveV3HealthFactorLogic.sol",
        "file": "src/modules/adaptors/Morpho/MorphoAaveV3HealthFactorLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 65891,
        "sourceUnit": 66645,
        "symbolAliases": [
          {
            "foreign": {
              "id": 65508,
              "name": "MorphoAaveV3HealthFactorLogic",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66644,
              "src": "330:29:199",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 65890,
        "nodeType": "ContractDefinition",
        "src": "575:6593:199",
        "nodes": [
          {
            "id": 65520,
            "nodeType": "UsingForDirective",
            "src": "693:32:199",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 65517,
              "name": "SafeTransferLib",
              "nameLocations": [
                "699:15:199"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46498,
              "src": "699:15:199"
            },
            "typeName": {
              "id": 65519,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 65518,
                "name": "ERC20",
                "nameLocations": [
                  "719:5:199"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45747,
                "src": "719:5:199"
              },
              "referencedDeclaration": 45747,
              "src": "719:5:199",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$45747",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 65523,
            "nodeType": "ErrorDefinition",
            "src": "1194:64:199",
            "nodes": [],
            "documentation": {
              "id": 65521,
              "nodeType": "StructuredDocumentation",
              "src": "1104:85:199",
              "text": "@notice Attempted withdraw would lower Cellar health factor too low."
            },
            "errorSelector": "cbb67098",
            "name": "MorphoAaveV3ATokenCollateralAdaptor__HealthFactorTooLow",
            "nameLocation": "1200:55:199",
            "parameters": {
              "id": 65522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:199"
            }
          },
          {
            "id": 65527,
            "nodeType": "VariableDeclaration",
            "src": "1418:33:199",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 65524,
              "nodeType": "StructuredDocumentation",
              "src": "1264:149:199",
              "text": " @notice The Morpho Aave V3 contract on current network.\n @notice For mainnet use 0x33333aea097c193e66081E930c33020272b33333."
            },
            "functionSelector": "d8fbc833",
            "mutability": "immutable",
            "name": "morpho",
            "nameLocation": "1445:6:199",
            "scope": 65890,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
              "typeString": "contract IMorphoV3"
            },
            "typeName": {
              "id": 65526,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 65525,
                "name": "IMorphoV3",
                "nameLocations": [
                  "1418:9:199"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53563,
                "src": "1418:9:199"
              },
              "referencedDeclaration": 53563,
              "src": "1418:9:199",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                "typeString": "contract IMorphoV3"
              }
            },
            "visibility": "public"
          },
          {
            "id": 65530,
            "nodeType": "VariableDeclaration",
            "src": "1549:44:199",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 65528,
              "nodeType": "StructuredDocumentation",
              "src": "1458:86:199",
              "text": " @notice Minimum Health Factor enforced after every aToken withdraw."
            },
            "functionSelector": "1caff8b1",
            "mutability": "immutable",
            "name": "minimumHealthFactor",
            "nameLocation": "1574:19:199",
            "scope": 65890,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65529,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1549:7:199",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 65557,
            "nodeType": "FunctionDefinition",
            "src": "1600:305:199",
            "nodes": [],
            "body": {
              "id": 65556,
              "nodeType": "Block",
              "src": "1750:155:199",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65543,
                        "name": "minHealthFactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65534,
                        "src": "1798:15:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 65542,
                      "name": "_verifyConstructorMinimumHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61626,
                      "src": "1760:37:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) pure"
                      }
                    },
                    "id": 65544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1760:54:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65545,
                  "nodeType": "ExpressionStatement",
                  "src": "1760:54:199"
                },
                {
                  "expression": {
                    "id": 65550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65546,
                      "name": "morpho",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65527,
                      "src": "1824:6:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                        "typeString": "contract IMorphoV3"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 65548,
                          "name": "_morpho",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65532,
                          "src": "1843:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 65547,
                        "name": "IMorphoV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "1833:9:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IMorphoV3_$53563_$",
                          "typeString": "type(contract IMorphoV3)"
                        }
                      },
                      "id": 65549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1833:18:199",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                        "typeString": "contract IMorphoV3"
                      }
                    },
                    "src": "1824:27:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                      "typeString": "contract IMorphoV3"
                    }
                  },
                  "id": 65551,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:27:199"
                },
                {
                  "expression": {
                    "id": 65554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65552,
                      "name": "minimumHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65530,
                      "src": "1861:19:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 65553,
                      "name": "minHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65534,
                      "src": "1883:15:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1861:37:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65555,
                  "nodeType": "ExpressionStatement",
                  "src": "1861:37:199"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 65539,
                    "name": "rewardDistributor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 65536,
                    "src": "1731:17:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 65540,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 65538,
                  "name": "MorphoRewardHandler",
                  "nameLocations": [
                    "1711:19:199"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66696,
                  "src": "1711:19:199"
                },
                "nodeType": "ModifierInvocation",
                "src": "1711:38:199"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 65537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65532,
                  "mutability": "mutable",
                  "name": "_morpho",
                  "nameLocation": "1629:7:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65557,
                  "src": "1621:15:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1621:7:199",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65534,
                  "mutability": "mutable",
                  "name": "minHealthFactor",
                  "nameLocation": "1654:15:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65557,
                  "src": "1646:23:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1646:7:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65536,
                  "mutability": "mutable",
                  "name": "rewardDistributor",
                  "nameLocation": "1687:17:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65557,
                  "src": "1679:25:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:7:199",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1611:99:199"
            },
            "returnParameters": {
              "id": 65541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1750:0:199"
            },
            "scope": 65890,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65572,
            "nodeType": "FunctionDefinition",
            "src": "2324:156:199",
            "nodes": [],
            "body": {
              "id": 65571,
              "nodeType": "Block",
              "src": "2385:95:199",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d6f7270686f20416176652056332061546f6b656e20436f6c6c61746572616c2041646170746f72205620312e32",
                            "id": 65567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2423:48:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_766a65b86580aba38320cc8670ef1305de9d8a9d7928b7fb434318bb57e0185b",
                              "typeString": "literal_string \"Morpho Aave V3 aToken Collateral Adaptor V 1.2\""
                            },
                            "value": "Morpho Aave V3 aToken Collateral Adaptor V 1.2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_766a65b86580aba38320cc8670ef1305de9d8a9d7928b7fb434318bb57e0185b",
                              "typeString": "literal_string \"Morpho Aave V3 aToken Collateral Adaptor V 1.2\""
                            }
                          ],
                          "expression": {
                            "id": 65565,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2412:3:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 65566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2416:6:199",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2412:10:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 65568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2412:60:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 65564,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2402:9:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 65569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2402:71:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 65563,
                  "id": 65570,
                  "nodeType": "Return",
                  "src": "2395:78:199"
                }
              ]
            },
            "baseFunctions": [
              61410
            ],
            "documentation": {
              "id": 65558,
              "nodeType": "StructuredDocumentation",
              "src": "2023:296:199",
              "text": " @dev Identifier unique to this adaptor for a shared registry.\n Normally the identifier would just be the address of this contract, but this\n Identifier is needed during Cellar Delegate Call Operations, so getting the address\n of the adaptor is more difficult."
            },
            "functionSelector": "7998a1c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "identifier",
            "nameLocation": "2333:10:199",
            "overrides": {
              "id": 65560,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2358:8:199"
            },
            "parameters": {
              "id": 65559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2343:2:199"
            },
            "returnParameters": {
              "id": 65563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65562,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65572,
                  "src": "2376:7:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 65561,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2376:7:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2375:9:199"
            },
            "scope": 65890,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65626,
            "nodeType": "FunctionDefinition",
            "src": "2912:436:199",
            "nodes": [],
            "body": {
              "id": 65625,
              "nodeType": "Block",
              "src": "3001:347:199",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    65585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65585,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "3054:10:199",
                      "nodeType": "VariableDeclaration",
                      "scope": 65625,
                      "src": "3048:16:199",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$45747",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 65584,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 65583,
                          "name": "ERC20",
                          "nameLocations": [
                            "3048:5:199"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45747,
                          "src": "3048:5:199"
                        },
                        "referencedDeclaration": 45747,
                        "src": "3048:5:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65592,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 65588,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65577,
                        "src": "3078:11:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 65589,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45747,
                            "src": "3092:5:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                              "typeString": "type(contract ERC20)"
                            }
                          }
                        ],
                        "id": 65590,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3091:7:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                          "typeString": "type(contract ERC20)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                          "typeString": "type(contract ERC20)"
                        }
                      ],
                      "expression": {
                        "id": 65586,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3067:3:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 65587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3071:6:199",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3067:10:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 65591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3067:32:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3048:51:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65598,
                            "name": "morpho",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65527,
                            "src": "3140:6:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          ],
                          "id": 65597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3132:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65596,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3132:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3132:15:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65600,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65575,
                        "src": "3149:6:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 65593,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65585,
                        "src": "3109:10:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 65595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3120:11:199",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46497,
                      "src": "3109:22:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$45747_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 65601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3109:47:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65602,
                  "nodeType": "ExpressionStatement",
                  "src": "3109:47:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65608,
                            "name": "underlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65585,
                            "src": "3199:10:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$45747",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$45747",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 65607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3191:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65606,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3191:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3191:19:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65610,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65575,
                        "src": "3212:6:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65613,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3228:4:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenCollateralAdaptor_$65890",
                              "typeString": "contract MorphoAaveV3ATokenCollateralAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenCollateralAdaptor_$65890",
                              "typeString": "contract MorphoAaveV3ATokenCollateralAdaptor"
                            }
                          ],
                          "id": 65612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3220:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65611,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3220:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3220:13:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 65603,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65527,
                        "src": "3167:6:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        }
                      },
                      "id": 65605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3174:16:199",
                      "memberName": "supplyCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53534,
                      "src": "3167:23:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 65615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3167:67:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65616,
                  "nodeType": "ExpressionStatement",
                  "src": "3167:67:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65618,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65585,
                        "src": "3313:10:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65621,
                            "name": "morpho",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65527,
                            "src": "3333:6:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          ],
                          "id": 65620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3325:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65619,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3325:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3325:15:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 65617,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61585,
                      "src": "3289:23:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 65623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3289:52:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65624,
                  "nodeType": "ExpressionStatement",
                  "src": "3289:52:199"
                }
              ]
            },
            "baseFunctions": [
              61454
            ],
            "documentation": {
              "id": 65573,
              "nodeType": "StructuredDocumentation",
              "src": "2606:301:199",
              "text": " @notice Cellar must approve Morpho to spend its assets, then call supplyCollateral to lend its assets.\n @param assets the amount of assets to lend on Morpho\n @param adaptorData adaptor data containing the abi encoded ERC20 token\n @dev configurationData is NOT used"
            },
            "functionSelector": "69445c31",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2921:7:199",
            "overrides": {
              "id": 65581,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2992:8:199"
            },
            "parameters": {
              "id": 65580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65575,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "2937:6:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65626,
                  "src": "2929:14:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2929:7:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65577,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "2958:11:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65626,
                  "src": "2945:24:199",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65576,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:5:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65579,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65626,
                  "src": "2971:12:199",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65578,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2971:5:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2928:56:199"
            },
            "returnParameters": {
              "id": 65582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3001:0:199"
            },
            "scope": 65890,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65687,
            "nodeType": "FunctionDefinition",
            "src": "3806:584:199",
            "nodes": [],
            "body": {
              "id": 65686,
              "nodeType": "Block",
              "src": "3914:476:199",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65640,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65631,
                        "src": "3987:8:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 65639,
                      "name": "_externalReceiverCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61611,
                      "src": "3964:22:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 65641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3964:32:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65642,
                  "nodeType": "ExpressionStatement",
                  "src": "3964:32:199"
                },
                {
                  "assignments": [
                    65647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65647,
                      "mutability": "mutable",
                      "name": "borrows",
                      "nameLocation": "4074:7:199",
                      "nodeType": "VariableDeclaration",
                      "scope": 65686,
                      "src": "4057:24:199",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 65645,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4057:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 65646,
                        "nodeType": "ArrayTypeName",
                        "src": "4057:9:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65655,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65652,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4111:4:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenCollateralAdaptor_$65890",
                              "typeString": "contract MorphoAaveV3ATokenCollateralAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenCollateralAdaptor_$65890",
                              "typeString": "contract MorphoAaveV3ATokenCollateralAdaptor"
                            }
                          ],
                          "id": 65651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4103:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65650,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4103:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4103:13:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 65648,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65527,
                        "src": "4084:6:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        }
                      },
                      "id": 65649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4091:11:199",
                      "memberName": "userBorrows",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53421,
                      "src": "4084:18:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (address) view external returns (address[] memory)"
                      }
                    },
                    "id": 65654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4084:33:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4057:60:199"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 65659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 65656,
                        "name": "borrows",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65647,
                        "src": "4131:7:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 65657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4139:6:199",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4131:14:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 65658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4148:1:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4131:18:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65663,
                  "nodeType": "IfStatement",
                  "src": "4127:69:199",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 65660,
                        "name": "BaseAdaptor__UserWithdrawsNotAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61385,
                        "src": "4158:36:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 65661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4158:38:199",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 65662,
                    "nodeType": "RevertStatement",
                    "src": "4151:45:199"
                  }
                },
                {
                  "assignments": [
                    65665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65665,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "4215:10:199",
                      "nodeType": "VariableDeclaration",
                      "scope": 65686,
                      "src": "4207:18:199",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 65664,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4207:7:199",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65673,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 65668,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65633,
                        "src": "4239:11:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 65670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4253:7:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 65669,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4253:7:199",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 65671,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4252:9:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 65666,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4228:3:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 65667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4232:6:199",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4228:10:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 65672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4228:34:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4207:55:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65677,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65665,
                        "src": "4339:10:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65678,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65629,
                        "src": "4351:6:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65681,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4367:4:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenCollateralAdaptor_$65890",
                              "typeString": "contract MorphoAaveV3ATokenCollateralAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenCollateralAdaptor_$65890",
                              "typeString": "contract MorphoAaveV3ATokenCollateralAdaptor"
                            }
                          ],
                          "id": 65680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4359:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65679,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4359:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4359:13:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65683,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65631,
                        "src": "4374:8:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 65674,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65527,
                        "src": "4313:6:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        }
                      },
                      "id": 65676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4320:18:199",
                      "memberName": "withdrawCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53562,
                      "src": "4313:25:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 65684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4313:70:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65685,
                  "nodeType": "ExpressionStatement",
                  "src": "4313:70:199"
                }
              ]
            },
            "baseFunctions": [
              61466
            ],
            "documentation": {
              "id": 65627,
              "nodeType": "StructuredDocumentation",
              "src": "3354:447:199",
              "text": "@notice Cellars must withdraw from Morpho, check if collateral is backing any loans\n       and prevent withdraws if so.\n @dev Important to verify that external receivers are allowed if receiver is not Cellar address.\n @param assets the amount of assets to withdraw from Morpho\n @param receiver the address to send withdrawn assets to\n @param adaptorData adaptor data containing the abi encoded aToken"
            },
            "functionSelector": "c9111bd7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "3815:8:199",
            "overrides": {
              "id": 65637,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3905:8:199"
            },
            "parameters": {
              "id": 65636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65629,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "3832:6:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65687,
                  "src": "3824:14:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3824:7:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65631,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3848:8:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65687,
                  "src": "3840:16:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3840:7:199",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65633,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "3871:11:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65687,
                  "src": "3858:24:199",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65632,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3858:5:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65635,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65687,
                  "src": "3884:12:199",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65634,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3884:5:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3823:74:199"
            },
            "returnParameters": {
              "id": 65638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3914:0:199"
            },
            "scope": 65890,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65735,
            "nodeType": "FunctionDefinition",
            "src": "4490:384:199",
            "nodes": [],
            "body": {
              "id": 65734,
              "nodeType": "Block",
              "src": "4595:279:199",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    65702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65702,
                      "mutability": "mutable",
                      "name": "borrows",
                      "nameLocation": "4622:7:199",
                      "nodeType": "VariableDeclaration",
                      "scope": 65734,
                      "src": "4605:24:199",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 65700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4605:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 65701,
                        "nodeType": "ArrayTypeName",
                        "src": "4605:9:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65708,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 65705,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4651:3:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 65706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4655:6:199",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4651:10:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 65703,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65527,
                        "src": "4632:6:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        }
                      },
                      "id": 65704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4639:11:199",
                      "memberName": "userBorrows",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53421,
                      "src": "4632:18:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (address) view external returns (address[] memory)"
                      }
                    },
                    "id": 65707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4632:30:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4605:57:199"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 65712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 65709,
                        "name": "borrows",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65702,
                        "src": "4676:7:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 65710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4684:6:199",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4676:14:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 65711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4693:1:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4676:18:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 65732,
                    "nodeType": "Block",
                    "src": "4719:149:199",
                    "statements": [
                      {
                        "assignments": [
                          65716
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 65716,
                            "mutability": "mutable",
                            "name": "underlying",
                            "nameLocation": "4741:10:199",
                            "nodeType": "VariableDeclaration",
                            "scope": 65732,
                            "src": "4733:18:199",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 65715,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4733:7:199",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 65724,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 65719,
                              "name": "adaptorData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65690,
                              "src": "4765:11:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 65721,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4779:7:199",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 65720,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4779:7:199",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 65722,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4778:9:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 65717,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "4754:3:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 65718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4758:6:199",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "4754:10:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 65723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4754:34:199",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4733:55:199"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 65727,
                              "name": "underlying",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65716,
                              "src": "4834:10:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 65728,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4846:3:199",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 65729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4850:6:199",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4846:10:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 65725,
                              "name": "morpho",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65527,
                              "src": "4809:6:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                                "typeString": "contract IMorphoV3"
                              }
                            },
                            "id": 65726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4816:17:199",
                            "memberName": "collateralBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53430,
                            "src": "4809:24:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 65730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4809:48:199",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 65697,
                        "id": 65731,
                        "nodeType": "Return",
                        "src": "4802:55:199"
                      }
                    ]
                  },
                  "id": 65733,
                  "nodeType": "IfStatement",
                  "src": "4672:196:199",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 65713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4703:1:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 65697,
                    "id": 65714,
                    "nodeType": "Return",
                    "src": "4696:8:199"
                  }
                }
              ]
            },
            "baseFunctions": [
              61484
            ],
            "documentation": {
              "id": 65688,
              "nodeType": "StructuredDocumentation",
              "src": "4396:89:199",
              "text": " @notice Checks that cellar has no active borrows, and if so returns 0."
            },
            "functionSelector": "fa50e5d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawableFrom",
            "nameLocation": "4499:16:199",
            "overrides": {
              "id": 65694,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4568:8:199"
            },
            "parameters": {
              "id": 65693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65690,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "4529:11:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65735,
                  "src": "4516:24:199",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65689,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4516:5:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65692,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65735,
                  "src": "4542:12:199",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65691,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4542:5:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4515:40:199"
            },
            "returnParameters": {
              "id": 65697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65696,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65735,
                  "src": "4586:7:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4586:7:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4585:9:199"
            },
            "scope": 65890,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65762,
            "nodeType": "FunctionDefinition",
            "src": "4985:221:199",
            "nodes": [],
            "body": {
              "id": 65761,
              "nodeType": "Block",
              "src": "5069:137:199",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    65745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65745,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "5087:10:199",
                      "nodeType": "VariableDeclaration",
                      "scope": 65761,
                      "src": "5079:18:199",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 65744,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5079:7:199",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65753,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 65748,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65738,
                        "src": "5111:11:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 65750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5125:7:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 65749,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5125:7:199",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 65751,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5124:9:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 65746,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5100:3:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 65747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5104:6:199",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5100:10:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 65752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5100:34:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5079:55:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65756,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65745,
                        "src": "5176:10:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 65757,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5188:3:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 65758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5192:6:199",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5188:10:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 65754,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65527,
                        "src": "5151:6:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        }
                      },
                      "id": 65755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5158:17:199",
                      "memberName": "collateralBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53430,
                      "src": "5151:24:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 65759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5151:48:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 65743,
                  "id": 65760,
                  "nodeType": "Return",
                  "src": "5144:55:199"
                }
              ]
            },
            "baseFunctions": [
              61474
            ],
            "documentation": {
              "id": 65736,
              "nodeType": "StructuredDocumentation",
              "src": "4880:100:199",
              "text": " @notice Returns the cellars balance of the position in terms of underlying asset."
            },
            "functionSelector": "78415365",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "4994:9:199",
            "overrides": {
              "id": 65740,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5042:8:199"
            },
            "parameters": {
              "id": 65739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65738,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "5017:11:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65762,
                  "src": "5004:24:199",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65737,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5004:5:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5003:26:199"
            },
            "returnParameters": {
              "id": 65743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65742,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65762,
                  "src": "5060:7:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5060:7:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5059:9:199"
            },
            "scope": 65890,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65785,
            "nodeType": "FunctionDefinition",
            "src": "5283:175:199",
            "nodes": [],
            "body": {
              "id": 65784,
              "nodeType": "Block",
              "src": "5363:95:199",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    65774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65774,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "5379:10:199",
                      "nodeType": "VariableDeclaration",
                      "scope": 65784,
                      "src": "5373:16:199",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$45747",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 65773,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 65772,
                          "name": "ERC20",
                          "nameLocations": [
                            "5373:5:199"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45747,
                          "src": "5373:5:199"
                        },
                        "referencedDeclaration": 45747,
                        "src": "5373:5:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65781,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 65777,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65765,
                        "src": "5403:11:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 65778,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45747,
                            "src": "5417:5:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                              "typeString": "type(contract ERC20)"
                            }
                          }
                        ],
                        "id": 65779,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5416:7:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                          "typeString": "type(contract ERC20)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                          "typeString": "type(contract ERC20)"
                        }
                      ],
                      "expression": {
                        "id": 65775,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5392:3:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 65776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5396:6:199",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5392:10:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 65780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5392:32:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5373:51:199"
                },
                {
                  "expression": {
                    "id": 65782,
                    "name": "underlying",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 65774,
                    "src": "5441:10:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "functionReturnParameters": 65771,
                  "id": 65783,
                  "nodeType": "Return",
                  "src": "5434:17:199"
                }
              ]
            },
            "baseFunctions": [
              61493
            ],
            "documentation": {
              "id": 65763,
              "nodeType": "StructuredDocumentation",
              "src": "5212:66:199",
              "text": " @notice Returns the positions underlying asset."
            },
            "functionSelector": "e170a9bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetOf",
            "nameLocation": "5292:7:199",
            "overrides": {
              "id": 65767,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5338:8:199"
            },
            "parameters": {
              "id": 65766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65765,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "5313:11:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65785,
                  "src": "5300:24:199",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65764,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5300:5:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5299:26:199"
            },
            "returnParameters": {
              "id": 65771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65770,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65785,
                  "src": "5356:5:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$45747",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 65769,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65768,
                      "name": "ERC20",
                      "nameLocations": [
                        "5356:5:199"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45747,
                      "src": "5356:5:199"
                    },
                    "referencedDeclaration": 45747,
                    "src": "5356:5:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5355:7:199"
            },
            "scope": 65890,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65795,
            "nodeType": "FunctionDefinition",
            "src": "5542:83:199",
            "nodes": [],
            "body": {
              "id": 65794,
              "nodeType": "Block",
              "src": "5596:29:199",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 65792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5613:5:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 65791,
                  "id": 65793,
                  "nodeType": "Return",
                  "src": "5606:12:199"
                }
              ]
            },
            "baseFunctions": [
              61527
            ],
            "documentation": {
              "id": 65786,
              "nodeType": "StructuredDocumentation",
              "src": "5464:73:199",
              "text": " @notice This adaptor returns collateral, and not debt."
            },
            "functionSelector": "89353a09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDebt",
            "nameLocation": "5551:6:199",
            "overrides": {
              "id": 65788,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5572:8:199"
            },
            "parameters": {
              "id": 65787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5557:2:199"
            },
            "returnParameters": {
              "id": 65791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65790,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65795,
                  "src": "5590:4:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 65789,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5590:4:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5589:6:199"
            },
            "scope": 65890,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65844,
            "nodeType": "FunctionDefinition",
            "src": "6030:437:199",
            "nodes": [],
            "body": {
              "id": 65843,
              "nodeType": "Block",
              "src": "6115:352:199",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 65809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65804,
                      "name": "amountToDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65801,
                      "src": "6125:15:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 65806,
                          "name": "tokenToDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65799,
                          "src": "6157:14:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$45747",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 65807,
                          "name": "amountToDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65801,
                          "src": "6173:15:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$45747",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 65805,
                        "name": "_maxAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61557,
                        "src": "6143:13:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$45747_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,uint256) view returns (uint256)"
                        }
                      },
                      "id": 65808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6143:46:199",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6125:64:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65810,
                  "nodeType": "ExpressionStatement",
                  "src": "6125:64:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65816,
                            "name": "morpho",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65527,
                            "src": "6234:6:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          ],
                          "id": 65815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6226:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65814,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6226:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6226:15:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65818,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65801,
                        "src": "6243:15:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 65811,
                        "name": "tokenToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65799,
                        "src": "6199:14:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 65813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6214:11:199",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46497,
                      "src": "6199:26:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$45747_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 65819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6199:60:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65820,
                  "nodeType": "ExpressionStatement",
                  "src": "6199:60:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65826,
                            "name": "tokenToDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65799,
                            "src": "6301:14:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$45747",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$45747",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 65825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6293:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65824,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6293:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6293:23:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65828,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65801,
                        "src": "6318:15:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65831,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6343:4:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenCollateralAdaptor_$65890",
                              "typeString": "contract MorphoAaveV3ATokenCollateralAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenCollateralAdaptor_$65890",
                              "typeString": "contract MorphoAaveV3ATokenCollateralAdaptor"
                            }
                          ],
                          "id": 65830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6335:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65829,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6335:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6335:13:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 65821,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65527,
                        "src": "6269:6:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        }
                      },
                      "id": 65823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6276:16:199",
                      "memberName": "supplyCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53534,
                      "src": "6269:23:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 65833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6269:80:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65834,
                  "nodeType": "ExpressionStatement",
                  "src": "6269:80:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65836,
                        "name": "tokenToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65799,
                        "src": "6428:14:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65839,
                            "name": "morpho",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65527,
                            "src": "6452:6:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          ],
                          "id": 65838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6444:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65837,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6444:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6444:15:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 65835,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61585,
                      "src": "6404:23:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 65841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6404:56:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65842,
                  "nodeType": "ExpressionStatement",
                  "src": "6404:56:199"
                }
              ]
            },
            "documentation": {
              "id": 65796,
              "nodeType": "StructuredDocumentation",
              "src": "5747:278:199",
              "text": " @notice Allows strategists to lend assets on Morpho.\n @dev Uses `_maxAvailable` helper function, see BaseAdaptor.sol\n @param tokenToDeposit the token to lend on Morpho\n @param amountToDeposit the amount of `tokenToDeposit` to lend on Morpho."
            },
            "functionSelector": "53cbf54c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToAaveV3Morpho",
            "nameLocation": "6039:21:199",
            "parameters": {
              "id": 65802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65799,
                  "mutability": "mutable",
                  "name": "tokenToDeposit",
                  "nameLocation": "6067:14:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65844,
                  "src": "6061:20:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$45747",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 65798,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65797,
                      "name": "ERC20",
                      "nameLocations": [
                        "6061:5:199"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45747,
                      "src": "6061:5:199"
                    },
                    "referencedDeclaration": 45747,
                    "src": "6061:5:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65801,
                  "mutability": "mutable",
                  "name": "amountToDeposit",
                  "nameLocation": "6091:15:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65844,
                  "src": "6083:23:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6083:7:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6060:47:199"
            },
            "returnParameters": {
              "id": 65803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6115:0:199"
            },
            "scope": 65890,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65889,
            "nodeType": "FunctionDefinition",
            "src": "6707:459:199",
            "nodes": [],
            "body": {
              "id": 65888,
              "nodeType": "Block",
              "src": "6797:369:199",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65858,
                            "name": "tokenToWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65848,
                            "src": "6841:15:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$45747",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$45747",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 65857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6833:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65856,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6833:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6833:24:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65860,
                        "name": "amountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65850,
                        "src": "6859:16:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65863,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6885:4:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenCollateralAdaptor_$65890",
                              "typeString": "contract MorphoAaveV3ATokenCollateralAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenCollateralAdaptor_$65890",
                              "typeString": "contract MorphoAaveV3ATokenCollateralAdaptor"
                            }
                          ],
                          "id": 65862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6877:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65861,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6877:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6877:13:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65867,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6900:4:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenCollateralAdaptor_$65890",
                              "typeString": "contract MorphoAaveV3ATokenCollateralAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenCollateralAdaptor_$65890",
                              "typeString": "contract MorphoAaveV3ATokenCollateralAdaptor"
                            }
                          ],
                          "id": 65866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6892:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65865,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6892:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6892:13:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 65853,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65527,
                        "src": "6807:6:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        }
                      },
                      "id": 65855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6814:18:199",
                      "memberName": "withdrawCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53562,
                      "src": "6807:25:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 65869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6807:99:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65870,
                  "nodeType": "ExpressionStatement",
                  "src": "6807:99:199"
                },
                {
                  "assignments": [
                    65872
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65872,
                      "mutability": "mutable",
                      "name": "healthFactor",
                      "nameLocation": "6987:12:199",
                      "nodeType": "VariableDeclaration",
                      "scope": 65888,
                      "src": "6979:20:199",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65871,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6979:7:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65880,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 65874,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65527,
                        "src": "7023:6:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65877,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7039:4:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenCollateralAdaptor_$65890",
                              "typeString": "contract MorphoAaveV3ATokenCollateralAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenCollateralAdaptor_$65890",
                              "typeString": "contract MorphoAaveV3ATokenCollateralAdaptor"
                            }
                          ],
                          "id": 65876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7031:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65875,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7031:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7031:13:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 65873,
                      "name": "_getUserHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66643,
                      "src": "7002:20:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IMorphoV3_$53563_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract IMorphoV3,address) view returns (uint256)"
                      }
                    },
                    "id": 65879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7002:43:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6979:66:199"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 65883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 65881,
                      "name": "healthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65872,
                      "src": "7059:12:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 65882,
                      "name": "minimumHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65530,
                      "src": "7074:19:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7059:34:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65887,
                  "nodeType": "IfStatement",
                  "src": "7055:104:199",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 65884,
                        "name": "MorphoAaveV3ATokenCollateralAdaptor__HealthFactorTooLow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65523,
                        "src": "7102:55:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 65885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7102:57:199",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 65886,
                    "nodeType": "RevertStatement",
                    "src": "7095:64:199"
                  }
                }
              ]
            },
            "documentation": {
              "id": 65845,
              "nodeType": "StructuredDocumentation",
              "src": "6473:229:199",
              "text": " @notice Allows strategists to withdraw assets from Morpho.\n @param tokenToWithdraw the token to withdraw from Morpho.\n @param amountToWithdraw the amount of `tokenToWithdraw` to withdraw from Morpho"
            },
            "functionSelector": "37761272",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFromAaveV3Morpho",
            "nameLocation": "6716:24:199",
            "parameters": {
              "id": 65851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65848,
                  "mutability": "mutable",
                  "name": "tokenToWithdraw",
                  "nameLocation": "6747:15:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65889,
                  "src": "6741:21:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$45747",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 65847,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65846,
                      "name": "ERC20",
                      "nameLocations": [
                        "6741:5:199"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45747,
                      "src": "6741:5:199"
                    },
                    "referencedDeclaration": 45747,
                    "src": "6741:5:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65850,
                  "mutability": "mutable",
                  "name": "amountToWithdraw",
                  "nameLocation": "6772:16:199",
                  "nodeType": "VariableDeclaration",
                  "scope": 65889,
                  "src": "6764:24:199",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6764:7:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6740:49:199"
            },
            "returnParameters": {
              "id": 65852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6797:0:199"
            },
            "scope": 65890,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 65511,
              "name": "BaseAdaptor",
              "nameLocations": [
                "623:11:199"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61644,
              "src": "623:11:199"
            },
            "id": 65512,
            "nodeType": "InheritanceSpecifier",
            "src": "623:11:199"
          },
          {
            "baseName": {
              "id": 65513,
              "name": "MorphoRewardHandler",
              "nameLocations": [
                "636:19:199"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66696,
              "src": "636:19:199"
            },
            "id": 65514,
            "nodeType": "InheritanceSpecifier",
            "src": "636:19:199"
          },
          {
            "baseName": {
              "id": 65515,
              "name": "MorphoAaveV3HealthFactorLogic",
              "nameLocations": [
                "657:29:199"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66644,
              "src": "657:29:199"
            },
            "id": 65516,
            "nodeType": "InheritanceSpecifier",
            "src": "657:29:199"
          }
        ],
        "canonicalName": "MorphoAaveV3ATokenCollateralAdaptor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 65510,
          "nodeType": "StructuredDocumentation",
          "src": "433:141:199",
          "text": " @title Morpho Aave V3 aToken Adaptor\n @notice Allows Cellars to interact with Morpho Aave V3 positions.\n @author crispymangoes"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          65890,
          66644,
          66696,
          61644
        ],
        "name": "MorphoAaveV3ATokenCollateralAdaptor",
        "nameLocation": "584:35:199",
        "scope": 65891,
        "usedErrors": [
          61379,
          61382,
          61385,
          61388,
          61393,
          61396,
          65523
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 199
}