{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_morpho",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "rewardDistributor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__ConstructorHealthFactorTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__ExternalReceiverBlocked",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "BaseAdaptor__PricingNotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__Slippage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserDepositsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserWithdrawsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetOf",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetsUsed",
      "outputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimable",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "configurationData",
          "type": "bytes"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "tokenToDeposit",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxIterations",
          "type": "uint256"
        }
      ],
      "name": "depositToAaveV3Morpho",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDebt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "morpho",
      "outputs": [
        {
          "internalType": "contract IMorphoV3",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "morphoRewardsDistributor",
      "outputs": [
        {
          "internalType": "contract RewardsDistributor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "revokeApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippage",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "configurationData",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "tokenToWithdraw",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToWithdraw",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxIterations",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromAaveV3Morpho",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "withdrawableFrom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "464:6629:200:-:0;;;1444:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;629:72:203;;;;;1549:27:200::1;;::::0;464:6629;;14:177:258;93:13;;-1:-1:-1;;;;;135:31:258;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;464:6629:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "464:6629:200:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;902:145:203;;;;;;:::i;:::-;;:::i;:::-;;6665:426:200;;;;;;:::i;:::-;;:::i;2415:78:188:-;;;2481:5;2142:42:258;;2130:2;2115:18;2415:78:188;;;;;;;;505:60:203;;;;;;;;-1:-1:-1;;;;;2387:32:258;;;2369:51;;2357:2;2342:18;505:60:203;2195:231:258;2586:620:200;;;;;;:::i;:::-;;:::i;4549:217::-;;;;;;:::i;:::-;;:::i;:::-;;;4049:25:258;;;4037:2;4022:18;4549:217:200;3903:177:258;2002:149:200;;;:::i;5679:657::-;;;;;;:::i;:::-;;:::i;5102:83::-;;;5150:4;4407:41:258;;4395:2;4380:18;5102:83:200;4267:187:258;5934:180:188;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3652:513:200:-;;;;;;:::i;:::-;;:::i;9204:107:188:-;;;;;;:::i;:::-;;:::i;1404:33:200:-;;;;;4843:175;;;;;;:::i;:::-;;:::i;4241:238::-;;;;;;:::i;:::-;;:::i;902:145:203:-;977:63;;-1:-1:-1;;;977:63:203;;-1:-1:-1;;;;;977:24:203;:30;;;;:63;;1016:4;;1023:9;;1034:5;;977:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;902:145;;:::o;6665:426:200:-;6882:18;;;:52;;;1187:2;6904:13;:30;6882:52;6878:92;;;-1:-1:-1;1242:1:200;6878:92;6980:104;;-1:-1:-1;;;6980:104:200;;-1:-1:-1;;;;;8429:15:258;;;6980:104:200;;;8411:34:258;8461:18;;;8454:34;;;7048:4:200;8504:18:258;;;8497:43;;;8556:18;;;8549:43;8608:19;;;8601:35;;;6980:6:200;:15;;;;8345:19:258;;6980:104:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6665:426;;;:::o;2586:620::-;2740:16;2770:11;2759:32;;;;;;;;;;;;:::i;:::-;2740:51;-1:-1:-1;2801:47:200;-1:-1:-1;;;;;2801:22:200;;2832:6;2841;2801:22;:47::i;:::-;2859:18;2891:17;2880:40;;;;;;;;;;;;:::i;:::-;2859:61;-1:-1:-1;2934:15:200;;;:46;;;1187:2;2953:10;:27;2934:46;2930:83;;;-1:-1:-1;1242:1:200;2930:83;3023:69;;-1:-1:-1;;;3023:69:200;;-1:-1:-1;;;;;9401:15:258;;;3023:69:200;;;9383:34:258;9433:18;;;9426:34;;;3074:4:200;9476:18:258;;;9469:43;9528:18;;;9521:34;;;3023:6:200;:13;;;;9317:19:258;;3023:69:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3147:52;3171:10;3191:6;3147:23;:52::i;:::-;2693:513;;2586:620;;;:::o;4549:217::-;4624:7;4643:18;4675:11;4664:34;;;;;;;;;;;;:::i;:::-;4715:44;;-1:-1:-1;;;4715:44:200;;-1:-1:-1;;;;;10067:15:258;;;4715:44:200;;;10049:34:258;4748:10:200;10099:18:258;;;10092:43;4643:55:200;;-1:-1:-1;4715:6:200;:20;;;;;;9984:18:258;;4715:44:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4708:51;4549:217;-1:-1:-1;;;4549:217:200:o;2002:149::-;2054:7;2090:53;;;;;;10348:2:258;10330:21;;;10387:2;10367:18;;;10360:30;10426:34;10421:2;10406:18;;10399:62;-1:-1:-1;;;10492:2:258;10477:18;;10470:37;10539:3;10524:19;;10146:403;2090:53:200;;;;;;;;;;;;;2080:64;;;;;;2073:71;;2002:149;:::o;5679:657::-;5890:18;;;:52;;;1187:2;5912:13;:30;5890:52;5886:92;;;-1:-1:-1;1242:1:200;5886:92;6007:46;6021:14;6037:15;6007:13;:46::i;:::-;5989:64;-1:-1:-1;6063:60:200;-1:-1:-1;;;;;6063:26:200;;6098:6;5989:64;6063:26;:60::i;:::-;6133:85;;-1:-1:-1;;;6133:85:200;;-1:-1:-1;;;;;9401:15:258;;;6133:85:200;;;9383:34:258;9433:18;;;9426:34;;;6197:4:200;9476:18:258;;;9469:43;9528:18;;;9521:34;;;6133:6:200;:13;;;;9317:19:258;;6133:85:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6273:56;6297:14;6321:6;6273:23;:56::i;:::-;5679:657;;;:::o;5934:180:188:-;6051:14;;;6063:1;6051:14;;;;;;;;;6009:21;;6051:14;;;;;;;;;;;-1:-1:-1;6051:14:188;6042:23;;6087:20;6095:11;6087:7;:20::i;:::-;6075:6;6082:1;6075:9;;;;;;;;:::i;:::-;;;;;;:32;-1:-1:-1;;;;;6075:32:188;;;-1:-1:-1;;;;;6075:32:188;;;;;5934:180;;;:::o;3652:513:200:-;3866:32;3889:8;3866:22;:32::i;:::-;3909:18;3941:11;3930:34;;;;;;;;;;;;:::i;:::-;3909:55;;3974:18;4006:17;3995:40;;;;;;;;;;;;:::i;:::-;4086:72;;-1:-1:-1;;;4086:72:200;;-1:-1:-1;;;;;8429:15:258;;;4086:72:200;;;8411:34:258;8461:18;;;8454:34;;;4130:4:200;8504:18:258;;;8497:43;8576:15;;;8556:18;;;8549:43;8608:19;;;8601:35;;;3974:61:200;;-1:-1:-1;4086:6:200;:15;;;;;;8345:19:258;;4086:72:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3816:349;;3652:513;;;;:::o;9204:107:188:-;9275:29;-1:-1:-1;;;;;9275:17:188;;9293:7;9302:1;9275:17;:29::i;:::-;9204:107;;:::o;4843:175:200:-;4916:5;4933:16;4963:11;4952:32;;;;;;;;;;;;:::i;4241:238::-;4337:7;4356:18;4388:11;4377:34;;;;;;;;;;;;:::i;:::-;4428:44;;-1:-1:-1;;;4428:44:200;;-1:-1:-1;;;;;10067:15:258;;;4428:44:200;;;10049:34:258;4461:10:200;10099:18:258;;;10092:43;4356:55:200;;-1:-1:-1;4428:6:200;:20;;;;;;9984:18:258;;4428:44:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4421:51;;;4241:238;;;;;:::o;4327:1454:104:-;4438:12;4565:4;4559:11;-1:-1:-1;;;4688:17:104;4681:93;4821:2;4817:1;4798:17;4794:25;4787:37;4901:6;4896:2;4877:17;4873:26;4866:42;5703:2;5700:1;5696:2;5677:17;5674:1;5667:5;5660;5655:51;5224:16;5217:24;5211:2;5193:16;5190:24;5186:1;5182;5176:8;5173:15;5169:46;5166:76;4966:754;4955:765;;;5748:7;5740:34;;;;-1:-1:-1;;;5740:34:104;;10888:2:258;5740:34:104;;;10870:21:258;10927:2;10907:18;;;10900:30;-1:-1:-1;;;10946:18:258;;;10939:44;11000:18;;5740:34:104;;;;;;;8158:167:188;8244:39;;-1:-1:-1;;;8244:39:188;;8268:4;8244:39;;;10049:34:258;-1:-1:-1;;;;;10119:15:258;;;10099:18;;;10092:43;8286:1:188;;8244:15;;;;;;9984:18:258;;8244:39:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;8240:78;;;8289:29;-1:-1:-1;;;;;8289:17:188;;8307:7;8316:1;8289:17;:29::i;7816:207::-;7899:7;-1:-1:-1;;7922:6:188;:27;7918:98;;7958:30;;-1:-1:-1;;;7958:30:188;;7982:4;7958:30;;;2369:51:258;-1:-1:-1;;;;;7958:15:188;;;;;2342:18:258;;7958:30:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7951:37;;;;7918:98;-1:-1:-1;8010:6:188;8003:13;;8425:218;-1:-1:-1;;;;;8503:25:188;;8523:4;8503:25;;;;:74;;;8547:4;-1:-1:-1;;;;;8532:43:188;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8499:137;;;8598:38;;-1:-1:-1;;;8598:38:188;;;;;;;;;;;8499:137;8425:218;:::o;14:127:258:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:258;247:40;;317:18;302:34;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:258:o;426:1014::-;519:6;527;580:2;568:9;559:7;555:23;551:32;548:52;;;596:1;593;586:12;548:52;632:9;619:23;609:33;;661:2;714;703:9;699:18;686:32;737:18;778:2;770:6;767:14;764:34;;;794:1;791;784:12;764:34;832:6;821:9;817:22;807:32;;877:7;870:4;866:2;862:13;858:27;848:55;;899:1;896;889:12;848:55;935:2;922:16;957:2;953;950:10;947:36;;;963:18;;:::i;:::-;1009:2;1006:1;1002:10;992:20;;1032:28;1056:2;1052;1048:11;1032:28;:::i;:::-;1094:15;;;1164:11;;;1160:20;;;1125:12;;;;1192:19;;;1189:39;;;1224:1;1221;1214:12;1189:39;1248:11;;;;1268:142;1284:6;1279:3;1276:15;1268:142;;;1350:17;;1338:30;;1301:12;;;;1388;;;;1268:142;;;1429:5;1419:15;;;;;;;;426:1014;;;;;:::o;1445:138::-;-1:-1:-1;;;;;1527:31:258;;1517:42;;1507:70;;1573:1;1570;1563:12;1588:405;1680:6;1688;1696;1749:2;1737:9;1728:7;1724:23;1720:32;1717:52;;;1765:1;1762;1755:12;1717:52;1804:9;1791:23;1823:38;1855:5;1823:38;:::i;:::-;1880:5;1932:2;1917:18;;1904:32;;-1:-1:-1;1983:2:258;1968:18;;;1955:32;;1588:405;-1:-1:-1;;;1588:405:258:o;2431:530::-;2473:5;2526:3;2519:4;2511:6;2507:17;2503:27;2493:55;;2544:1;2541;2534:12;2493:55;2580:6;2567:20;2606:18;2602:2;2599:26;2596:52;;;2628:18;;:::i;:::-;2672:55;2715:2;2696:13;;-1:-1:-1;;2692:27:258;2721:4;2688:38;2672:55;:::i;:::-;2752:2;2743:7;2736:19;2798:3;2791:4;2786:2;2778:6;2774:15;2770:26;2767:35;2764:55;;;2815:1;2812;2805:12;2764:55;2880:2;2873:4;2865:6;2861:17;2854:4;2845:7;2841:18;2828:55;2928:1;2903:16;;;2921:4;2899:27;2892:38;;;;2907:7;2431:530;-1:-1:-1;;;2431:530:258:o;2966:607::-;3061:6;3069;3077;3130:2;3118:9;3109:7;3105:23;3101:32;3098:52;;;3146:1;3143;3136:12;3098:52;3182:9;3169:23;3159:33;;3243:2;3232:9;3228:18;3215:32;3266:18;3307:2;3299:6;3296:14;3293:34;;;3323:1;3320;3313:12;3293:34;3346:49;3387:7;3378:6;3367:9;3363:22;3346:49;:::i;:::-;3336:59;;3448:2;3437:9;3433:18;3420:32;3404:48;;3477:2;3467:8;3464:16;3461:36;;;3493:1;3490;3483:12;3461:36;;3516:51;3559:7;3548:8;3537:9;3533:24;3516:51;:::i;:::-;3506:61;;;2966:607;;;;;:::o;3578:320::-;3646:6;3699:2;3687:9;3678:7;3674:23;3670:32;3667:52;;;3715:1;3712;3705:12;3667:52;3755:9;3742:23;3788:18;3780:6;3777:30;3774:50;;;3820:1;3817;3810:12;3774:50;3843:49;3884:7;3875:6;3864:9;3860:22;3843:49;:::i;4459:673::-;4645:2;4697:21;;;4767:13;;4670:18;;;4789:22;;;4616:4;;4645:2;4868:15;;;;4842:2;4827:18;;;4616:4;4911:195;4925:6;4922:1;4919:13;4911:195;;;4990:13;;-1:-1:-1;;;;;4986:39:258;4974:52;;5081:15;;;;5046:12;;;;5022:1;4940:9;4911:195;;;-1:-1:-1;5123:3:258;;4459:673;-1:-1:-1;;;;;;4459:673:258:o;5137:750::-;5241:6;5249;5257;5265;5318:3;5306:9;5297:7;5293:23;5289:33;5286:53;;;5335:1;5332;5325:12;5286:53;5371:9;5358:23;5348:33;;5431:2;5420:9;5416:18;5403:32;5444:38;5476:5;5444:38;:::i;:::-;5501:5;-1:-1:-1;5557:2:258;5542:18;;5529:32;5580:18;5610:14;;;5607:34;;;5637:1;5634;5627:12;5607:34;5660:49;5701:7;5692:6;5681:9;5677:22;5660:49;:::i;:::-;5650:59;;5762:2;5751:9;5747:18;5734:32;5718:48;;5791:2;5781:8;5778:16;5775:36;;;5807:1;5804;5797:12;5775:36;;5830:51;5873:7;5862:8;5851:9;5847:24;5830:51;:::i;:::-;5820:61;;;5137:750;;;;;;;:::o;5892:417::-;5975:6;5983;6036:2;6024:9;6015:7;6011:23;6007:32;6004:52;;;6052:1;6049;6042:12;6004:52;6091:9;6078:23;6110:38;6142:5;6110:38;:::i;:::-;6167:5;-1:-1:-1;6224:2:258;6209:18;;6196:32;6237:40;6196:32;6237:40;:::i;:::-;6296:7;6286:17;;;5892:417;;;;;:::o;6764:539::-;6850:6;6858;6911:2;6899:9;6890:7;6886:23;6882:32;6879:52;;;6927:1;6924;6917:12;6879:52;6967:9;6954:23;6996:18;7037:2;7029:6;7026:14;7023:34;;;7053:1;7050;7043:12;7023:34;7076:49;7117:7;7108:6;7097:9;7093:22;7076:49;:::i;:::-;7066:59;;7178:2;7167:9;7163:18;7150:32;7134:48;;7207:2;7197:8;7194:16;7191:36;;;7223:1;7220;7213:12;7191:36;;7246:51;7289:7;7278:8;7267:9;7263:24;7246:51;:::i;:::-;7236:61;;;6764:539;;;;;:::o;7308:801::-;-1:-1:-1;;;;;7584:32:258;;7566:51;;7636:2;7654:18;;;7647:34;;;7554:2;7712;7697:18;;7690:30;;;7769:13;;7539:18;;;7791:22;;;7506:4;;7871:15;;;;7844:3;7829:19;;;7506:4;7914:169;7928:6;7925:1;7922:13;7914:169;;;7989:13;;7977:26;;8058:15;;;;8023:12;;;;7950:1;7943:9;7914:169;;;-1:-1:-1;8100:3:258;;7308:801;-1:-1:-1;;;;;;;;7308:801:258:o;8647:184::-;8717:6;8770:2;8758:9;8749:7;8745:23;8741:32;8738:52;;;8786:1;8783;8776:12;8738:52;-1:-1:-1;8809:16:258;;8647:184;-1:-1:-1;8647:184:258:o;8836:273::-;8921:6;8974:2;8962:9;8953:7;8949:23;8945:32;8942:52;;;8990:1;8987;8980:12;8942:52;9022:9;9016:16;9041:38;9073:5;9041:38;:::i;10554:127::-;10615:10;10610:3;10606:20;10603:1;10596:31;10646:4;10643:1;10636:15;10670:4;10667:1;10660:15;11237:277;11304:6;11357:2;11345:9;11336:7;11332:23;11328:32;11325:52;;;11373:1;11370;11363:12;11325:52;11405:9;11399:16;11458:5;11451:13;11444:21;11437:5;11434:32;11424:60;;11480:1;11477;11470:12",
    "linkReferences": {},
    "immutableReferences": {
      "65919": [
        {
          "start": 543,
          "length": 32
        },
        {
          "start": 829,
          "length": 32
        },
        {
          "start": 983,
          "length": 32
        },
        {
          "start": 1117,
          "length": 32
        },
        {
          "start": 1233,
          "length": 32
        },
        {
          "start": 1339,
          "length": 32
        },
        {
          "start": 1614,
          "length": 32
        },
        {
          "start": 1702,
          "length": 32
        },
        {
          "start": 1818,
          "length": 32
        },
        {
          "start": 2075,
          "length": 32
        },
        {
          "start": 2306,
          "length": 32
        }
      ],
      "66662": [
        {
          "start": 316,
          "length": 32
        },
        {
          "start": 638,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "assetOf(bytes)": "e170a9bf",
    "assetsUsed(bytes)": "aeffddde",
    "balanceOf(bytes)": "78415365",
    "claim(uint256,bytes32[])": "2f52ebb7",
    "deposit(uint256,bytes,bytes)": "69445c31",
    "depositToAaveV3Morpho(address,uint256,uint256)": "7ca4c4b7",
    "identifier()": "7998a1c4",
    "isDebt()": "89353a09",
    "morpho()": "d8fbc833",
    "morphoRewardsDistributor()": "5b5d4d78",
    "revokeApproval(address,address)": "d3bfe76a",
    "slippage()": "3e032a3b",
    "withdraw(uint256,address,bytes,bytes)": "c9111bd7",
    "withdrawFromAaveV3Morpho(address,uint256,uint256)": "35340a27",
    "withdrawableFrom(bytes,bytes)": "fa50e5d2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_morpho\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardDistributor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BaseAdaptor__ConstructorHealthFactorTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__ExternalReceiverBlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"BaseAdaptor__PricingNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__Slippage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserDepositsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserWithdrawsNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetOf\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetsUsed\",\"outputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"configurationData\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"tokenToDeposit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxIterations\",\"type\":\"uint256\"}],\"name\":\"depositToAaveV3Morpho\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDebt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"morpho\",\"outputs\":[{\"internalType\":\"contract IMorphoV3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"morphoRewardsDistributor\",\"outputs\":[{\"internalType\":\"contract RewardsDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"revokeApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippage\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"configurationData\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"tokenToWithdraw\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxIterations\",\"type\":\"uint256\"}],\"name\":\"withdrawFromAaveV3Morpho\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"withdrawableFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"crispymangoes\",\"kind\":\"dev\",\"methods\":{\"deposit(uint256,bytes,bytes)\":{\"params\":{\"adaptorData\":\"adaptor data containining the abi encoded aToken\",\"assets\":\"the amount of assets to lend on Morpho\",\"configurationData\":\"abi encoded maxIterations\"}},\"depositToAaveV3Morpho(address,uint256,uint256)\":{\"details\":\"Uses `_maxAvailable` helper function, see BaseAdaptor.sol\",\"params\":{\"amountToDeposit\":\"the amount of `tokenToDeposit` to lend on Morpho.\",\"maxIterations\":\"maximum number of iterations for Morphos p2p matching engine\",\"tokenToDeposit\":\"the token to lend on Morpho\"}},\"identifier()\":{\"details\":\"Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult.\"},\"revokeApproval(address,address)\":{\"params\":{\"asset\":\"the ERC20 asset to revoke `spender`s approval for\",\"spender\":\"the address to revoke approval for\"}},\"withdraw(uint256,address,bytes,bytes)\":{\"details\":\"Important to verify that external receivers are allowed if receiver is not Cellar address.\",\"params\":{\"adaptorData\":\"adaptor data containining the abi encoded ERC20 token\",\"assets\":\"the amount of assets to withdraw from Morpho\",\"configurationData\":\"abi encoded maximum iterations.\",\"receiver\":\"the address to send withdrawn assets to\"}},\"withdrawFromAaveV3Morpho(address,uint256,uint256)\":{\"params\":{\"amountToWithdraw\":\"the amount of `tokenToWithdraw` to withdraw from Morpho\",\"maxIterations\":\"maximum number of iterations for Morphos p2p matching engine\",\"tokenToWithdraw\":\"the token to withdraw from Morpho.\"}}},\"title\":\"Morpho Aave V3 aToken Adaptor\",\"version\":1},\"userdoc\":{\"errors\":{\"BaseAdaptor__ConstructorHealthFactorTooLow()\":[{\"notice\":\"Attempted to set a constructor minimum health factor to a value         below `MINIMUM_CONSTRUCTOR_HEALTH_FACTOR()`.\"}],\"BaseAdaptor__ExternalReceiverBlocked()\":[{\"notice\":\"Attempted to specify an external receiver during a Cellar `callOnAdaptor` call.\"}],\"BaseAdaptor__PricingNotSupported(address)\":[{\"notice\":\"Attempted swap used unsupported output asset.\"}],\"BaseAdaptor__Slippage()\":[{\"notice\":\"Attempted swap has bad slippage.\"}],\"BaseAdaptor__UserDepositsNotAllowed()\":[{\"notice\":\"Attempted to deposit to a position where user deposits were not allowed.\"}],\"BaseAdaptor__UserWithdrawsNotAllowed()\":[{\"notice\":\"Attempted to withdraw from a position where user withdraws were not allowed.\"}]},\"kind\":\"user\",\"methods\":{\"assetOf(bytes)\":{\"notice\":\"Returns the positions underlying asset.\"},\"assetsUsed(bytes)\":{\"notice\":\"When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup.\"},\"balanceOf(bytes)\":{\"notice\":\"Returns the cellars p2p balance.\"},\"claim(uint256,bytes32[])\":{\"notice\":\"Allows cellars to claim Morpho Rewards.\"},\"deposit(uint256,bytes,bytes)\":{\"notice\":\"Cellar must approve Morpho to spend its assets, then call supply to lend its assets.\"},\"depositToAaveV3Morpho(address,uint256,uint256)\":{\"notice\":\"Allows strategists to lend assets on Morpho.\"},\"isDebt()\":{\"notice\":\"This adaptor returns collateral, and not debt.\"},\"morpho()\":{\"notice\":\"The Morpho Aave V3 contract on current network.For mainnet use 0x33333aea097c193e66081E930c33020272b33333.\"},\"morphoRewardsDistributor()\":{\"notice\":\"The Morpho Aave V3 rewards handler contract on current network.For mainnet use 0x3B14E5C73e0A56D607A8688098326fD4b4292135.\"},\"revokeApproval(address,address)\":{\"notice\":\"Allows strategists to zero out an approval for a given `asset`.\"},\"slippage()\":{\"notice\":\"Max possible slippage when making a swap router swap.\"},\"withdraw(uint256,address,bytes,bytes)\":{\"notice\":\"Allows cellars to withdraw Morpho.\"},\"withdrawFromAaveV3Morpho(address,uint256,uint256)\":{\"notice\":\"Allows strategists to withdraw assets from Morpho.\"},\"withdrawableFrom(bytes,bytes)\":{\"notice\":\"Returns the p2p balance of the cellar.\"}},\"notice\":\"Allows Cellars to interact with Morpho Aave V3 positions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/adaptors/Morpho/MorphoAaveV3ATokenP2PAdaptor.sol\":\"MorphoAaveV3ATokenP2PAdaptor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@balancer-labs/=lib/balancer-v2-monorepo/../../node_modules/@balancer-labs/\",\":@balancer/=lib/balancer-v2-monorepo/pkg/\",\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":@uniswapV3C/=lib/v3-core/contracts/\",\":@uniswapV3P/=lib/v3-periphery/contracts/\",\":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/\",\":balancer-v2-monorepo/=lib/balancer-v2-monorepo/\",\":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/\",\":compound-protocol/=lib/compound-protocol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":v3-core.git/=lib/v3-core.git/contracts/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery.git/=lib/v3-periphery.git/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53\",\"dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM\"]},\"src/Registry.sol\":{\"keccak256\":\"0x797eca06ed2adc548ca9bcc2b5565437e50862807f1014fcb90f733c4ecc9e47\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d11adaa81c94efbb8ad46c031888d7a9e3a2fb41e61356f7423b0c1be8a3189\",\"dweb:/ipfs/QmNvQ4qg7p7zphqctgKyQeuAMVXkcA8pTtb2XgNiBKf2jK\"]},\"src/base/Cellar.sol\":{\"keccak256\":\"0xcc435fc48edc29fa9119d9e7bbeea84e0e210368d525656a0f6d2dd3e6186f47\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1ae5e4dfdaa91b2fc59574669951f009f74e70682a2b058fd99c0df3c8b9058\",\"dweb:/ipfs/QmNigVHjunwDjvjQAp9NxgR6vRsGu8fzrjH7EgE4T3bdWs\"]},\"src/base/ERC20.sol\":{\"keccak256\":\"0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4\",\"dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf\"]},\"src/base/ERC4626.sol\":{\"keccak256\":\"0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469\",\"dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE\"]},\"src/base/Multicall.sol\":{\"keccak256\":\"0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c\",\"dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K\"]},\"src/base/SafeTransferLib.sol\":{\"keccak256\":\"0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a\",\"dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3\"]},\"src/interfaces/IMulticall.sol\":{\"keccak256\":\"0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0\",\"dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5\"]},\"src/interfaces/external/IChainlinkAggregator.sol\":{\"keccak256\":\"0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2\",\"dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs\"]},\"src/interfaces/external/IGravity.sol\":{\"keccak256\":\"0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51\",\"dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c\"]},\"src/interfaces/external/IUniswapV2Router02.sol\":{\"keccak256\":\"0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a\",\"dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo\"]},\"src/interfaces/external/IUniswapV3Router.sol\":{\"keccak256\":\"0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd\",\"dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK\"]},\"src/interfaces/external/Morpho/IMorphoV3.sol\":{\"keccak256\":\"0xb7d9b09efb93ccd8deacb62a899512f2e8d467682158dc73e936c27aedba3dd9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6ed4d09ea863c00bad9b19e1b8bc1ab8568a5b1c972b2ef4c02901f019d58241\",\"dweb:/ipfs/Qmd4873kMieGZd4K5BuKU6eCPxmczFEQ8BqaGyVbh3YtYE\"]},\"src/interfaces/external/UniswapV3Pool.sol\":{\"keccak256\":\"0xf6a71bfbc0665b1d0aad7148b685f3b2254e1be2a3672c2c6671b7fc20db26bb\",\"urls\":[\"bzz-raw://393871fdf75656c49a3bb83bc8110a93af2cbd805df9cc6574a058f3cbf100a9\",\"dweb:/ipfs/QmZugnPctGBiWkFjXXtiKy3AQTWphA9tjZmSBVZRMg9urh\"]},\"src/modules/adaptors/BaseAdaptor.sol\":{\"keccak256\":\"0xc3d6ce867d0df59d4f4ea027bcbc8d982a89d782c648753d3ef149e1679afc5c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://98eed0613a68c44fb9df313b345ae0b984934cb677f144a1a5a2d0efe604c4ee\",\"dweb:/ipfs/Qmc6dt8S571ibT3DLGqFYRKKk2tgjADi8qpN6kDgm8N7sd\"]},\"src/modules/adaptors/Morpho/MorphoAaveV3ATokenP2PAdaptor.sol\":{\"keccak256\":\"0x4d8aab372a599e69c545f5b4cb991530dd18c301f3cfd775858ab37b09332aea\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41f7b060c85e6ef1e90546a95b942c14d0a325aec1bffe259b9911b0fd534ea5\",\"dweb:/ipfs/QmXYkhfDHzb6NnuEpnYndRs4osEbDn4bQpNCcUSAqQuLE7\"]},\"src/modules/adaptors/Morpho/MorphoRewardHandler.sol\":{\"keccak256\":\"0xc1461e49dacbb75fe03a4aa08a58bec9639416d57fed6c6595ade2f343520480\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b2cc897411f203e04233ee37d60e70bed92f310df63beb5adede89009c8cfc54\",\"dweb:/ipfs/QmSgJ6xXXqRLTcmyDf5uPtd5FqLvEmuK4QQ5LBXuk5dbhp\"]},\"src/modules/price-router/Extensions/Extension.sol\":{\"keccak256\":\"0xd51d51474759b8417232e02290814bc7a06223ad5e57c93459d90a1101db558d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b5670880f335e48eda45ae95d9faa9a009885613c78634ab66114a2f842f1b1\",\"dweb:/ipfs/QmNddDkfvh36LtqrSVkDYKtxyWLv2Heb3hTrBVcUZJxJRo\"]},\"src/modules/price-router/PriceRouter.sol\":{\"keccak256\":\"0xa2a1aaeef9be7a72077cc30f1f408dae924ee4b7e25d2ee85491622410b821b9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://627e4d92a619543f08f916ec6279252d577adbd120fa2e8c2a8635d70c5a7a66\",\"dweb:/ipfs/QmTu6mJiHBUFFEXHRE6KpxE5J2W72fJWdMuvaSopD1Gk1K\"]},\"src/modules/swap-router/SwapRouter.sol\":{\"keccak256\":\"0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818\",\"dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312\",\"dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r\"]},\"src/utils/Uint32Array.sol\":{\"keccak256\":\"0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944\",\"dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_morpho",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "rewardDistributor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__ConstructorHealthFactorTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__ExternalReceiverBlocked"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BaseAdaptor__PricingNotSupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__Slippage"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserDepositsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserWithdrawsNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "assetOf",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetsUsed",
          "outputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "assets",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimable",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "configurationData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "tokenToDeposit",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxIterations",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositToAaveV3Morpho"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "identifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isDebt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "morpho",
          "outputs": [
            {
              "internalType": "contract IMorphoV3",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "morphoRewardsDistributor",
          "outputs": [
            {
              "internalType": "contract RewardsDistributor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeApproval"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "slippage",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "configurationData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "tokenToWithdraw",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToWithdraw",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxIterations",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromAaveV3Morpho"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableFrom",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(uint256,bytes,bytes)": {
            "params": {
              "adaptorData": "adaptor data containining the abi encoded aToken",
              "assets": "the amount of assets to lend on Morpho",
              "configurationData": "abi encoded maxIterations"
            }
          },
          "depositToAaveV3Morpho(address,uint256,uint256)": {
            "details": "Uses `_maxAvailable` helper function, see BaseAdaptor.sol",
            "params": {
              "amountToDeposit": "the amount of `tokenToDeposit` to lend on Morpho.",
              "maxIterations": "maximum number of iterations for Morphos p2p matching engine",
              "tokenToDeposit": "the token to lend on Morpho"
            }
          },
          "identifier()": {
            "details": "Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult."
          },
          "revokeApproval(address,address)": {
            "params": {
              "asset": "the ERC20 asset to revoke `spender`s approval for",
              "spender": "the address to revoke approval for"
            }
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "details": "Important to verify that external receivers are allowed if receiver is not Cellar address.",
            "params": {
              "adaptorData": "adaptor data containining the abi encoded ERC20 token",
              "assets": "the amount of assets to withdraw from Morpho",
              "configurationData": "abi encoded maximum iterations.",
              "receiver": "the address to send withdrawn assets to"
            }
          },
          "withdrawFromAaveV3Morpho(address,uint256,uint256)": {
            "params": {
              "amountToWithdraw": "the amount of `tokenToWithdraw` to withdraw from Morpho",
              "maxIterations": "maximum number of iterations for Morphos p2p matching engine",
              "tokenToWithdraw": "the token to withdraw from Morpho."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "assetOf(bytes)": {
            "notice": "Returns the positions underlying asset."
          },
          "assetsUsed(bytes)": {
            "notice": "When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup."
          },
          "balanceOf(bytes)": {
            "notice": "Returns the cellars p2p balance."
          },
          "claim(uint256,bytes32[])": {
            "notice": "Allows cellars to claim Morpho Rewards."
          },
          "deposit(uint256,bytes,bytes)": {
            "notice": "Cellar must approve Morpho to spend its assets, then call supply to lend its assets."
          },
          "depositToAaveV3Morpho(address,uint256,uint256)": {
            "notice": "Allows strategists to lend assets on Morpho."
          },
          "isDebt()": {
            "notice": "This adaptor returns collateral, and not debt."
          },
          "morpho()": {
            "notice": "The Morpho Aave V3 contract on current network.For mainnet use 0x33333aea097c193e66081E930c33020272b33333."
          },
          "morphoRewardsDistributor()": {
            "notice": "The Morpho Aave V3 rewards handler contract on current network.For mainnet use 0x3B14E5C73e0A56D607A8688098326fD4b4292135."
          },
          "revokeApproval(address,address)": {
            "notice": "Allows strategists to zero out an approval for a given `asset`."
          },
          "slippage()": {
            "notice": "Max possible slippage when making a swap router swap."
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "notice": "Allows cellars to withdraw Morpho."
          },
          "withdrawFromAaveV3Morpho(address,uint256,uint256)": {
            "notice": "Allows strategists to withdraw assets from Morpho."
          },
          "withdrawableFrom(bytes,bytes)": {
            "notice": "Returns the p2p balance of the cellar."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@balancer-labs/=lib/balancer-v2-monorepo/../../node_modules/@balancer-labs/",
        ":@balancer/=lib/balancer-v2-monorepo/pkg/",
        ":@chainlink/=lib/chainlink/",
        ":@ds-test/=lib/forge-std/lib/ds-test/src/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":@uniswapV3C/=lib/v3-core/contracts/",
        ":@uniswapV3P/=lib/v3-periphery/contracts/",
        ":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/",
        ":balancer-v2-monorepo/=lib/balancer-v2-monorepo/",
        ":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/",
        ":compound-protocol/=lib/compound-protocol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-core.git/=lib/v3-core.git/contracts/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery.git/=lib/v3-periphery.git/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/adaptors/Morpho/MorphoAaveV3ATokenP2PAdaptor.sol": "MorphoAaveV3ATokenP2PAdaptor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "keccak256": "0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7",
        "urls": [
          "bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465",
          "dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2",
        "urls": [
          "bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b",
          "dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028",
        "urls": [
          "bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf",
          "dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb",
        "urls": [
          "bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929",
          "dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b",
        "urls": [
          "bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53",
          "dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/Registry.sol": {
        "keccak256": "0x797eca06ed2adc548ca9bcc2b5565437e50862807f1014fcb90f733c4ecc9e47",
        "urls": [
          "bzz-raw://5d11adaa81c94efbb8ad46c031888d7a9e3a2fb41e61356f7423b0c1be8a3189",
          "dweb:/ipfs/QmNvQ4qg7p7zphqctgKyQeuAMVXkcA8pTtb2XgNiBKf2jK"
        ],
        "license": "Apache-2.0"
      },
      "src/base/Cellar.sol": {
        "keccak256": "0xcc435fc48edc29fa9119d9e7bbeea84e0e210368d525656a0f6d2dd3e6186f47",
        "urls": [
          "bzz-raw://a1ae5e4dfdaa91b2fc59574669951f009f74e70682a2b058fd99c0df3c8b9058",
          "dweb:/ipfs/QmNigVHjunwDjvjQAp9NxgR6vRsGu8fzrjH7EgE4T3bdWs"
        ],
        "license": "Apache-2.0"
      },
      "src/base/ERC20.sol": {
        "keccak256": "0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02",
        "urls": [
          "bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4",
          "dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ERC4626.sol": {
        "keccak256": "0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7",
        "urls": [
          "bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469",
          "dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/Multicall.sol": {
        "keccak256": "0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9",
        "urls": [
          "bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c",
          "dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/SafeTransferLib.sol": {
        "keccak256": "0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324",
        "urls": [
          "bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a",
          "dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IMulticall.sol": {
        "keccak256": "0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e",
        "urls": [
          "bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0",
          "dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/IChainlinkAggregator.sol": {
        "keccak256": "0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d",
        "urls": [
          "bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2",
          "dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IGravity.sol": {
        "keccak256": "0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11",
        "urls": [
          "bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51",
          "dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IUniswapV2Router02.sol": {
        "keccak256": "0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f",
        "urls": [
          "bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a",
          "dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IUniswapV3Router.sol": {
        "keccak256": "0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355",
        "urls": [
          "bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd",
          "dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/Morpho/IMorphoV3.sol": {
        "keccak256": "0xb7d9b09efb93ccd8deacb62a899512f2e8d467682158dc73e936c27aedba3dd9",
        "urls": [
          "bzz-raw://6ed4d09ea863c00bad9b19e1b8bc1ab8568a5b1c972b2ef4c02901f019d58241",
          "dweb:/ipfs/Qmd4873kMieGZd4K5BuKU6eCPxmczFEQ8BqaGyVbh3YtYE"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/UniswapV3Pool.sol": {
        "keccak256": "0xf6a71bfbc0665b1d0aad7148b685f3b2254e1be2a3672c2c6671b7fc20db26bb",
        "urls": [
          "bzz-raw://393871fdf75656c49a3bb83bc8110a93af2cbd805df9cc6574a058f3cbf100a9",
          "dweb:/ipfs/QmZugnPctGBiWkFjXXtiKy3AQTWphA9tjZmSBVZRMg9urh"
        ],
        "license": null
      },
      "src/modules/adaptors/BaseAdaptor.sol": {
        "keccak256": "0xc3d6ce867d0df59d4f4ea027bcbc8d982a89d782c648753d3ef149e1679afc5c",
        "urls": [
          "bzz-raw://98eed0613a68c44fb9df313b345ae0b984934cb677f144a1a5a2d0efe604c4ee",
          "dweb:/ipfs/Qmc6dt8S571ibT3DLGqFYRKKk2tgjADi8qpN6kDgm8N7sd"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/adaptors/Morpho/MorphoAaveV3ATokenP2PAdaptor.sol": {
        "keccak256": "0x4d8aab372a599e69c545f5b4cb991530dd18c301f3cfd775858ab37b09332aea",
        "urls": [
          "bzz-raw://41f7b060c85e6ef1e90546a95b942c14d0a325aec1bffe259b9911b0fd534ea5",
          "dweb:/ipfs/QmXYkhfDHzb6NnuEpnYndRs4osEbDn4bQpNCcUSAqQuLE7"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/adaptors/Morpho/MorphoRewardHandler.sol": {
        "keccak256": "0xc1461e49dacbb75fe03a4aa08a58bec9639416d57fed6c6595ade2f343520480",
        "urls": [
          "bzz-raw://b2cc897411f203e04233ee37d60e70bed92f310df63beb5adede89009c8cfc54",
          "dweb:/ipfs/QmSgJ6xXXqRLTcmyDf5uPtd5FqLvEmuK4QQ5LBXuk5dbhp"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/price-router/Extensions/Extension.sol": {
        "keccak256": "0xd51d51474759b8417232e02290814bc7a06223ad5e57c93459d90a1101db558d",
        "urls": [
          "bzz-raw://0b5670880f335e48eda45ae95d9faa9a009885613c78634ab66114a2f842f1b1",
          "dweb:/ipfs/QmNddDkfvh36LtqrSVkDYKtxyWLv2Heb3hTrBVcUZJxJRo"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/price-router/PriceRouter.sol": {
        "keccak256": "0xa2a1aaeef9be7a72077cc30f1f408dae924ee4b7e25d2ee85491622410b821b9",
        "urls": [
          "bzz-raw://627e4d92a619543f08f916ec6279252d577adbd120fa2e8c2a8635d70c5a7a66",
          "dweb:/ipfs/QmTu6mJiHBUFFEXHRE6KpxE5J2W72fJWdMuvaSopD1Gk1K"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/swap-router/SwapRouter.sol": {
        "keccak256": "0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80",
        "urls": [
          "bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818",
          "dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f",
        "urls": [
          "bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312",
          "dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Uint32Array.sol": {
        "keccak256": "0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9",
        "urls": [
          "bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944",
          "dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/adaptors/Morpho/MorphoAaveV3ATokenP2PAdaptor.sol",
    "id": 66277,
    "exportedSymbols": {
      "BaseAdaptor": [
        61644
      ],
      "ERC20": [
        45747
      ],
      "IMorphoV3": [
        53563
      ],
      "MorphoAaveV3ATokenP2PAdaptor": [
        66276
      ],
      "MorphoRewardHandler": [
        66696
      ],
      "SafeTransferLib": [
        46498
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7055:200",
    "nodes": [
      {
        "id": 65892,
        "nodeType": "PragmaDirective",
        "src": "39:23:200",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 65896,
        "nodeType": "ImportDirective",
        "src": "64:91:200",
        "nodes": [],
        "absolutePath": "src/modules/adaptors/BaseAdaptor.sol",
        "file": "src/modules/adaptors/BaseAdaptor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66277,
        "sourceUnit": 61645,
        "symbolAliases": [
          {
            "foreign": {
              "id": 65893,
              "name": "BaseAdaptor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61644,
              "src": "73:11:200",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 65894,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45747,
              "src": "86:5:200",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 65895,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46498,
              "src": "93:15:200",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 65898,
        "nodeType": "ImportDirective",
        "src": "156:73:200",
        "nodes": [],
        "absolutePath": "src/interfaces/external/Morpho/IMorphoV3.sol",
        "file": "src/interfaces/external/Morpho/IMorphoV3.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66277,
        "sourceUnit": 53564,
        "symbolAliases": [
          {
            "foreign": {
              "id": 65897,
              "name": "IMorphoV3",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53563,
              "src": "165:9:200",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 65900,
        "nodeType": "ImportDirective",
        "src": "230:90:200",
        "nodes": [],
        "absolutePath": "src/modules/adaptors/Morpho/MorphoRewardHandler.sol",
        "file": "src/modules/adaptors/Morpho/MorphoRewardHandler.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66277,
        "sourceUnit": 66697,
        "symbolAliases": [
          {
            "foreign": {
              "id": 65899,
              "name": "MorphoRewardHandler",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66696,
              "src": "239:19:200",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66276,
        "nodeType": "ContractDefinition",
        "src": "464:6629:200",
        "nodes": [
          {
            "id": 65909,
            "nodeType": "UsingForDirective",
            "src": "544:32:200",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 65906,
              "name": "SafeTransferLib",
              "nameLocations": [
                "550:15:200"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46498,
              "src": "550:15:200"
            },
            "typeName": {
              "id": 65908,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 65907,
                "name": "ERC20",
                "nameLocations": [
                  "570:5:200"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45747,
                "src": "570:5:200"
              },
              "referencedDeclaration": 45747,
              "src": "570:5:200",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$45747",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 65912,
            "nodeType": "VariableDeclaration",
            "src": "1144:45:200",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MAX_ITERATIONS",
            "nameLocation": "1170:14:200",
            "scope": 66276,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65910,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1144:7:200",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 65911,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1187:2:200",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "id": 65915,
            "nodeType": "VariableDeclaration",
            "src": "1195:48:200",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "OPTIMAL_ITERATIONS",
            "nameLocation": "1221:18:200",
            "scope": 66276,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65913,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1195:7:200",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "34",
              "id": 65914,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1242:1:200",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4_by_1",
                "typeString": "int_const 4"
              },
              "value": "4"
            },
            "visibility": "internal"
          },
          {
            "id": 65919,
            "nodeType": "VariableDeclaration",
            "src": "1404:33:200",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 65916,
              "nodeType": "StructuredDocumentation",
              "src": "1250:149:200",
              "text": " @notice The Morpho Aave V3 contract on current network.\n @notice For mainnet use 0x33333aea097c193e66081E930c33020272b33333."
            },
            "functionSelector": "d8fbc833",
            "mutability": "immutable",
            "name": "morpho",
            "nameLocation": "1431:6:200",
            "scope": 66276,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
              "typeString": "contract IMorphoV3"
            },
            "typeName": {
              "id": 65918,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 65917,
                "name": "IMorphoV3",
                "nameLocations": [
                  "1404:9:200"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53563,
                "src": "1404:9:200"
              },
              "referencedDeclaration": 53563,
              "src": "1404:9:200",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                "typeString": "contract IMorphoV3"
              }
            },
            "visibility": "public"
          },
          {
            "id": 65936,
            "nodeType": "FunctionDefinition",
            "src": "1444:139:200",
            "nodes": [],
            "body": {
              "id": 65935,
              "nodeType": "Block",
              "src": "1539:44:200",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 65933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65929,
                      "name": "morpho",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65919,
                      "src": "1549:6:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                        "typeString": "contract IMorphoV3"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 65931,
                          "name": "_morpho",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65921,
                          "src": "1568:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 65930,
                        "name": "IMorphoV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "1558:9:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IMorphoV3_$53563_$",
                          "typeString": "type(contract IMorphoV3)"
                        }
                      },
                      "id": 65932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1558:18:200",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                        "typeString": "contract IMorphoV3"
                      }
                    },
                    "src": "1549:27:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                      "typeString": "contract IMorphoV3"
                    }
                  },
                  "id": 65934,
                  "nodeType": "ExpressionStatement",
                  "src": "1549:27:200"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 65926,
                    "name": "rewardDistributor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 65923,
                    "src": "1520:17:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 65927,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 65925,
                  "name": "MorphoRewardHandler",
                  "nameLocations": [
                    "1500:19:200"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66696,
                  "src": "1500:19:200"
                },
                "nodeType": "ModifierInvocation",
                "src": "1500:38:200"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 65924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65921,
                  "mutability": "mutable",
                  "name": "_morpho",
                  "nameLocation": "1464:7:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 65936,
                  "src": "1456:15:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65923,
                  "mutability": "mutable",
                  "name": "rewardDistributor",
                  "nameLocation": "1481:17:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 65936,
                  "src": "1473:25:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1455:44:200"
            },
            "returnParameters": {
              "id": 65928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1539:0:200"
            },
            "scope": 66276,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65951,
            "nodeType": "FunctionDefinition",
            "src": "2002:149:200",
            "nodes": [],
            "body": {
              "id": 65950,
              "nodeType": "Block",
              "src": "2063:88:200",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d6f7270686f20416176652056332061546f6b656e205032502041646170746f72205620312e32",
                            "id": 65946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2101:41:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bb2002321549ba02fb73271b6d22696c0f2450a0966102d0034f5d025bf91173",
                              "typeString": "literal_string \"Morpho Aave V3 aToken P2P Adaptor V 1.2\""
                            },
                            "value": "Morpho Aave V3 aToken P2P Adaptor V 1.2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_bb2002321549ba02fb73271b6d22696c0f2450a0966102d0034f5d025bf91173",
                              "typeString": "literal_string \"Morpho Aave V3 aToken P2P Adaptor V 1.2\""
                            }
                          ],
                          "expression": {
                            "id": 65944,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2090:3:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 65945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2094:6:200",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2090:10:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 65947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2090:53:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 65943,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2080:9:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 65948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2080:64:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 65942,
                  "id": 65949,
                  "nodeType": "Return",
                  "src": "2073:71:200"
                }
              ]
            },
            "baseFunctions": [
              61410
            ],
            "documentation": {
              "id": 65937,
              "nodeType": "StructuredDocumentation",
              "src": "1701:296:200",
              "text": " @dev Identifier unique to this adaptor for a shared registry.\n Normally the identifier would just be the address of this contract, but this\n Identifier is needed during Cellar Delegate Call Operations, so getting the address\n of the adaptor is more difficult."
            },
            "functionSelector": "7998a1c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "identifier",
            "nameLocation": "2011:10:200",
            "overrides": {
              "id": 65939,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2036:8:200"
            },
            "parameters": {
              "id": 65938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2021:2:200"
            },
            "returnParameters": {
              "id": 65942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65941,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65951,
                  "src": "2054:7:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 65940,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2054:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2053:9:200"
            },
            "scope": 66276,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66028,
            "nodeType": "FunctionDefinition",
            "src": "2586:620:200",
            "nodes": [],
            "body": {
              "id": 66027,
              "nodeType": "Block",
              "src": "2693:513:200",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    65964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65964,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "2746:10:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 66027,
                      "src": "2740:16:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$45747",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 65963,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 65962,
                          "name": "ERC20",
                          "nameLocations": [
                            "2740:5:200"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45747,
                          "src": "2740:5:200"
                        },
                        "referencedDeclaration": 45747,
                        "src": "2740:5:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65971,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 65967,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65956,
                        "src": "2770:11:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 65968,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45747,
                            "src": "2784:5:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                              "typeString": "type(contract ERC20)"
                            }
                          }
                        ],
                        "id": 65969,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2783:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                          "typeString": "type(contract ERC20)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                          "typeString": "type(contract ERC20)"
                        }
                      ],
                      "expression": {
                        "id": 65965,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2759:3:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 65966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2763:6:200",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2759:10:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 65970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2759:32:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2740:51:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65977,
                            "name": "morpho",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65919,
                            "src": "2832:6:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          ],
                          "id": 65976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2824:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65975,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2824:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2824:15:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65979,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65954,
                        "src": "2841:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 65972,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65964,
                        "src": "2801:10:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 65974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2812:11:200",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46497,
                      "src": "2801:22:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$45747_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 65980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:47:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65981,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:47:200"
                },
                {
                  "assignments": [
                    65983
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65983,
                      "mutability": "mutable",
                      "name": "iterations",
                      "nameLocation": "2867:10:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 66027,
                      "src": "2859:18:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65982,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2859:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65991,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 65986,
                        "name": "configurationData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65958,
                        "src": "2891:17:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 65988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2911:7:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 65987,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2911:7:200",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 65989,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2910:9:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 65984,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2880:3:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 65985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2884:6:200",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2880:10:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 65990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2880:40:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2859:61:200"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 65998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 65994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 65992,
                        "name": "iterations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65983,
                        "src": "2934:10:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 65993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2948:1:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2934:15:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 65997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 65995,
                        "name": "iterations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65983,
                        "src": "2953:10:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 65996,
                        "name": "MAX_ITERATIONS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65912,
                        "src": "2966:14:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2953:27:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2934:46:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66003,
                  "nodeType": "IfStatement",
                  "src": "2930:83:200",
                  "trueBody": {
                    "expression": {
                      "id": 66001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 65999,
                        "name": "iterations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65983,
                        "src": "2982:10:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 66000,
                        "name": "OPTIMAL_ITERATIONS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65915,
                        "src": "2995:18:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2982:31:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 66002,
                    "nodeType": "ExpressionStatement",
                    "src": "2982:31:200"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66009,
                            "name": "underlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65964,
                            "src": "3045:10:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$45747",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$45747",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 66008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3037:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66007,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3037:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3037:19:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66011,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65954,
                        "src": "3058:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66014,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3074:4:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenP2PAdaptor_$66276",
                              "typeString": "contract MorphoAaveV3ATokenP2PAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenP2PAdaptor_$66276",
                              "typeString": "contract MorphoAaveV3ATokenP2PAdaptor"
                            }
                          ],
                          "id": 66013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3066:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66012,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3066:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3066:13:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66016,
                        "name": "iterations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65983,
                        "src": "3081:10:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 66004,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65919,
                        "src": "3023:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        }
                      },
                      "id": 66006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3030:6:200",
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53523,
                      "src": "3023:13:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 66017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3023:69:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 66018,
                  "nodeType": "ExpressionStatement",
                  "src": "3023:69:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66020,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65964,
                        "src": "3171:10:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66023,
                            "name": "morpho",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65919,
                            "src": "3191:6:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          ],
                          "id": 66022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3183:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66021,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3183:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3183:15:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 66019,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61585,
                      "src": "3147:23:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 66025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3147:52:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66026,
                  "nodeType": "ExpressionStatement",
                  "src": "3147:52:200"
                }
              ]
            },
            "baseFunctions": [
              61454
            ],
            "documentation": {
              "id": 65952,
              "nodeType": "StructuredDocumentation",
              "src": "2277:304:200",
              "text": " @notice Cellar must approve Morpho to spend its assets, then call supply to lend its assets.\n @param assets the amount of assets to lend on Morpho\n @param adaptorData adaptor data containining the abi encoded aToken\n @param configurationData abi encoded maxIterations"
            },
            "functionSelector": "69445c31",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2595:7:200",
            "overrides": {
              "id": 65960,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2684:8:200"
            },
            "parameters": {
              "id": 65959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65954,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "2611:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66028,
                  "src": "2603:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2603:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65956,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "2632:11:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66028,
                  "src": "2619:24:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65955,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2619:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65958,
                  "mutability": "mutable",
                  "name": "configurationData",
                  "nameLocation": "2658:17:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66028,
                  "src": "2645:30:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65957,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2645:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2602:74:200"
            },
            "returnParameters": {
              "id": 65961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2693:0:200"
            },
            "scope": 66276,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66079,
            "nodeType": "FunctionDefinition",
            "src": "3652:513:200",
            "nodes": [],
            "body": {
              "id": 66078,
              "nodeType": "Block",
              "src": "3816:349:200",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66042,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66033,
                        "src": "3889:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 66041,
                      "name": "_externalReceiverCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61611,
                      "src": "3866:22:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 66043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3866:32:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66044,
                  "nodeType": "ExpressionStatement",
                  "src": "3866:32:200"
                },
                {
                  "assignments": [
                    66046
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66046,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "3917:10:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 66078,
                      "src": "3909:18:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66045,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3909:7:200",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66054,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 66049,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66035,
                        "src": "3941:11:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 66051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3955:7:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 66050,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3955:7:200",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 66052,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3954:9:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 66047,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3930:3:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 66048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3934:6:200",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3930:10:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 66053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3930:34:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3909:55:200"
                },
                {
                  "assignments": [
                    66056
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66056,
                      "mutability": "mutable",
                      "name": "iterations",
                      "nameLocation": "3982:10:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 66078,
                      "src": "3974:18:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66055,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3974:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66064,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 66059,
                        "name": "configurationData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66037,
                        "src": "4006:17:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 66061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4026:7:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 66060,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4026:7:200",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 66062,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4025:9:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 66057,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3995:3:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 66058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3999:6:200",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3995:10:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 66063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3995:40:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3974:61:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66068,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66046,
                        "src": "4102:10:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66069,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66031,
                        "src": "4114:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66072,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4130:4:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenP2PAdaptor_$66276",
                              "typeString": "contract MorphoAaveV3ATokenP2PAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenP2PAdaptor_$66276",
                              "typeString": "contract MorphoAaveV3ATokenP2PAdaptor"
                            }
                          ],
                          "id": 66071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4122:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66070,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4122:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4122:13:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66074,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66033,
                        "src": "4137:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66075,
                        "name": "iterations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66056,
                        "src": "4147:10:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 66065,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65919,
                        "src": "4086:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        }
                      },
                      "id": 66067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4093:8:200",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53549,
                      "src": "4086:15:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 66076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4086:72:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 66077,
                  "nodeType": "ExpressionStatement",
                  "src": "4086:72:200"
                }
              ]
            },
            "baseFunctions": [
              61466
            ],
            "documentation": {
              "id": 66029,
              "nodeType": "StructuredDocumentation",
              "src": "3212:435:200",
              "text": "@notice Allows cellars to withdraw Morpho.\n @dev Important to verify that external receivers are allowed if receiver is not Cellar address.\n @param assets the amount of assets to withdraw from Morpho\n @param receiver the address to send withdrawn assets to\n @param adaptorData adaptor data containining the abi encoded ERC20 token\n @param configurationData abi encoded maximum iterations."
            },
            "functionSelector": "c9111bd7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "3661:8:200",
            "overrides": {
              "id": 66039,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3807:8:200"
            },
            "parameters": {
              "id": 66038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66031,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "3687:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66079,
                  "src": "3679:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3679:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66033,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3711:8:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66079,
                  "src": "3703:16:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3703:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66035,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "3742:11:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66079,
                  "src": "3729:24:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66034,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3729:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66037,
                  "mutability": "mutable",
                  "name": "configurationData",
                  "nameLocation": "3776:17:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66079,
                  "src": "3763:30:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66036,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3763:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3669:130:200"
            },
            "returnParameters": {
              "id": 66040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3816:0:200"
            },
            "scope": 66276,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66108,
            "nodeType": "FunctionDefinition",
            "src": "4241:238:200",
            "nodes": [],
            "body": {
              "id": 66107,
              "nodeType": "Block",
              "src": "4346:133:200",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    66091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66091,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "4364:10:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 66107,
                      "src": "4356:18:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66090,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4356:7:200",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66099,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 66094,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66082,
                        "src": "4388:11:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 66096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4402:7:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 66095,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4402:7:200",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 66097,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4401:9:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 66092,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4377:3:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 66093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4381:6:200",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4377:10:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 66098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4377:34:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4356:55:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66102,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66091,
                        "src": "4449:10:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 66103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4461:3:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 66104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4465:6:200",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4461:10:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 66100,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65919,
                        "src": "4428:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        }
                      },
                      "id": 66101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4435:13:200",
                      "memberName": "supplyBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53439,
                      "src": "4428:20:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 66105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4428:44:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 66089,
                  "id": 66106,
                  "nodeType": "Return",
                  "src": "4421:51:200"
                }
              ]
            },
            "baseFunctions": [
              61484
            ],
            "documentation": {
              "id": 66080,
              "nodeType": "StructuredDocumentation",
              "src": "4171:65:200",
              "text": " @notice Returns the p2p balance of the cellar."
            },
            "functionSelector": "fa50e5d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawableFrom",
            "nameLocation": "4250:16:200",
            "overrides": {
              "id": 66086,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4319:8:200"
            },
            "parameters": {
              "id": 66085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66082,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "4280:11:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66108,
                  "src": "4267:24:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66081,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4267:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66084,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66108,
                  "src": "4293:12:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66083,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4293:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4266:40:200"
            },
            "returnParameters": {
              "id": 66089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66088,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66108,
                  "src": "4337:7:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4337:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4336:9:200"
            },
            "scope": 66276,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66135,
            "nodeType": "FunctionDefinition",
            "src": "4549:217:200",
            "nodes": [],
            "body": {
              "id": 66134,
              "nodeType": "Block",
              "src": "4633:133:200",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    66118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66118,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "4651:10:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 66134,
                      "src": "4643:18:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66117,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4643:7:200",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66126,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 66121,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66111,
                        "src": "4675:11:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 66123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4689:7:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 66122,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4689:7:200",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 66124,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4688:9:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 66119,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4664:3:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 66120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4668:6:200",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4664:10:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 66125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4664:34:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4643:55:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66129,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66118,
                        "src": "4736:10:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 66130,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4748:3:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 66131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4752:6:200",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4748:10:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 66127,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65919,
                        "src": "4715:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        }
                      },
                      "id": 66128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4722:13:200",
                      "memberName": "supplyBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53439,
                      "src": "4715:20:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 66132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4715:44:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 66116,
                  "id": 66133,
                  "nodeType": "Return",
                  "src": "4708:51:200"
                }
              ]
            },
            "baseFunctions": [
              61474
            ],
            "documentation": {
              "id": 66109,
              "nodeType": "StructuredDocumentation",
              "src": "4485:59:200",
              "text": " @notice Returns the cellars p2p balance."
            },
            "functionSelector": "78415365",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "4558:9:200",
            "overrides": {
              "id": 66113,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4606:8:200"
            },
            "parameters": {
              "id": 66112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66111,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "4581:11:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66135,
                  "src": "4568:24:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66110,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4568:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4567:26:200"
            },
            "returnParameters": {
              "id": 66116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66115,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66135,
                  "src": "4624:7:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4624:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4623:9:200"
            },
            "scope": 66276,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66158,
            "nodeType": "FunctionDefinition",
            "src": "4843:175:200",
            "nodes": [],
            "body": {
              "id": 66157,
              "nodeType": "Block",
              "src": "4923:95:200",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    66147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66147,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "4939:10:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 66157,
                      "src": "4933:16:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$45747",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 66146,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 66145,
                          "name": "ERC20",
                          "nameLocations": [
                            "4933:5:200"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45747,
                          "src": "4933:5:200"
                        },
                        "referencedDeclaration": 45747,
                        "src": "4933:5:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66154,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 66150,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66138,
                        "src": "4963:11:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 66151,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45747,
                            "src": "4977:5:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                              "typeString": "type(contract ERC20)"
                            }
                          }
                        ],
                        "id": 66152,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4976:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                          "typeString": "type(contract ERC20)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                          "typeString": "type(contract ERC20)"
                        }
                      ],
                      "expression": {
                        "id": 66148,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4952:3:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 66149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4956:6:200",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4952:10:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 66153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4952:32:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4933:51:200"
                },
                {
                  "expression": {
                    "id": 66155,
                    "name": "underlying",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66147,
                    "src": "5001:10:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "functionReturnParameters": 66144,
                  "id": 66156,
                  "nodeType": "Return",
                  "src": "4994:17:200"
                }
              ]
            },
            "baseFunctions": [
              61493
            ],
            "documentation": {
              "id": 66136,
              "nodeType": "StructuredDocumentation",
              "src": "4772:66:200",
              "text": " @notice Returns the positions underlying asset."
            },
            "functionSelector": "e170a9bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetOf",
            "nameLocation": "4852:7:200",
            "overrides": {
              "id": 66140,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4898:8:200"
            },
            "parameters": {
              "id": 66139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66138,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "4873:11:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66158,
                  "src": "4860:24:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66137,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4860:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4859:26:200"
            },
            "returnParameters": {
              "id": 66144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66143,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66158,
                  "src": "4916:5:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$45747",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 66142,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66141,
                      "name": "ERC20",
                      "nameLocations": [
                        "4916:5:200"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45747,
                      "src": "4916:5:200"
                    },
                    "referencedDeclaration": 45747,
                    "src": "4916:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4915:7:200"
            },
            "scope": 66276,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66168,
            "nodeType": "FunctionDefinition",
            "src": "5102:83:200",
            "nodes": [],
            "body": {
              "id": 66167,
              "nodeType": "Block",
              "src": "5156:29:200",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 66165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5173:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 66164,
                  "id": 66166,
                  "nodeType": "Return",
                  "src": "5166:12:200"
                }
              ]
            },
            "baseFunctions": [
              61527
            ],
            "documentation": {
              "id": 66159,
              "nodeType": "StructuredDocumentation",
              "src": "5024:73:200",
              "text": " @notice This adaptor returns collateral, and not debt."
            },
            "functionSelector": "89353a09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDebt",
            "nameLocation": "5111:6:200",
            "overrides": {
              "id": 66161,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5132:8:200"
            },
            "parameters": {
              "id": 66160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5117:2:200"
            },
            "returnParameters": {
              "id": 66164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66163,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66168,
                  "src": "5150:4:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66162,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5150:4:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5149:6:200"
            },
            "scope": 66276,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66232,
            "nodeType": "FunctionDefinition",
            "src": "5679:657:200",
            "nodes": [],
            "body": {
              "id": 66231,
              "nodeType": "Block",
              "src": "5787:549:200",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 66185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 66181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66179,
                        "name": "maxIterations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66176,
                        "src": "5890:13:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 66180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5907:1:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5890:18:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 66184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66182,
                        "name": "maxIterations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66176,
                        "src": "5912:13:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 66183,
                        "name": "MAX_ITERATIONS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65912,
                        "src": "5928:14:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5912:30:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5890:52:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66190,
                  "nodeType": "IfStatement",
                  "src": "5886:92:200",
                  "trueBody": {
                    "expression": {
                      "id": 66188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 66186,
                        "name": "maxIterations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66176,
                        "src": "5944:13:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 66187,
                        "name": "OPTIMAL_ITERATIONS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65915,
                        "src": "5960:18:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5944:34:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 66189,
                    "nodeType": "ExpressionStatement",
                    "src": "5944:34:200"
                  }
                },
                {
                  "expression": {
                    "id": 66196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66191,
                      "name": "amountToDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66174,
                      "src": "5989:15:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 66193,
                          "name": "tokenToDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66172,
                          "src": "6021:14:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$45747",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 66194,
                          "name": "amountToDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66174,
                          "src": "6037:15:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$45747",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 66192,
                        "name": "_maxAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61557,
                        "src": "6007:13:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$45747_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,uint256) view returns (uint256)"
                        }
                      },
                      "id": 66195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6007:46:200",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5989:64:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 66197,
                  "nodeType": "ExpressionStatement",
                  "src": "5989:64:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66203,
                            "name": "morpho",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65919,
                            "src": "6098:6:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          ],
                          "id": 66202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6090:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66201,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6090:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6090:15:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66205,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66174,
                        "src": "6107:15:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 66198,
                        "name": "tokenToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66172,
                        "src": "6063:14:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 66200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6078:11:200",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46497,
                      "src": "6063:26:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$45747_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 66206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6063:60:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66207,
                  "nodeType": "ExpressionStatement",
                  "src": "6063:60:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66213,
                            "name": "tokenToDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66172,
                            "src": "6155:14:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$45747",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$45747",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 66212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6147:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66211,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6147:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6147:23:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66215,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66174,
                        "src": "6172:15:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66218,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6197:4:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenP2PAdaptor_$66276",
                              "typeString": "contract MorphoAaveV3ATokenP2PAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenP2PAdaptor_$66276",
                              "typeString": "contract MorphoAaveV3ATokenP2PAdaptor"
                            }
                          ],
                          "id": 66217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6189:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66216,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6189:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6189:13:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66220,
                        "name": "maxIterations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66176,
                        "src": "6204:13:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 66208,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65919,
                        "src": "6133:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        }
                      },
                      "id": 66210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6140:6:200",
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53523,
                      "src": "6133:13:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 66221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6133:85:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 66222,
                  "nodeType": "ExpressionStatement",
                  "src": "6133:85:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66224,
                        "name": "tokenToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66172,
                        "src": "6297:14:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66227,
                            "name": "morpho",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65919,
                            "src": "6321:6:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                              "typeString": "contract IMorphoV3"
                            }
                          ],
                          "id": 66226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6313:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66225,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6313:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6313:15:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 66223,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61585,
                      "src": "6273:23:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 66229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6273:56:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66230,
                  "nodeType": "ExpressionStatement",
                  "src": "6273:56:200"
                }
              ]
            },
            "documentation": {
              "id": 66169,
              "nodeType": "StructuredDocumentation",
              "src": "5307:367:200",
              "text": " @notice Allows strategists to lend assets on Morpho.\n @dev Uses `_maxAvailable` helper function, see BaseAdaptor.sol\n @param tokenToDeposit the token to lend on Morpho\n @param amountToDeposit the amount of `tokenToDeposit` to lend on Morpho.\n @param maxIterations maximum number of iterations for Morphos p2p matching engine"
            },
            "functionSelector": "7ca4c4b7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToAaveV3Morpho",
            "nameLocation": "5688:21:200",
            "parameters": {
              "id": 66177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66172,
                  "mutability": "mutable",
                  "name": "tokenToDeposit",
                  "nameLocation": "5716:14:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66232,
                  "src": "5710:20:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$45747",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 66171,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66170,
                      "name": "ERC20",
                      "nameLocations": [
                        "5710:5:200"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45747,
                      "src": "5710:5:200"
                    },
                    "referencedDeclaration": 45747,
                    "src": "5710:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66174,
                  "mutability": "mutable",
                  "name": "amountToDeposit",
                  "nameLocation": "5740:15:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66232,
                  "src": "5732:23:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5732:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66176,
                  "mutability": "mutable",
                  "name": "maxIterations",
                  "nameLocation": "5765:13:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66232,
                  "src": "5757:21:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5757:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5709:70:200"
            },
            "returnParameters": {
              "id": 66178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5787:0:200"
            },
            "scope": 66276,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66275,
            "nodeType": "FunctionDefinition",
            "src": "6665:426:200",
            "nodes": [],
            "body": {
              "id": 66274,
              "nodeType": "Block",
              "src": "6778:313:200",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 66249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 66245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66243,
                        "name": "maxIterations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66240,
                        "src": "6882:13:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 66244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6899:1:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6882:18:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 66248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66246,
                        "name": "maxIterations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66240,
                        "src": "6904:13:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 66247,
                        "name": "MAX_ITERATIONS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65912,
                        "src": "6920:14:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6904:30:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6882:52:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "Sanitize maxIterations to prevent strategists from gas griefing Somm relayer.",
                  "id": 66254,
                  "nodeType": "IfStatement",
                  "src": "6878:92:200",
                  "trueBody": {
                    "expression": {
                      "id": 66252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 66250,
                        "name": "maxIterations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66240,
                        "src": "6936:13:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 66251,
                        "name": "OPTIMAL_ITERATIONS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65915,
                        "src": "6952:18:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6936:34:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 66253,
                    "nodeType": "ExpressionStatement",
                    "src": "6936:34:200"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66260,
                            "name": "tokenToWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66236,
                            "src": "7004:15:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$45747",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$45747",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 66259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6996:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66258,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6996:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6996:24:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66262,
                        "name": "amountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66238,
                        "src": "7022:16:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66265,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7048:4:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenP2PAdaptor_$66276",
                              "typeString": "contract MorphoAaveV3ATokenP2PAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenP2PAdaptor_$66276",
                              "typeString": "contract MorphoAaveV3ATokenP2PAdaptor"
                            }
                          ],
                          "id": 66264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7040:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66263,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7040:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7040:13:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66269,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7063:4:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenP2PAdaptor_$66276",
                              "typeString": "contract MorphoAaveV3ATokenP2PAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MorphoAaveV3ATokenP2PAdaptor_$66276",
                              "typeString": "contract MorphoAaveV3ATokenP2PAdaptor"
                            }
                          ],
                          "id": 66268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7055:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66267,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7055:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7055:13:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66271,
                        "name": "maxIterations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66240,
                        "src": "7070:13:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 66255,
                        "name": "morpho",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65919,
                        "src": "6980:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMorphoV3_$53563",
                          "typeString": "contract IMorphoV3"
                        }
                      },
                      "id": 66257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6987:8:200",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53549,
                      "src": "6980:15:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 66272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6980:104:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 66273,
                  "nodeType": "ExpressionStatement",
                  "src": "6980:104:200"
                }
              ]
            },
            "documentation": {
              "id": 66233,
              "nodeType": "StructuredDocumentation",
              "src": "6342:318:200",
              "text": " @notice Allows strategists to withdraw assets from Morpho.\n @param tokenToWithdraw the token to withdraw from Morpho.\n @param amountToWithdraw the amount of `tokenToWithdraw` to withdraw from Morpho\n @param maxIterations maximum number of iterations for Morphos p2p matching engine"
            },
            "functionSelector": "35340a27",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFromAaveV3Morpho",
            "nameLocation": "6674:24:200",
            "parameters": {
              "id": 66241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66236,
                  "mutability": "mutable",
                  "name": "tokenToWithdraw",
                  "nameLocation": "6705:15:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66275,
                  "src": "6699:21:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$45747",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 66235,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66234,
                      "name": "ERC20",
                      "nameLocations": [
                        "6699:5:200"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45747,
                      "src": "6699:5:200"
                    },
                    "referencedDeclaration": 45747,
                    "src": "6699:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66238,
                  "mutability": "mutable",
                  "name": "amountToWithdraw",
                  "nameLocation": "6730:16:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66275,
                  "src": "6722:24:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6722:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66240,
                  "mutability": "mutable",
                  "name": "maxIterations",
                  "nameLocation": "6756:13:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 66275,
                  "src": "6748:21:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6748:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6698:72:200"
            },
            "returnParameters": {
              "id": 66242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6778:0:200"
            },
            "scope": 66276,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 65902,
              "name": "BaseAdaptor",
              "nameLocations": [
                "505:11:200"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61644,
              "src": "505:11:200"
            },
            "id": 65903,
            "nodeType": "InheritanceSpecifier",
            "src": "505:11:200"
          },
          {
            "baseName": {
              "id": 65904,
              "name": "MorphoRewardHandler",
              "nameLocations": [
                "518:19:200"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66696,
              "src": "518:19:200"
            },
            "id": 65905,
            "nodeType": "InheritanceSpecifier",
            "src": "518:19:200"
          }
        ],
        "canonicalName": "MorphoAaveV3ATokenP2PAdaptor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 65901,
          "nodeType": "StructuredDocumentation",
          "src": "322:141:200",
          "text": " @title Morpho Aave V3 aToken Adaptor\n @notice Allows Cellars to interact with Morpho Aave V3 positions.\n @author crispymangoes"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          66276,
          66696,
          61644
        ],
        "name": "MorphoAaveV3ATokenP2PAdaptor",
        "nameLocation": "473:28:200",
        "scope": 66277,
        "usedErrors": [
          61379,
          61382,
          61385,
          61388,
          61393,
          61396
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 200
}