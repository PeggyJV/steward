{
  "abi": [
    {
      "inputs": [],
      "name": "AaveV3ATokenAdaptor__HealthFactorTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AaveV3ATokenAdaptor__OracleUsesDifferentBase",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__ExternalReceiverBlocked",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "BaseAdaptor__PricingNotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__Slippage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserDepositsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserWithdrawsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "useAsCollateral",
          "type": "bool"
        }
      ],
      "name": "adjustIsolationModeAssetAsCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetOf",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetsUsed",
      "outputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "categoryId",
          "type": "uint8"
        }
      ],
      "name": "changeEMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "tokenToDeposit",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToDeposit",
          "type": "uint256"
        }
      ],
      "name": "depositToAave",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDebt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "revokeApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippage",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "configData",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "tokenToWithdraw",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToWithdraw",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromAave",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "configData",
          "type": "bytes"
        }
      ],
      "name": "withdrawableFrom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611af3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806389353a091161008c578063d3bfe76a11610066578063d3bfe76a146101bd578063e170a9bf146101d0578063eeb149e7146101fb578063fa50e5d21461020e57600080fd5b806389353a091461017b578063aeffddde1461018a578063c9111bd7146101aa57600080fd5b80634ac839f7116100c85780634ac839f71461012c57806369445c311461013f57806378415365146101525780637998a1c41461017357600080fd5b806323bf298f146100ef5780633e032a3b14610104578063487ede0414610119575b600080fd5b6101026100fd366004611542565b610221565b005b60405161232881526020015b60405180910390f35b61010261012736600461157b565b610351565b61010261013a3660046115b6565b6103f2565b61010261014d366004611676565b61051a565b6101656101603660046116e3565b61065f565b604051908152602001610110565b6101656106e8565b60405160008152602001610110565b61019d6101983660046116e3565b610746565b6040516101109190611720565b6101026101b836600461176d565b6108cc565b6101026101cb3660046117ed565b610bff565b6101e36101de3660046116e3565b610c14565b6040516001600160a01b039091168152602001610110565b61010261020936600461157b565b610c8f565b61016561021c36600461181b565b610d56565b600080516020611a9e833981519152604051635a3b74b960e01b81526001600160a01b03848116600483015283151560248301529190911690635a3b74b990604401600060405180830381600087803b15801561027d57600080fd5b505af1158015610291573d6000803e3d6000fd5b5050505060006102ac600080516020611a9e83398151915290565b604051632fe4a15f60e21b81523060048201526001600160a01b03919091169063bf92857c9060240160c060405180830381865afa1580156102f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610316919061187f565b9550505050505061032c670e92596fd629000090565b81101561034c5760405163106c2d2f60e31b815260040160405180910390fd5b505050565b600080516020611a9e833981519152604051631a4ca37b60e21b81526001600160a01b0384811660048301526024820184905230604483015291909116906369328dec906064016020604051808303816000875af11580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db91906118c9565b506000600080516020611a9e8339815191526102ac565b600080516020611a9e8339815191526040516328530a4760e01b815260ff831660048201526001600160a01b0391909116906328530a4790602401600060405180830381600087803b15801561044757600080fd5b505af115801561045b573d6000803e3d6000fd5b505050506000610476600080516020611a9e83398151915290565b604051632fe4a15f60e21b81523060048201526001600160a01b03919091169063bf92857c9060240160c060405180830381865afa1580156104bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e0919061187f565b955050505050506104f6670e92596fd629000090565b8110156105165760405163106c2d2f60e31b815260040160405180910390fd5b5050565b60008280602001905181019061053091906118e2565b90506000816001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610572573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059691906118e2565b90506105ba6001600160a01b038216600080516020611a9e8339815191528761125f565b600080516020611a9e83398151915260405163617ba03760e01b81526001600160a01b0383811660048301526024820188905230604483015260006064830152919091169063617ba03790608401600060405180830381600087803b15801561062257600080fd5b505af1158015610636573d6000803e3d6000fd5b5050505061065881610653600080516020611a9e83398151915290565b6112e1565b5050505050565b6000808280602001905181019061067691906118e2565b6040516370a0823160e01b81523360048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa1580156106bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e191906118c9565b9392505050565b600060405160200161072b906020808252601c908201527f416176652056332061546f6b656e2041646170746f72205620312e3000000000604082015260600190565b60405160208183030381529060405280519060200120905090565b6040805160018082528183019092526060916020808301908036833701905050905061077182610c14565b81600081518110610784576107846118ff565b6001600160a01b039092166020928302919091019091015260006107b97354586be62e3c3580375ae3723c145253060ca0c290565b6001600160a01b031663e19f47006040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a91906118e2565b6001600160a01b03161415806108a957507354586be62e3c3580375ae3723c145253060ca0c26001600160a01b0316638c89b64f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561087d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a191906118c9565b6305f5e10014155b156108c757604051636978673560e11b815260040160405180910390fd5b919050565b6108d583611370565b6000828060200190518101906108eb91906118e2565b9050600080516020611a9e8339815191526001600160a01b03166369328dec826001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096c91906118e2565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018890523060448201526064016020604051808303816000875af11580156109bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e391906118c9565b50600080600080516020611a9e833981519152604051632fe4a15f60e21b81523060048201526001600160a01b03919091169063bf92857c9060240160c060405180830381865afa158015610a3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a60919061187f565b95505050509250506000821115610b7f57600080516020611a9e83398151915260405163eddf1b7960e01b81523360048201526001600160a01b03919091169063eddf1b7990602401602060405180830381865afa158015610ac6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aea91906118c9565b15610b0857604051635f5003c560e11b815260040160405180910390fd5b600084806020019051810190610b1e91906118c9565b905080600003610b4157604051635f5003c560e11b815260040160405180910390fd5b670e92596fd6290000811015610b5c5750670e92596fd62900005b80821015610b7d5760405163106c2d2f60e31b815260040160405180910390fd5b505b610bf68688856001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be691906118e2565b6001600160a01b03169190611407565b50505050505050565b6105166001600160a01b03831682600061125f565b60008082806020019051810190610c2b91906118e2565b9050806001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c6b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e191906118e2565b610c99828261147f565b9050610cbd6001600160a01b038316600080516020611a9e8339815191528361125f565b600080516020611a9e83398151915260405163617ba03760e01b81526001600160a01b0384811660048301526024820184905230604483015260006064830152919091169063617ba03790608401600060405180830381600087803b158015610d2557600080fd5b505af1158015610d39573d6000803e3d6000fd5b5050505061051682610653600080516020611a9e83398151915290565b60008083806020019051810190610d6d91906118e2565b90506000808080600080516020611a9e833981519152604051632fe4a15f60e21b81523360048201526001600160a01b03919091169063bf92857c9060240160c060405180830381865afa158015610dc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ded919061187f565b9550509450509350935082600003610e73576040516370a0823160e01b81523360048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015610e43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6791906118c9565b95505050505050611259565b600080516020611a9e83398151915260405163eddf1b7960e01b81523360048201526001600160a01b03919091169063eddf1b7990602401602060405180830381865afa158015610ec8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eec91906118c9565b15610eff57600095505050505050611259565b600087806020019051810190610f1591906118c9565b905080600003610f2e5760009650505050505050611259565b670e92596fd6290000811015610f495750670e92596fd62900005b6000662386f26fc10000610f5d818461192b565b9250610f69818461192b565b841015610f8157600098505050505050505050611259565b610f9d86610f9587655af3107a400061193e565b859190611500565b610fa7908861195d565b91506000886001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100d91906118e2565b90506000336001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa15801561104f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107391906118e2565b604051635c9fcd8560e11b8152600260048201526001600160a01b03919091169063b93f9b0a90602401602060405180830381865afa1580156110ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110de91906118e2565b604051630226614760e01b81526001600160a01b038481166004830152919250600091831690630226614790602401602060405180830381865afa15801561112a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114e91906118c9565b905060006111ca846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b79190611970565b6111c290600a611a71565b879084611500565b6040516370a0823160e01b81523360048201529091506000906001600160a01b038e16906370a0823190602401602060405180830381865afa158015611214573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123891906118c9565b90508082116112475781611249565b805b9d50505050505050505050505050505b92915050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806112db5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064015b60405180910390fd5b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa158015611331573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135591906118c9565b1115610516576105166001600160a01b03831682600061125f565b6001600160a01b03811630148015906113e65750306001600160a01b0316634c4602da6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e69190611a80565b15611404576040516307de9b5160e21b815260040160405180910390fd5b50565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806112db5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016112d2565b600060001982036114f9576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa1580156114ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f291906118c9565b9050611259565b5080611259565b82820281151584158583048514171661151857600080fd5b0492915050565b6001600160a01b038116811461140457600080fd5b801515811461140457600080fd5b6000806040838503121561155557600080fd5b82356115608161151f565b9150602083013561157081611534565b809150509250929050565b6000806040838503121561158e57600080fd5b82356115998161151f565b946020939093013593505050565b60ff8116811461140457600080fd5b6000602082840312156115c857600080fd5b81356106e1816115a7565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126115fa57600080fd5b813567ffffffffffffffff80821115611615576116156115d3565b604051601f8301601f19908116603f0116810190828211818310171561163d5761163d6115d3565b8160405283815286602085880101111561165657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561168b57600080fd5b83359250602084013567ffffffffffffffff808211156116aa57600080fd5b6116b6878388016115e9565b935060408601359150808211156116cc57600080fd5b506116d9868287016115e9565b9150509250925092565b6000602082840312156116f557600080fd5b813567ffffffffffffffff81111561170c57600080fd5b611718848285016115e9565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156117615783516001600160a01b03168352928401929184019160010161173c565b50909695505050505050565b6000806000806080858703121561178357600080fd5b8435935060208501356117958161151f565b9250604085013567ffffffffffffffff808211156117b257600080fd5b6117be888389016115e9565b935060608701359150808211156117d457600080fd5b506117e1878288016115e9565b91505092959194509250565b6000806040838503121561180057600080fd5b823561180b8161151f565b915060208301356115708161151f565b6000806040838503121561182e57600080fd5b823567ffffffffffffffff8082111561184657600080fd5b611852868387016115e9565b9350602085013591508082111561186857600080fd5b50611875858286016115e9565b9150509250929050565b60008060008060008060c0878903121561189857600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b6000602082840312156118db57600080fd5b5051919050565b6000602082840312156118f457600080fd5b81516106e18161151f565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561125957611259611915565b600081600019048311821515161561195857611958611915565b500290565b8181038181111561125957611259611915565b60006020828403121561198257600080fd5b81516106e1816115a7565b600181815b808511156119c85781600019048211156119ae576119ae611915565b808516156119bb57918102915b93841c9390800290611992565b509250929050565b6000826119df57506001611259565b816119ec57506000611259565b8160018114611a025760028114611a0c57611a28565b6001915050611259565b60ff841115611a1d57611a1d611915565b50506001821b611259565b5060208310610133831016604e8410600b8410161715611a4b575081810a611259565b611a55838361198d565b8060001904821115611a6957611a69611915565b029392505050565b60006106e160ff8416836119d0565b600060208284031215611a9257600080fd5b81516106e18161153456fe00000000000000000000000087870bca3f3fd6335c3f4ce8392d69350b4fa4e2a26469706673582212207db315bd3529e7609816947b0cbd5e70506b165a912bbd4d443294f218fd58bd64736f6c63430008100033",
    "sourceMap": "516:13202:76:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "516:13202:76:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12899:407;;;;;;:::i;:::-;;:::i;:::-;;2203:78:78;;;2269:5;833:42:98;;821:2;806:18;2203:78:78;;;;;;;;12400:406:76;;;;;;:::i;:::-;;:::i;13389:327::-;;;;;;:::i;:::-;;:::i;3697:490::-;;;;;;:::i;:::-;;:::i;10128:202::-;;;;;;:::i;:::-;;:::i;:::-;;;3533:25:98;;;3521:2;3506:18;10128:202:76;3387:177:98;2419:138:76;;;:::i;11262:83::-;;;11310:4;3891:41:98;;3879:2;3864:18;11262:83:76;3751:187:98;10638:540:76;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4753:1411::-;;;;;;:::i;:::-;;:::i;8378:107:78:-;;;;;;:::i;:::-;;:::i;10414:218:76:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5977:32:98;;;5959:51;;5947:2;5932:18;10414:218:76;5798::98;11744:422:76;;;;;;:::i;:::-;;:::i;7107:2931::-;;;;;;:::i;:::-;;:::i;12899:407::-;-1:-1:-1;;;;;;;;;;;12997:69:76;;-1:-1:-1;;;12997:69:76;;-1:-1:-1;;;;;6751:32:98;;;12997:69:76;;;6733:51:98;6827:14;;6820:22;6800:18;;;6793:50;12997:36:76;;;;;;;6706:18:98;;12997:69:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13149:20;13173:6;-1:-1:-1;;;;;;;;;;;2714:42:76;2641:123;13173:6;:40;;-1:-1:-1;;;13173:40:76;;13207:4;13173:40;;;5959:51:98;-1:-1:-1;;;;;13173:25:76;;;;;;;5932:18:98;;13173:40:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13138:75;;;;;;;13242:7;3210;;3144:80;13242:7;13227:12;:22;13223:76;;;13258:41;;-1:-1:-1;;;13258:41:76;;;;;;;;;;;13223:76;12987:319;12899:407;;:::o;12400:406::-;-1:-1:-1;;;;;;;;;;;12492:74:76;;-1:-1:-1;;;12492:74:76;;-1:-1:-1;;;;;7817:15:98;;;12492:74:76;;;7799:34:98;7849:18;;;7842:34;;;12560:4:76;7892:18:98;;;7885:43;12492:15:76;;;;;;;7734:18:98;;12492:74:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12649:20:76;-1:-1:-1;;;;;;;;;;;12673:6:76;2641:123;13389:327;-1:-1:-1;;;;;;;;;;;13445:31:76;;-1:-1:-1;;;13445:31:76;;8300:4:98;8288:17;;13445:31:76;;;8270:36:98;-1:-1:-1;;;;;13445:19:76;;;;;;;8243:18:98;;13445:31:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13559:20;13583:6;-1:-1:-1;;;;;;;;;;;2714:42:76;2641:123;13583:6;:40;;-1:-1:-1;;;13583:40:76;;13617:4;13583:40;;;5959:51:98;-1:-1:-1;;;;;13583:25:76;;;;;;;5932:18:98;;13583:40:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13548:75;;;;;;;13652:7;3210;;3144:80;13652:7;13637:12;:22;13633:76;;;13668:41;;-1:-1:-1;;;13668:41:76;;;;;;;;;;;13633:76;13435:281;13389:327;:::o;3697:490::-;3831:17;3873:11;3862:34;;;;;;;;;;;;:::i;:::-;3831:66;;3907:11;3927:6;-1:-1:-1;;;;;3927:31:76;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3907:54;-1:-1:-1;3971:42:76;-1:-1:-1;;;;;3971:17:76;;-1:-1:-1;;;;;;;;;;;4006:6:76;3971:17;:42::i;:::-;-1:-1:-1;;;;;;;;;;;4023:55:76;;-1:-1:-1;;;4023:55:76;;-1:-1:-1;;;;;9145:15:98;;;4023:55:76;;;9127:34:98;9177:18;;;9170:34;;;4069:4:76;9220:18:98;;;9213:43;4076:1:76;9272:18:98;;;9265:47;4023:13:76;;;;;;;9061:19:98;;4023:55:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4133:47;4157:5;4172:6;-1:-1:-1;;;;;;;;;;;2714:42:76;2641:123;4172:6;4133:23;:47::i;:::-;3786:401;;3697:490;;;:::o;10128:202::-;10203:7;10222:13;10249:11;10238:34;;;;;;;;;;;;:::i;:::-;10289;;-1:-1:-1;;;10289:34:76;;10312:10;10289:34;;;5959:51:98;10222:50:76;;-1:-1:-1;;;;;;10289:22:76;;;;;5932:18:98;;10289:34:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10282:41;10128:202;-1:-1:-1;;;10128:202:76:o;2419:138::-;2471:7;2507:42;;;;;;9525:2:98;9507:21;;;9564:2;9544:18;;;9537:30;9603;9598:2;9583:18;;9576:58;9666:2;9651:18;;9323:352;2507:42:76;;;;;;;;;;;;;2497:53;;;;;;2490:60;;2419:138;:::o;10638:540::-;10756:14;;;10768:1;10756:14;;;;;;;;;10714:21;;10756:14;;;;;;;;;;;-1:-1:-1;10756:14:76;10747:23;;10792:20;10800:11;10792:7;:20::i;:::-;10780:6;10787:1;10780:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10780:32:76;;;:9;;;;;;;;;;;:32;11058:1;11018:12;2928:42;;2841:137;11018:12;-1:-1:-1;;;;;11018:26:76;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11018:42:76;;;:86;;;-1:-1:-1;2928:42:76;-1:-1:-1;;;;;11064:31:76;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11101:3;11064:40;;11018:86;11014:157;;;11125:46;;-1:-1:-1;;;11125:46:76;;;;;;;;;;;11014:157;10638:540;;;:::o;4753:1411::-;4960:32;4983:8;4960:22;:32::i;:::-;5041:16;5082:11;5071:34;;;;;;;;;;;;:::i;:::-;5041:65;-1:-1:-1;;;;;;;;;;;;;;;;;5116:15:76;;5132:5;-1:-1:-1;;;;;5132:30:76;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5116:72;;-1:-1:-1;;;;;;5116:72:76;;;;;;;-1:-1:-1;;;;;7817:15:98;;;5116:72:76;;;7799:34:98;7849:18;;;7842:34;;;5182:4:76;7892:18:98;;;7885:43;7734:18;;5116:72:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5202:21:76;;-1:-1:-1;;;;;;;;;;;5255:40:76;;-1:-1:-1;;;5255:40:76;;5289:4;5255:40;;;5959:51:98;-1:-1:-1;;;;;5255:25:76;;;;;;;5932:18:98;;5255:40:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5199:96;;;;;;;;5325:1;5309:13;:17;5305:732;;;-1:-1:-1;;;;;;;;;;;5439:31:76;;-1:-1:-1;;;5439:31:76;;5459:10;5439:31;;;5959:51:98;-1:-1:-1;;;;;5439:19:76;;;;;;;5932:18:98;;5439:31:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;5435:87;;5484:38;;-1:-1:-1;;;5484:38:76;;;;;;;;;;;5435:87;5586:23;5623:10;5612:33;;;;;;;;;;;;:::i;:::-;5586:59;;5663:15;5682:1;5663:20;5659:104;;5710:38;;-1:-1:-1;;;5710:38:76;;;;;;;;;;;5659:104;3210:7;5876:15;:25;5872:56;;;-1:-1:-1;3210:7:76;5872:56;5961:15;5946:12;:30;5942:84;;;5985:41;;-1:-1:-1;;;5985:41:76;;;;;;;;;;;5942:84;5328:709;5305:732;6087:70;6140:8;6150:6;6093:5;-1:-1:-1;;;;;6093:30:76;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6087:52:76;;:70;:52;:70::i;:::-;4910:1254;;;4753:1411;;;;:::o;8378:107:78:-;8449:29;-1:-1:-1;;;;;8449:17:78;;8467:7;8476:1;8449:17;:29::i;10414:218:76:-;10487:5;10504:16;10545:11;10534:34;;;;;;;;;;;;:::i;:::-;10504:65;;10592:5;-1:-1:-1;;;;;10592:30:76;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11744:422::-;11849:46;11863:14;11879:15;11849:13;:46::i;:::-;11831:64;-1:-1:-1;11905:60:76;-1:-1:-1;;;;;11905:26:76;;-1:-1:-1;;;;;;;;;;;11831:64:76;11905:26;:60::i;:::-;-1:-1:-1;;;;;;;;;;;11975:73:76;;-1:-1:-1;;;11975:73:76;;-1:-1:-1;;;;;9145:15:98;;;11975:73:76;;;9127:34:98;9177:18;;;9170:34;;;12039:4:76;9220:18:98;;;9213:43;12046:1:76;9272:18:98;;;9265:47;11975:13:76;;;;;;;9061:19:98;;11975:73:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12103:56;12127:14;12151:6;-1:-1:-1;;;;;;;;;;;2714:42:76;2641:123;7107:2931;7236:7;7255:16;7296:11;7285:34;;;;;;;;;;;;:::i;:::-;7255:65;-1:-1:-1;7345:27:76;;;;-1:-1:-1;;;;;;;;;;;7531:37:76;;-1:-1:-1;;;7531:37:76;;7557:10;7531:37;;;5959:51:98;-1:-1:-1;;;;;7531:25:76;;;;;;;5932:18:98;;7531:37:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7331:237;;;;;;;;;;7669:13;7686:1;7669:18;7665:74;;7696:43;;-1:-1:-1;;;7696:43:76;;7728:10;7696:43;;;5959:51:98;-1:-1:-1;;;;;7696:31:76;;;;;5932:18:98;;7696:43:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7689:50;;;;;;;;;7665:74;-1:-1:-1;;;;;;;;;;;7844:31:76;;-1:-1:-1;;;7844:31:76;;7864:10;7844:31;;;5959:51:98;-1:-1:-1;;;;;7844:19:76;;;;;;;5932:18:98;;7844:31:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;7840:50;;7889:1;7882:8;;;;;;;;;7840:50;7964:23;8001:10;7990:33;;;;;;;;;;;;:::i;:::-;7964:59;;8172:15;8191:1;8172:20;8168:34;;8201:1;8194:8;;;;;;;;;;8168:34;3210:7;8308:15;:25;8304:56;;;-1:-1:-1;3210:7:76;8304:56;8371:28;8519:7;8582:26;8519:7;8582:26;;:::i;:::-;;-1:-1:-1;8732:25:76;8750:7;8582:26;8732:25;:::i;:::-;8716:12;:42;8712:337;;;8767:1;8760:8;;;;;;;;;;;;8712:337;8959:79;8986:13;9002:34;:27;9032:4;9002:34;:::i;:::-;8959:15;;:79;:26;:79::i;:::-;8921:117;;:19;:117;:::i;:::-;8882:156;;9329:16;9354:5;-1:-1:-1;;;;;9354:30:76;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9329:58;;9480:23;9525:10;-1:-1:-1;;;;;9518:27:76;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;;-1:-1:-1;;;9518:70:76;;2104:1:78;9518:70:76;;;3533:25:98;-1:-1:-1;;;;;9518:40:76;;;;;;;3506:18:98;;9518:70:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9625:37;;-1:-1:-1;;;9625:37:76;;-1:-1:-1;;;;;5977:32:98;;;9625:37:76;;;5959:51:98;9480:109:76;;-1:-1:-1;9599:23:76;;9625:25;;;;;5932:18:98;;9625:37:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9599:63;;9672:20;9695:77;9733:10;-1:-1:-1;;;;;9733:19:76;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9727:27;;:2;:27;:::i;:::-;9695:20;;9756:15;9695:31;:77::i;:::-;9800:43;;-1:-1:-1;;;9800:43:76;;9832:10;9800:43;;;5959:51:98;9672:100:76;;-1:-1:-1;9782:15:76;;-1:-1:-1;;;;;9800:31:76;;;;;5932:18:98;;9800:43:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9782:61;;9999:7;9984:12;:22;:47;;10019:12;9984:47;;;10009:7;9984:47;9977:54;;;;;;;;;;;;;;;7107:2931;;;;;:::o;4327:1454:48:-;4438:12;4565:4;4559:11;-1:-1:-1;;;4688:17:48;4681:93;4821:2;4817:1;4798:17;4794:25;4787:37;4901:6;4896:2;4877:17;4873:26;4866:42;5703:2;5700:1;5696:2;5677:17;5674:1;5667:5;5660;5655:51;5224:16;5217:24;5211:2;5193:16;5190:24;5186:1;5182;5176:8;5173:15;5169:46;5166:76;4966:754;4955:765;;;5748:7;5740:34;;;;-1:-1:-1;;;5740:34:48;;12498:2:98;5740:34:48;;;12480:21:98;12537:2;12517:18;;;12510:30;-1:-1:-1;;;12556:18:98;;;12549:44;12610:18;;5740:34:48;;;;;;;;;4428:1353;4327:1454;;;:::o;7665:167:78:-;7751:39;;-1:-1:-1;;;7751:39:78;;7775:4;7751:39;;;12851:34:98;-1:-1:-1;;;;;12921:15:98;;;12901:18;;;12894:43;7793:1:78;;7751:15;;;;;;12786:18:98;;7751:39:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;7747:78;;;7796:29;-1:-1:-1;;;;;7796:17:78;;7814:7;7823:1;7796:17;:29::i;7932:218::-;-1:-1:-1;;;;;8010:25:78;;8030:4;8010:25;;;;:74;;;8054:4;-1:-1:-1;;;;;8039:43:78;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8006:137;;;8105:38;;-1:-1:-1;;;8105:38:78;;;;;;;;;;;8006:137;7932:218;:::o;2865:1456:48:-;2977:12;3104:4;3098:11;-1:-1:-1;;;3227:17:48;3220:93;3360:2;3356:1;3337:17;3333:25;3326:37;3440:6;3435:2;3416:17;3412:26;3405:42;4242:2;4239:1;4235:2;4216:17;4213:1;4206:5;4199;4194:51;3763:16;3756:24;3750:2;3732:16;3729:24;3725:1;3721;3715:8;3712:15;3708:46;3705:76;3505:754;3494:765;;;4287:7;4279:35;;;;-1:-1:-1;;;4279:35:48;;13400:2:98;4279:35:48;;;13382:21:98;13439:2;13419:18;;;13412:30;-1:-1:-1;;;13458:18:98;;;13451:45;13513:18;;4279:35:48;13198:339:98;7323:207:78;7406:7;-1:-1:-1;;7429:6:78;:27;7425:98;;7465:30;;-1:-1:-1;;;7465:30:78;;7489:4;7465:30;;;5959:51:98;-1:-1:-1;;;;;7465:15:78;;;;;5932:18:98;;7465:30:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7458:37;;;;7425:98;-1:-1:-1;7517:6:78;7510:13;;1357:535:96;1563:9;;;1694:19;;1687:27;1719:9;;1733;;;1730:16;;1716:31;1683:65;1673:121;;1778:1;1775;1768:12;1673:121;1857:19;;1357:535;-1:-1:-1;;1357:535:96:o;14:138:98:-;-1:-1:-1;;;;;96:31:98;;86:42;;76:70;;142:1;139;132:12;157:118;243:5;236:13;229:21;222:5;219:32;209:60;;265:1;262;255:12;280:404;360:6;368;421:2;409:9;400:7;396:23;392:32;389:52;;;437:1;434;427:12;389:52;476:9;463:23;495:38;527:5;495:38;:::i;:::-;552:5;-1:-1:-1;609:2:98;594:18;;581:32;622:30;581:32;622:30;:::i;:::-;671:7;661:17;;;280:404;;;;;:::o;886:337::-;969:6;977;1030:2;1018:9;1009:7;1005:23;1001:32;998:52;;;1046:1;1043;1036:12;998:52;1085:9;1072:23;1104:38;1136:5;1104:38;:::i;:::-;1161:5;1213:2;1198:18;;;;1185:32;;-1:-1:-1;;;886:337:98:o;1228:114::-;1312:4;1305:5;1301:16;1294:5;1291:27;1281:55;;1332:1;1329;1322:12;1347:243;1404:6;1457:2;1445:9;1436:7;1432:23;1428:32;1425:52;;;1473:1;1470;1463:12;1425:52;1512:9;1499:23;1531:29;1554:5;1531:29;:::i;1595:127::-;1656:10;1651:3;1647:20;1644:1;1637:31;1687:4;1684:1;1677:15;1711:4;1708:1;1701:15;1727:718;1769:5;1822:3;1815:4;1807:6;1803:17;1799:27;1789:55;;1840:1;1837;1830:12;1789:55;1876:6;1863:20;1902:18;1939:2;1935;1932:10;1929:36;;;1945:18;;:::i;:::-;2020:2;2014:9;1988:2;2074:13;;-1:-1:-1;;2070:22:98;;;2094:2;2066:31;2062:40;2050:53;;;2118:18;;;2138:22;;;2115:46;2112:72;;;2164:18;;:::i;:::-;2204:10;2200:2;2193:22;2239:2;2231:6;2224:18;2285:3;2278:4;2273:2;2265:6;2261:15;2257:26;2254:35;2251:55;;;2302:1;2299;2292:12;2251:55;2366:2;2359:4;2351:6;2347:17;2340:4;2332:6;2328:17;2315:54;2413:1;2406:4;2401:2;2393:6;2389:15;2385:26;2378:37;2433:6;2424:15;;;;;;1727:718;;;;:::o;2450:607::-;2545:6;2553;2561;2614:2;2602:9;2593:7;2589:23;2585:32;2582:52;;;2630:1;2627;2620:12;2582:52;2666:9;2653:23;2643:33;;2727:2;2716:9;2712:18;2699:32;2750:18;2791:2;2783:6;2780:14;2777:34;;;2807:1;2804;2797:12;2777:34;2830:49;2871:7;2862:6;2851:9;2847:22;2830:49;:::i;:::-;2820:59;;2932:2;2921:9;2917:18;2904:32;2888:48;;2961:2;2951:8;2948:16;2945:36;;;2977:1;2974;2967:12;2945:36;;3000:51;3043:7;3032:8;3021:9;3017:24;3000:51;:::i;:::-;2990:61;;;2450:607;;;;;:::o;3062:320::-;3130:6;3183:2;3171:9;3162:7;3158:23;3154:32;3151:52;;;3199:1;3196;3189:12;3151:52;3239:9;3226:23;3272:18;3264:6;3261:30;3258:50;;;3304:1;3301;3294:12;3258:50;3327:49;3368:7;3359:6;3348:9;3344:22;3327:49;:::i;:::-;3317:59;3062:320;-1:-1:-1;;;;3062:320:98:o;3943:673::-;4129:2;4181:21;;;4251:13;;4154:18;;;4273:22;;;4100:4;;4129:2;4352:15;;;;4326:2;4311:18;;;4100:4;4395:195;4409:6;4406:1;4403:13;4395:195;;;4474:13;;-1:-1:-1;;;;;4470:39:98;4458:52;;4565:15;;;;4530:12;;;;4506:1;4424:9;4395:195;;;-1:-1:-1;4607:3:98;;3943:673;-1:-1:-1;;;;;;3943:673:98:o;4621:750::-;4725:6;4733;4741;4749;4802:3;4790:9;4781:7;4777:23;4773:33;4770:53;;;4819:1;4816;4809:12;4770:53;4855:9;4842:23;4832:33;;4915:2;4904:9;4900:18;4887:32;4928:38;4960:5;4928:38;:::i;:::-;4985:5;-1:-1:-1;5041:2:98;5026:18;;5013:32;5064:18;5094:14;;;5091:34;;;5121:1;5118;5111:12;5091:34;5144:49;5185:7;5176:6;5165:9;5161:22;5144:49;:::i;:::-;5134:59;;5246:2;5235:9;5231:18;5218:32;5202:48;;5275:2;5265:8;5262:16;5259:36;;;5291:1;5288;5281:12;5259:36;;5314:51;5357:7;5346:8;5335:9;5331:24;5314:51;:::i;:::-;5304:61;;;4621:750;;;;;;;:::o;5376:417::-;5459:6;5467;5520:2;5508:9;5499:7;5495:23;5491:32;5488:52;;;5536:1;5533;5526:12;5488:52;5575:9;5562:23;5594:38;5626:5;5594:38;:::i;:::-;5651:5;-1:-1:-1;5708:2:98;5693:18;;5680:32;5721:40;5680:32;5721:40;:::i;6021:539::-;6107:6;6115;6168:2;6156:9;6147:7;6143:23;6139:32;6136:52;;;6184:1;6181;6174:12;6136:52;6224:9;6211:23;6253:18;6294:2;6286:6;6283:14;6280:34;;;6310:1;6307;6300:12;6280:34;6333:49;6374:7;6365:6;6354:9;6350:22;6333:49;:::i;:::-;6323:59;;6435:2;6424:9;6420:18;6407:32;6391:48;;6464:2;6454:8;6451:16;6448:36;;;6480:1;6477;6470:12;6448:36;;6503:51;6546:7;6535:8;6524:9;6520:24;6503:51;:::i;:::-;6493:61;;;6021:539;;;;;:::o;7062:492::-;7177:6;7185;7193;7201;7209;7217;7270:3;7258:9;7249:7;7245:23;7241:33;7238:53;;;7287:1;7284;7277:12;7238:53;7316:9;7310:16;7300:26;;7366:2;7355:9;7351:18;7345:25;7335:35;;7410:2;7399:9;7395:18;7389:25;7379:35;;7454:2;7443:9;7439:18;7433:25;7423:35;;7498:3;7487:9;7483:19;7477:26;7467:36;;7543:3;7532:9;7528:19;7522:26;7512:36;;7062:492;;;;;;;;:::o;7939:184::-;8009:6;8062:2;8050:9;8041:7;8037:23;8033:32;8030:52;;;8078:1;8075;8068:12;8030:52;-1:-1:-1;8101:16:98;;7939:184;-1:-1:-1;7939:184:98:o;8317:266::-;8395:6;8448:2;8436:9;8427:7;8423:23;8419:32;8416:52;;;8464:1;8461;8454:12;8416:52;8496:9;8490:16;8515:38;8547:5;8515:38;:::i;9680:127::-;9741:10;9736:3;9732:20;9729:1;9722:31;9772:4;9769:1;9762:15;9796:4;9793:1;9786:15;9812:127;9873:10;9868:3;9864:20;9861:1;9854:31;9904:4;9901:1;9894:15;9928:4;9925:1;9918:15;9944:125;10009:9;;;10030:10;;;10027:36;;;10043:18;;:::i;10074:168::-;10114:7;10180:1;10176;10172:6;10168:14;10165:1;10162:21;10157:1;10150:9;10143:17;10139:45;10136:71;;;10187:18;;:::i;:::-;-1:-1:-1;10227:9:98;;10074:168::o;10247:128::-;10314:9;;;10335:11;;;10332:37;;;10349:18;;:::i;10661:247::-;10729:6;10782:2;10770:9;10761:7;10757:23;10753:32;10750:52;;;10798:1;10795;10788:12;10750:52;10830:9;10824:16;10849:29;10872:5;10849:29;:::i;10913:422::-;11002:1;11045:5;11002:1;11059:270;11080:7;11070:8;11067:21;11059:270;;;11139:4;11135:1;11131:6;11127:17;11121:4;11118:27;11115:53;;;11148:18;;:::i;:::-;11198:7;11188:8;11184:22;11181:55;;;11218:16;;;;11181:55;11297:22;;;;11257:15;;;;11059:270;;;11063:3;10913:422;;;;;:::o;11340:806::-;11389:5;11419:8;11409:80;;-1:-1:-1;11460:1:98;11474:5;;11409:80;11508:4;11498:76;;-1:-1:-1;11545:1:98;11559:5;;11498:76;11590:4;11608:1;11603:59;;;;11676:1;11671:130;;;;11583:218;;11603:59;11633:1;11624:10;;11647:5;;;11671:130;11708:3;11698:8;11695:17;11692:43;;;11715:18;;:::i;:::-;-1:-1:-1;;11771:1:98;11757:16;;11786:5;;11583:218;;11885:2;11875:8;11872:16;11866:3;11860:4;11857:13;11853:36;11847:2;11837:8;11834:16;11829:2;11823:4;11820:12;11816:35;11813:77;11810:159;;;-1:-1:-1;11922:19:98;;;11954:5;;11810:159;12001:34;12026:8;12020:4;12001:34;:::i;:::-;12071:6;12067:1;12063:6;12059:19;12050:7;12047:32;12044:58;;;12082:18;;:::i;:::-;12120:20;;11340:806;-1:-1:-1;;;11340:806:98:o;12151:140::-;12209:5;12238:47;12279:4;12269:8;12265:19;12259:4;12238:47;:::i;12948:245::-;13015:6;13068:2;13056:9;13047:7;13043:23;13039:32;13036:52;;;13084:1;13081;13074:12;13036:52;13116:9;13110:16;13135:28;13157:5;13135:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "adjustIsolationModeAssetAsCollateral(address,bool)": "23bf298f",
    "assetOf(bytes)": "e170a9bf",
    "assetsUsed(bytes)": "aeffddde",
    "balanceOf(bytes)": "78415365",
    "changeEMode(uint8)": "4ac839f7",
    "deposit(uint256,bytes,bytes)": "69445c31",
    "depositToAave(address,uint256)": "eeb149e7",
    "identifier()": "7998a1c4",
    "isDebt()": "89353a09",
    "revokeApproval(address,address)": "d3bfe76a",
    "slippage()": "3e032a3b",
    "withdraw(uint256,address,bytes,bytes)": "c9111bd7",
    "withdrawFromAave(address,uint256)": "487ede04",
    "withdrawableFrom(bytes,bytes)": "fa50e5d2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AaveV3ATokenAdaptor__HealthFactorTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AaveV3ATokenAdaptor__OracleUsesDifferentBase\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__ExternalReceiverBlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"BaseAdaptor__PricingNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__Slippage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserDepositsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserWithdrawsNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"adjustIsolationModeAssetAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetOf\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetsUsed\",\"outputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"changeEMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"tokenToDeposit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToDeposit\",\"type\":\"uint256\"}],\"name\":\"depositToAave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDebt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"revokeApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippage\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"configData\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"tokenToWithdraw\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdrawFromAave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"configData\",\"type\":\"bytes\"}],\"name\":\"withdrawableFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"crispymangoes\",\"kind\":\"dev\",\"methods\":{\"deposit(uint256,bytes,bytes)\":{\"details\":\"configurationData is NOT used because this action will only increase the health factor\",\"params\":{\"adaptorData\":\"adaptor data containining the abi encoded aToken\",\"assets\":\"the amount of assets to lend on Aave\"}},\"depositToAave(address,uint256)\":{\"details\":\"Uses `_maxAvailable` helper function, see BaseAdaptor.sol\",\"params\":{\"amountToDeposit\":\"the amount of `tokenToDeposit` to lend on Aave.\",\"tokenToDeposit\":\"the token to lend on Aave\"}},\"identifier()\":{\"details\":\"Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult.\"},\"revokeApproval(address,address)\":{\"params\":{\"asset\":\"the ERC20 asset to revoke `spender`s approval for\",\"spender\":\"the address to revoke approval for\"}},\"withdraw(uint256,address,bytes,bytes)\":{\"details\":\"Important to verify that external receivers are allowed if receiver is not Cellar address.\",\"params\":{\"adaptorData\":\"adaptor data containining the abi encoded aToken\",\"assets\":\"the amount of assets to withdraw from Aave\",\"configData\":\"abi encoded minimum health factor, if zero user withdraws are not allowed.\",\"receiver\":\"the address to send withdrawn assets to\"}},\"withdrawFromAave(address,uint256)\":{\"params\":{\"amountToWithdraw\":\"the amount of `tokenToWithdraw` to withdraw from Aave\",\"tokenToWithdraw\":\"the token to withdraw from Aave.\"}},\"withdrawableFrom(bytes,bytes)\":{\"details\":\"Applies a `cushion` value to the health factor checks and calculation.      The goal of this is to minimize scenarios where users are withdrawing a very small amount of      assets from Aave. This function returns zero if      -minimum health factor is NOT set.      -the current health factor is less than the minimum health factor + 2x `cushion`      Otherwise this function calculates the withdrawable amount using      minimum health factor + `cushion` for its calcualtions.It is possible for the math below to lose a small amount of precision since it is only      maintaining 18 decimals during the calculation, but this is desired since      doing so lowers the withdrawable from amount which in turn raises the health factor.\"}},\"title\":\"Aave aToken Adaptor\",\"version\":1},\"userdoc\":{\"errors\":{\"AaveV3ATokenAdaptor__HealthFactorTooLow()\":[{\"notice\":\"Attempted withdraw would lower Cellar health factor too low.\"}],\"AaveV3ATokenAdaptor__OracleUsesDifferentBase()\":[{\"notice\":\"Aave V3 oracle uses a different base asset than this contract was designed for.\"}],\"BaseAdaptor__ExternalReceiverBlocked()\":[{\"notice\":\"Attempted to specify an external receiver during a Cellar `callOnAdaptor` call.\"}],\"BaseAdaptor__PricingNotSupported(address)\":[{\"notice\":\"Attempted swap used unsupported output asset.\"}],\"BaseAdaptor__Slippage()\":[{\"notice\":\"Attempted swap has bad slippage.\"}],\"BaseAdaptor__UserDepositsNotAllowed()\":[{\"notice\":\"Attempted to deposit to a position where user deposits were not allowed.\"}],\"BaseAdaptor__UserWithdrawsNotAllowed()\":[{\"notice\":\"Attempted to withdraw from a position where user withdraws were not allowed.\"}]},\"kind\":\"user\",\"methods\":{\"adjustIsolationModeAssetAsCollateral(address,bool)\":{\"notice\":\"Allows strategists to adjust an asset's isolation mode.\"},\"assetOf(bytes)\":{\"notice\":\"Returns the positions aToken underlying asset.\"},\"assetsUsed(bytes)\":{\"notice\":\"When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup.\"},\"balanceOf(bytes)\":{\"notice\":\"Returns the cellars balance of the positions aToken.\"},\"changeEMode(uint8)\":{\"notice\":\"Allows strategists to enter different EModes.\"},\"deposit(uint256,bytes,bytes)\":{\"notice\":\"Cellar must approve Pool to spend its assets, then call deposit to lend its assets.\"},\"depositToAave(address,uint256)\":{\"notice\":\"Allows strategists to lend assets on Aave.\"},\"isDebt()\":{\"notice\":\"This adaptor returns collateral, and not debt.\"},\"revokeApproval(address,address)\":{\"notice\":\"Allows strategists to zero out an approval for a given `asset`.\"},\"slippage()\":{\"notice\":\"Max possible slippage when making a swap router swap.\"},\"withdraw(uint256,address,bytes,bytes)\":{\"notice\":\"Cellars must withdraw from Aave, check if a minimum health factor is specified       then transfer assets to receiver.\"},\"withdrawFromAave(address,uint256)\":{\"notice\":\"Allows strategists to withdraw assets from Aave.\"},\"withdrawableFrom(bytes,bytes)\":{\"notice\":\"Uses configurartion data minimum health factor to calculate withdrawable assets from Aave.\"}},\"notice\":\"Allows Cellars to interact with Aave aToken positions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/adaptors/Aave/V3/AaveV3ATokenAdaptor.sol\":\"AaveV3ATokenAdaptor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":@uniswapV3C/=lib/v3-core.git/contracts/\",\":@uniswapV3P/=lib/v3-periphery.git/contracts/\",\":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":v3-core.git/=lib/v3-core.git/contracts/\",\":v3-periphery.git/=lib/v3-periphery.git/contracts/\"]},\"sources\":{\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"src/Registry.sol\":{\"keccak256\":\"0x72690631323f459be3da7dd7c4644a7678a509ff6fd9a76fc6f77124ba96bcb3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://237231d6746fbf8d95ec0fc07ee1ddc0978ae77ef12fe00f445e9f22232d1108\",\"dweb:/ipfs/QmbSKScTxX8nxNnjogci32r3fRexDfFG4sH4myE85AewQp\"]},\"src/base/Cellar.sol\":{\"keccak256\":\"0x851d6f03d13fcd1e4e55d40ab04908677ef1ec92dbcaf3c02ee492602c368d67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0eff90da37039eb4fb743024373d46ce6ccc198b5cb5c61c628f7a160d94fd0b\",\"dweb:/ipfs/QmUoLuGxVU5UqKNUB75BxMvYnpTxxcq8ZiUskrTTx8WbJA\"]},\"src/base/ERC20.sol\":{\"keccak256\":\"0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4\",\"dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf\"]},\"src/base/ERC4626.sol\":{\"keccak256\":\"0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469\",\"dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE\"]},\"src/base/Multicall.sol\":{\"keccak256\":\"0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c\",\"dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K\"]},\"src/base/SafeTransferLib.sol\":{\"keccak256\":\"0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a\",\"dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3\"]},\"src/interfaces/IMulticall.sol\":{\"keccak256\":\"0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0\",\"dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5\"]},\"src/interfaces/external/DataTypes.sol\":{\"keccak256\":\"0xb9862fe603ae5bd1468248ee9a24670a58be807b561bc5302e9fdab38414b92d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5a8d012c8875407b61a657e38b08fc56d80c347802d3676a9dfb1e8fa28e69e2\",\"dweb:/ipfs/QmVRSCrCYw9h5FVscBqKy9WAy1UesDmLtXdUbykLus4Kmq\"]},\"src/interfaces/external/IAaveOracle.sol\":{\"keccak256\":\"0x3904eedbb0f7cf723319b7548dae92f40e44ae33143b2996c90db19c8b073c3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3596e25ed83b38c4fd038fa39fa3c9bcf6e8d81b557f7632fa81e55ccb3a7ce\",\"dweb:/ipfs/QmRzzJPgdssAYH7DrdnqqGwFM1fFAQoy2L9RyDfw6jyCTA\"]},\"src/interfaces/external/IAaveToken.sol\":{\"keccak256\":\"0x77cd64637e4c0fd379b2d4d826bcd9f64fc706a291ce77d023f693d1eb8e45d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e87630603401ff3374cb610b765e46a3a235ef294fab212cf3116a35db7c4d58\",\"dweb:/ipfs/Qma8awSuYptmpBsWUMz9NZBogVRtVQwXF5cvfsVWpNKhc3\"]},\"src/interfaces/external/IChainlinkAggregator.sol\":{\"keccak256\":\"0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2\",\"dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs\"]},\"src/interfaces/external/ICurvePool.sol\":{\"keccak256\":\"0x9ae71865252aeca89fd6c74013eded1d8029eccc46e3604291be16e97b89a5da\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f504248ab846844bcd771226f7b2984455ddcc746357924fce50a41b65eec9e2\",\"dweb:/ipfs/QmQVe1VZUgxUab9ocsbrX42Ust3hs83BU3bpA1j6Cx1xo6\"]},\"src/interfaces/external/IGravity.sol\":{\"keccak256\":\"0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51\",\"dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c\"]},\"src/interfaces/external/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x99b710acbe9eca030c28301f731bd42912b1c5b20ba01281bd740b9f52e4d13d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e7f2305e9570b50eada9211baa61906381f6edd8a4a92954d5739e6048ea0a7a\",\"dweb:/ipfs/QmPmgrLRS7VuuLuEsX4wWgf9cipvDgL6DV3bK3PPU4zU2H\"]},\"src/interfaces/external/IPoolV3.sol\":{\"keccak256\":\"0xbe299d80d955a1a18e31da898906587d8c9977caaa9eb0c2e130fb1475d18554\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1944f519394894a307274c87a04984eaba57edf5c1d8759b0257689a17ef7a48\",\"dweb:/ipfs/QmUM3XNhenkQwru9uYgmuVeAu4YWwH572dvtyPZJ8tVgqZ\"]},\"src/interfaces/external/IUniswapV2Router02.sol\":{\"keccak256\":\"0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a\",\"dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo\"]},\"src/interfaces/external/IUniswapV3Router.sol\":{\"keccak256\":\"0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd\",\"dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK\"]},\"src/modules/adaptors/Aave/V3/AaveV3ATokenAdaptor.sol\":{\"keccak256\":\"0xc88651670c70c491c2ae55cae87d1f0779530e74b5f353421e8f52b77e4c3ed6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://efb5717029d897fc9ab1079a046328ef5df07972c1703083457da99c93d07f0f\",\"dweb:/ipfs/QmWky6WmgG4iLq8f2MZkLiXZtciTd1oXLQfNfDC6yEiob1\"]},\"src/modules/adaptors/BaseAdaptor.sol\":{\"keccak256\":\"0xb45700da63110e41cbb1879c3d261763644bc851effa798721cf7eca3e039f9a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7810084abb53310d5d50f5ca55557e9dcdc8fef6c987e55d82a7748aad467e27\",\"dweb:/ipfs/QmaieqMfgwWJvFy8q3jVrx8Fifo6M9UZM8cBjpmyNFPc5j\"]},\"src/modules/price-router/PriceRouter.sol\":{\"keccak256\":\"0x3d0fb1c107cfbd5b72660b548a9749dfd0d07d9a0b5abdf554d593ee00569550\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f90a60a3097007a1dcd2871db79b0df74cf2a18de5126fc2bd2896f2715e93af\",\"dweb:/ipfs/QmTDqnNN9Rv29MYHCAzZsKzsDbTBMYYQi17VEwhmbE6KYC\"]},\"src/modules/swap-router/SwapRouter.sol\":{\"keccak256\":\"0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818\",\"dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312\",\"dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r\"]},\"src/utils/Uint32Array.sol\":{\"keccak256\":\"0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944\",\"dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AaveV3ATokenAdaptor__HealthFactorTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AaveV3ATokenAdaptor__OracleUsesDifferentBase"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__ExternalReceiverBlocked"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BaseAdaptor__PricingNotSupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__Slippage"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserDepositsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserWithdrawsNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "useAsCollateral",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "adjustIsolationModeAssetAsCollateral"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetOf",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetsUsed",
          "outputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "assets",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "categoryId",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeEMode"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "tokenToDeposit",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToDeposit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositToAave"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "identifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isDebt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeApproval"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "slippage",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "configData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "tokenToWithdraw",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToWithdraw",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromAave"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "configData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableFrom",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(uint256,bytes,bytes)": {
            "details": "configurationData is NOT used because this action will only increase the health factor",
            "params": {
              "adaptorData": "adaptor data containining the abi encoded aToken",
              "assets": "the amount of assets to lend on Aave"
            }
          },
          "depositToAave(address,uint256)": {
            "details": "Uses `_maxAvailable` helper function, see BaseAdaptor.sol",
            "params": {
              "amountToDeposit": "the amount of `tokenToDeposit` to lend on Aave.",
              "tokenToDeposit": "the token to lend on Aave"
            }
          },
          "identifier()": {
            "details": "Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult."
          },
          "revokeApproval(address,address)": {
            "params": {
              "asset": "the ERC20 asset to revoke `spender`s approval for",
              "spender": "the address to revoke approval for"
            }
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "details": "Important to verify that external receivers are allowed if receiver is not Cellar address.",
            "params": {
              "adaptorData": "adaptor data containining the abi encoded aToken",
              "assets": "the amount of assets to withdraw from Aave",
              "configData": "abi encoded minimum health factor, if zero user withdraws are not allowed.",
              "receiver": "the address to send withdrawn assets to"
            }
          },
          "withdrawFromAave(address,uint256)": {
            "params": {
              "amountToWithdraw": "the amount of `tokenToWithdraw` to withdraw from Aave",
              "tokenToWithdraw": "the token to withdraw from Aave."
            }
          },
          "withdrawableFrom(bytes,bytes)": {
            "details": "Applies a `cushion` value to the health factor checks and calculation.      The goal of this is to minimize scenarios where users are withdrawing a very small amount of      assets from Aave. This function returns zero if      -minimum health factor is NOT set.      -the current health factor is less than the minimum health factor + 2x `cushion`      Otherwise this function calculates the withdrawable amount using      minimum health factor + `cushion` for its calcualtions.It is possible for the math below to lose a small amount of precision since it is only      maintaining 18 decimals during the calculation, but this is desired since      doing so lowers the withdrawable from amount which in turn raises the health factor."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "adjustIsolationModeAssetAsCollateral(address,bool)": {
            "notice": "Allows strategists to adjust an asset's isolation mode."
          },
          "assetOf(bytes)": {
            "notice": "Returns the positions aToken underlying asset."
          },
          "assetsUsed(bytes)": {
            "notice": "When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup."
          },
          "balanceOf(bytes)": {
            "notice": "Returns the cellars balance of the positions aToken."
          },
          "changeEMode(uint8)": {
            "notice": "Allows strategists to enter different EModes."
          },
          "deposit(uint256,bytes,bytes)": {
            "notice": "Cellar must approve Pool to spend its assets, then call deposit to lend its assets."
          },
          "depositToAave(address,uint256)": {
            "notice": "Allows strategists to lend assets on Aave."
          },
          "isDebt()": {
            "notice": "This adaptor returns collateral, and not debt."
          },
          "revokeApproval(address,address)": {
            "notice": "Allows strategists to zero out an approval for a given `asset`."
          },
          "slippage()": {
            "notice": "Max possible slippage when making a swap router swap."
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "notice": "Cellars must withdraw from Aave, check if a minimum health factor is specified       then transfer assets to receiver."
          },
          "withdrawFromAave(address,uint256)": {
            "notice": "Allows strategists to withdraw assets from Aave."
          },
          "withdrawableFrom(bytes,bytes)": {
            "notice": "Uses configurartion data minimum health factor to calculate withdrawable assets from Aave."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=lib/chainlink/",
        ":@ds-test/=lib/forge-std/lib/ds-test/src/",
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":@uniswapV3C/=lib/v3-core.git/contracts/",
        ":@uniswapV3P/=lib/v3-periphery.git/contracts/",
        ":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-core.git/=lib/v3-core.git/contracts/",
        ":v3-periphery.git/=lib/v3-periphery.git/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/adaptors/Aave/V3/AaveV3ATokenAdaptor.sol": "AaveV3ATokenAdaptor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "keccak256": "0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7",
        "urls": [
          "bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465",
          "dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2",
        "urls": [
          "bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b",
          "dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol": {
        "keccak256": "0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340",
        "urls": [
          "bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e",
          "dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028",
        "urls": [
          "bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf",
          "dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb",
        "urls": [
          "bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929",
          "dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Registry.sol": {
        "keccak256": "0x72690631323f459be3da7dd7c4644a7678a509ff6fd9a76fc6f77124ba96bcb3",
        "urls": [
          "bzz-raw://237231d6746fbf8d95ec0fc07ee1ddc0978ae77ef12fe00f445e9f22232d1108",
          "dweb:/ipfs/QmbSKScTxX8nxNnjogci32r3fRexDfFG4sH4myE85AewQp"
        ],
        "license": "Apache-2.0"
      },
      "src/base/Cellar.sol": {
        "keccak256": "0x851d6f03d13fcd1e4e55d40ab04908677ef1ec92dbcaf3c02ee492602c368d67",
        "urls": [
          "bzz-raw://0eff90da37039eb4fb743024373d46ce6ccc198b5cb5c61c628f7a160d94fd0b",
          "dweb:/ipfs/QmUoLuGxVU5UqKNUB75BxMvYnpTxxcq8ZiUskrTTx8WbJA"
        ],
        "license": "Apache-2.0"
      },
      "src/base/ERC20.sol": {
        "keccak256": "0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02",
        "urls": [
          "bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4",
          "dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ERC4626.sol": {
        "keccak256": "0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7",
        "urls": [
          "bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469",
          "dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/Multicall.sol": {
        "keccak256": "0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9",
        "urls": [
          "bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c",
          "dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/SafeTransferLib.sol": {
        "keccak256": "0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324",
        "urls": [
          "bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a",
          "dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IMulticall.sol": {
        "keccak256": "0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e",
        "urls": [
          "bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0",
          "dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/DataTypes.sol": {
        "keccak256": "0xb9862fe603ae5bd1468248ee9a24670a58be807b561bc5302e9fdab38414b92d",
        "urls": [
          "bzz-raw://5a8d012c8875407b61a657e38b08fc56d80c347802d3676a9dfb1e8fa28e69e2",
          "dweb:/ipfs/QmVRSCrCYw9h5FVscBqKy9WAy1UesDmLtXdUbykLus4Kmq"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/external/IAaveOracle.sol": {
        "keccak256": "0x3904eedbb0f7cf723319b7548dae92f40e44ae33143b2996c90db19c8b073c3b",
        "urls": [
          "bzz-raw://c3596e25ed83b38c4fd038fa39fa3c9bcf6e8d81b557f7632fa81e55ccb3a7ce",
          "dweb:/ipfs/QmRzzJPgdssAYH7DrdnqqGwFM1fFAQoy2L9RyDfw6jyCTA"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/IAaveToken.sol": {
        "keccak256": "0x77cd64637e4c0fd379b2d4d826bcd9f64fc706a291ce77d023f693d1eb8e45d8",
        "urls": [
          "bzz-raw://e87630603401ff3374cb610b765e46a3a235ef294fab212cf3116a35db7c4d58",
          "dweb:/ipfs/Qma8awSuYptmpBsWUMz9NZBogVRtVQwXF5cvfsVWpNKhc3"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/IChainlinkAggregator.sol": {
        "keccak256": "0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d",
        "urls": [
          "bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2",
          "dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/ICurvePool.sol": {
        "keccak256": "0x9ae71865252aeca89fd6c74013eded1d8029eccc46e3604291be16e97b89a5da",
        "urls": [
          "bzz-raw://f504248ab846844bcd771226f7b2984455ddcc746357924fce50a41b65eec9e2",
          "dweb:/ipfs/QmQVe1VZUgxUab9ocsbrX42Ust3hs83BU3bpA1j6Cx1xo6"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IGravity.sol": {
        "keccak256": "0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11",
        "urls": [
          "bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51",
          "dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IPoolAddressesProvider.sol": {
        "keccak256": "0x99b710acbe9eca030c28301f731bd42912b1c5b20ba01281bd740b9f52e4d13d",
        "urls": [
          "bzz-raw://e7f2305e9570b50eada9211baa61906381f6edd8a4a92954d5739e6048ea0a7a",
          "dweb:/ipfs/QmPmgrLRS7VuuLuEsX4wWgf9cipvDgL6DV3bK3PPU4zU2H"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/external/IPoolV3.sol": {
        "keccak256": "0xbe299d80d955a1a18e31da898906587d8c9977caaa9eb0c2e130fb1475d18554",
        "urls": [
          "bzz-raw://1944f519394894a307274c87a04984eaba57edf5c1d8759b0257689a17ef7a48",
          "dweb:/ipfs/QmUM3XNhenkQwru9uYgmuVeAu4YWwH572dvtyPZJ8tVgqZ"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/external/IUniswapV2Router02.sol": {
        "keccak256": "0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f",
        "urls": [
          "bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a",
          "dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IUniswapV3Router.sol": {
        "keccak256": "0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355",
        "urls": [
          "bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd",
          "dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/modules/adaptors/Aave/V3/AaveV3ATokenAdaptor.sol": {
        "keccak256": "0xc88651670c70c491c2ae55cae87d1f0779530e74b5f353421e8f52b77e4c3ed6",
        "urls": [
          "bzz-raw://efb5717029d897fc9ab1079a046328ef5df07972c1703083457da99c93d07f0f",
          "dweb:/ipfs/QmWky6WmgG4iLq8f2MZkLiXZtciTd1oXLQfNfDC6yEiob1"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/adaptors/BaseAdaptor.sol": {
        "keccak256": "0xb45700da63110e41cbb1879c3d261763644bc851effa798721cf7eca3e039f9a",
        "urls": [
          "bzz-raw://7810084abb53310d5d50f5ca55557e9dcdc8fef6c987e55d82a7748aad467e27",
          "dweb:/ipfs/QmaieqMfgwWJvFy8q3jVrx8Fifo6M9UZM8cBjpmyNFPc5j"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/price-router/PriceRouter.sol": {
        "keccak256": "0x3d0fb1c107cfbd5b72660b548a9749dfd0d07d9a0b5abdf554d593ee00569550",
        "urls": [
          "bzz-raw://f90a60a3097007a1dcd2871db79b0df74cf2a18de5126fc2bd2896f2715e93af",
          "dweb:/ipfs/QmTDqnNN9Rv29MYHCAzZsKzsDbTBMYYQi17VEwhmbE6KYC"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/swap-router/SwapRouter.sol": {
        "keccak256": "0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80",
        "urls": [
          "bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818",
          "dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f",
        "urls": [
          "bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312",
          "dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Uint32Array.sol": {
        "keccak256": "0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9",
        "urls": [
          "bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944",
          "dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/adaptors/Aave/V3/AaveV3ATokenAdaptor.sol",
    "id": 43304,
    "exportedSymbols": {
      "AaveV3ATokenAdaptor": [
        43303
      ],
      "BaseAdaptor": [
        43962
      ],
      "Cellar": [
        33437
      ],
      "ERC20": [
        34556
      ],
      "IAaveOracle": [
        35791
      ],
      "IAaveToken": [
        35801
      ],
      "IPoolV3": [
        38640
      ],
      "Math": [
        54508
      ],
      "PriceRouter": [
        52732
      ],
      "SafeTransferLib": [
        35307
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:13680:76",
    "nodes": [
      {
        "id": 42564,
        "nodeType": "PragmaDirective",
        "src": "39:23:76",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 42571,
        "nodeType": "ImportDirective",
        "src": "64:118:76",
        "nodes": [],
        "absolutePath": "src/modules/adaptors/BaseAdaptor.sol",
        "file": "src/modules/adaptors/BaseAdaptor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43304,
        "sourceUnit": 43963,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42565,
              "name": "BaseAdaptor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43962,
              "src": "73:11:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 42566,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34556,
              "src": "86:5:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 42567,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35307,
              "src": "93:15:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 42568,
              "name": "Cellar",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33437,
              "src": "110:6:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 42569,
              "name": "PriceRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52732,
              "src": "118:11:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 42570,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54508,
              "src": "131:4:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42573,
        "nodeType": "ImportDirective",
        "src": "183:62:76",
        "nodes": [],
        "absolutePath": "src/interfaces/external/IPoolV3.sol",
        "file": "src/interfaces/external/IPoolV3.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43304,
        "sourceUnit": 38641,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42572,
              "name": "IPoolV3",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38640,
              "src": "192:7:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42575,
        "nodeType": "ImportDirective",
        "src": "246:68:76",
        "nodes": [],
        "absolutePath": "src/interfaces/external/IAaveToken.sol",
        "file": "src/interfaces/external/IAaveToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43304,
        "sourceUnit": 35802,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42574,
              "name": "IAaveToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35801,
              "src": "255:10:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42577,
        "nodeType": "ImportDirective",
        "src": "315:70:76",
        "nodes": [],
        "absolutePath": "src/interfaces/external/IAaveOracle.sol",
        "file": "src/interfaces/external/IAaveOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43304,
        "sourceUnit": 35792,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42576,
              "name": "IAaveOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35791,
              "src": "324:11:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43303,
        "nodeType": "ContractDefinition",
        "src": "516:13202:76",
        "nodes": [
          {
            "id": 42584,
            "nodeType": "UsingForDirective",
            "src": "566:32:76",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 42581,
              "name": "SafeTransferLib",
              "nameLocations": [
                "572:15:76"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35307,
              "src": "572:15:76"
            },
            "typeName": {
              "id": 42583,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42582,
                "name": "ERC20",
                "nameLocations": [
                  "592:5:76"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34556,
                "src": "592:5:76"
              },
              "referencedDeclaration": 34556,
              "src": "592:5:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$34556",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 42587,
            "nodeType": "UsingForDirective",
            "src": "603:23:76",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 42585,
              "name": "Math",
              "nameLocations": [
                "609:4:76"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54508,
              "src": "609:4:76"
            },
            "typeName": {
              "id": 42586,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "618:7:76",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 42590,
            "nodeType": "ErrorDefinition",
            "src": "1782:48:76",
            "nodes": [],
            "documentation": {
              "id": 42588,
              "nodeType": "StructuredDocumentation",
              "src": "1692:85:76",
              "text": "@notice Attempted withdraw would lower Cellar health factor too low."
            },
            "errorSelector": "83616978",
            "name": "AaveV3ATokenAdaptor__HealthFactorTooLow",
            "nameLocation": "1788:39:76",
            "parameters": {
              "id": 42589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1827:2:76"
            }
          },
          {
            "id": 42593,
            "nodeType": "ErrorDefinition",
            "src": "1947:53:76",
            "nodes": [],
            "documentation": {
              "id": 42591,
              "nodeType": "StructuredDocumentation",
              "src": "1836:106:76",
              "text": " @notice Aave V3 oracle uses a different base asset than this contract was designed for."
            },
            "errorSelector": "d2f0ce6a",
            "name": "AaveV3ATokenAdaptor__OracleUsesDifferentBase",
            "nameLocation": "1953:44:76",
            "parameters": {
              "id": 42592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1997:2:76"
            }
          },
          {
            "id": 42608,
            "nodeType": "FunctionDefinition",
            "src": "2419:138:76",
            "nodes": [],
            "body": {
              "id": 42607,
              "nodeType": "Block",
              "src": "2480:77:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "416176652056332061546f6b656e2041646170746f72205620312e30",
                            "id": 42603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2518:30:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_1f7f1b5c30c4f767430a7ec96014f0eb512c08dcec2571245edbfe8bbfa001aa",
                              "typeString": "literal_string \"Aave V3 aToken Adaptor V 1.0\""
                            },
                            "value": "Aave V3 aToken Adaptor V 1.0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_1f7f1b5c30c4f767430a7ec96014f0eb512c08dcec2571245edbfe8bbfa001aa",
                              "typeString": "literal_string \"Aave V3 aToken Adaptor V 1.0\""
                            }
                          ],
                          "expression": {
                            "id": 42601,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2507:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 42602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2511:6:76",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2507:10:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 42604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2507:42:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 42600,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2497:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 42605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:53:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 42599,
                  "id": 42606,
                  "nodeType": "Return",
                  "src": "2490:60:76"
                }
              ]
            },
            "baseFunctions": [
              43752
            ],
            "documentation": {
              "id": 42594,
              "nodeType": "StructuredDocumentation",
              "src": "2118:296:76",
              "text": " @dev Identifier unique to this adaptor for a shared registry.\n Normally the identifier would just be the address of this contract, but this\n Identifier is needed during Cellar Delegate Call Operations, so getting the address\n of the adaptor is more difficult."
            },
            "functionSelector": "7998a1c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "identifier",
            "nameLocation": "2428:10:76",
            "overrides": {
              "id": 42596,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2453:8:76"
            },
            "parameters": {
              "id": 42595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2438:2:76"
            },
            "returnParameters": {
              "id": 42599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42598,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42608,
                  "src": "2471:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 42597,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2470:9:76"
            },
            "scope": 43303,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42620,
            "nodeType": "FunctionDefinition",
            "src": "2641:123:76",
            "nodes": [],
            "body": {
              "id": 42619,
              "nodeType": "Block",
              "src": "2689:75:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307838373837304263613346336644363333354333463463653833393244363933353042346641344532",
                        "id": 42616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2714:42:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42615,
                      "name": "IPoolV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38640,
                      "src": "2706:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IPoolV3_$38640_$",
                        "typeString": "type(contract IPoolV3)"
                      }
                    },
                    "id": 42617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2706:51:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolV3_$38640",
                      "typeString": "contract IPoolV3"
                    }
                  },
                  "functionReturnParameters": 42614,
                  "id": 42618,
                  "nodeType": "Return",
                  "src": "2699:58:76"
                }
              ]
            },
            "documentation": {
              "id": 42609,
              "nodeType": "StructuredDocumentation",
              "src": "2563:73:76",
              "text": " @notice The Aave V3 Pool contract on Ethereum Mainnet."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pool",
            "nameLocation": "2650:4:76",
            "parameters": {
              "id": 42610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2654:2:76"
            },
            "returnParameters": {
              "id": 42614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42613,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42620,
                  "src": "2680:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPoolV3_$38640",
                    "typeString": "contract IPoolV3"
                  },
                  "typeName": {
                    "id": 42612,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42611,
                      "name": "IPoolV3",
                      "nameLocations": [
                        "2680:7:76"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 38640,
                      "src": "2680:7:76"
                    },
                    "referencedDeclaration": 38640,
                    "src": "2680:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolV3_$38640",
                      "typeString": "contract IPoolV3"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2679:9:76"
            },
            "scope": 43303,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 42632,
            "nodeType": "FunctionDefinition",
            "src": "2841:137:76",
            "nodes": [],
            "body": {
              "id": 42631,
              "nodeType": "Block",
              "src": "2899:79:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307835343538366245363245336333353830333735614533373233433134353235333036304361304332",
                        "id": 42628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2928:42:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x54586bE62E3c3580375aE3723C145253060Ca0C2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42627,
                      "name": "IAaveOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35791,
                      "src": "2916:11:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IAaveOracle_$35791_$",
                        "typeString": "type(contract IAaveOracle)"
                      }
                    },
                    "id": 42629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2916:55:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveOracle_$35791",
                      "typeString": "contract IAaveOracle"
                    }
                  },
                  "functionReturnParameters": 42626,
                  "id": 42630,
                  "nodeType": "Return",
                  "src": "2909:62:76"
                }
              ]
            },
            "documentation": {
              "id": 42621,
              "nodeType": "StructuredDocumentation",
              "src": "2770:66:76",
              "text": " @notice The Aave V3 Oracle on Ethereum Mainnet."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "aaveOracle",
            "nameLocation": "2850:10:76",
            "parameters": {
              "id": 42622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2860:2:76"
            },
            "returnParameters": {
              "id": 42626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42625,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42632,
                  "src": "2886:11:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAaveOracle_$35791",
                    "typeString": "contract IAaveOracle"
                  },
                  "typeName": {
                    "id": 42624,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42623,
                      "name": "IAaveOracle",
                      "nameLocations": [
                        "2886:11:76"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35791,
                      "src": "2886:11:76"
                    },
                    "referencedDeclaration": 35791,
                    "src": "2886:11:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveOracle_$35791",
                      "typeString": "contract IAaveOracle"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2885:13:76"
            },
            "scope": 43303,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 42641,
            "nodeType": "FunctionDefinition",
            "src": "3144:80:76",
            "nodes": [],
            "body": {
              "id": 42640,
              "nodeType": "Block",
              "src": "3193:31:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "312e3035653138",
                    "id": 42638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3210:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1050000000000000000_by_1",
                      "typeString": "int_const 1050000000000000000"
                    },
                    "value": "1.05e18"
                  },
                  "functionReturnParameters": 42637,
                  "id": 42639,
                  "nodeType": "Return",
                  "src": "3203:14:76"
                }
              ]
            },
            "documentation": {
              "id": 42633,
              "nodeType": "StructuredDocumentation",
              "src": "2984:155:76",
              "text": " @notice Minimum Health Factor enforced after every aToken withdraw.\n @notice Overwrites strategist set minimums if they are lower."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "HFMIN",
            "nameLocation": "3153:5:76",
            "parameters": {
              "id": 42634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3158:2:76"
            },
            "returnParameters": {
              "id": 42637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42636,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42641,
                  "src": "3184:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3184:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3183:9:76"
            },
            "scope": 43303,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 42710,
            "nodeType": "FunctionDefinition",
            "src": "3697:490:76",
            "nodes": [],
            "body": {
              "id": 42709,
              "nodeType": "Block",
              "src": "3786:401:76",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42654
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42654,
                      "mutability": "mutable",
                      "name": "aToken",
                      "nameLocation": "3842:6:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 42709,
                      "src": "3831:17:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveToken_$35801",
                        "typeString": "contract IAaveToken"
                      },
                      "typeName": {
                        "id": 42653,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42652,
                          "name": "IAaveToken",
                          "nameLocations": [
                            "3831:10:76"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35801,
                          "src": "3831:10:76"
                        },
                        "referencedDeclaration": 35801,
                        "src": "3831:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveToken_$35801",
                          "typeString": "contract IAaveToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42664,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42658,
                            "name": "adaptorData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42646,
                            "src": "3873:11:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 42660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3887:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 42659,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3887:7:76",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 42661,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3886:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          ],
                          "expression": {
                            "id": 42656,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3862:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 42657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3866:6:76",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "3862:10:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 42662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3862:34:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 42655,
                      "name": "IAaveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35801,
                      "src": "3851:10:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IAaveToken_$35801_$",
                        "typeString": "type(contract IAaveToken)"
                      }
                    },
                    "id": 42663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3851:46:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveToken_$35801",
                      "typeString": "contract IAaveToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3831:66:76"
                },
                {
                  "assignments": [
                    42667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42667,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "3913:5:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 42709,
                      "src": "3907:11:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 42666,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42665,
                          "name": "ERC20",
                          "nameLocations": [
                            "3907:5:76"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34556,
                          "src": "3907:5:76"
                        },
                        "referencedDeclaration": 34556,
                        "src": "3907:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42673,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 42669,
                            "name": "aToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42654,
                            "src": "3927:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveToken_$35801",
                              "typeString": "contract IAaveToken"
                            }
                          },
                          "id": 42670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3934:24:76",
                          "memberName": "UNDERLYING_ASSET_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35800,
                          "src": "3927:31:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 42671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3927:33:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42668,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34556,
                      "src": "3921:5:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 42672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3921:40:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3907:54:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 42679,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42620,
                              "src": "3997:4:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                                "typeString": "function () pure returns (contract IPoolV3)"
                              }
                            },
                            "id": 42680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3997:6:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPoolV3_$38640",
                              "typeString": "contract IPoolV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPoolV3_$38640",
                              "typeString": "contract IPoolV3"
                            }
                          ],
                          "id": 42678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3989:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42677,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3989:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3989:15:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42682,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42644,
                        "src": "4006:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 42674,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42667,
                        "src": "3971:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 42676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3977:11:76",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35306,
                      "src": "3971:17:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$34556_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 42683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3971:42:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42684,
                  "nodeType": "ExpressionStatement",
                  "src": "3971:42:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42690,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42667,
                            "src": "4045:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 42689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4037:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42688,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4037:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4037:14:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42692,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42644,
                        "src": "4053:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42695,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4069:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          ],
                          "id": 42694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4061:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42693,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4061:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4061:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4076:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 42685,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42620,
                          "src": "4023:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                            "typeString": "function () pure returns (contract IPoolV3)"
                          }
                        },
                        "id": 42686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4023:6:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolV3_$38640",
                          "typeString": "contract IPoolV3"
                        }
                      },
                      "id": 42687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4030:6:76",
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38225,
                      "src": "4023:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,address,uint16) external"
                      }
                    },
                    "id": 42698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4023:55:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42699,
                  "nodeType": "ExpressionStatement",
                  "src": "4023:55:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42701,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42667,
                        "src": "4157:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 42704,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42620,
                              "src": "4172:4:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                                "typeString": "function () pure returns (contract IPoolV3)"
                              }
                            },
                            "id": 42705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4172:6:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPoolV3_$38640",
                              "typeString": "contract IPoolV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPoolV3_$38640",
                              "typeString": "contract IPoolV3"
                            }
                          ],
                          "id": 42703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4164:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42702,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4164:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4164:15:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42700,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43918,
                      "src": "4133:23:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 42707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4133:47:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42708,
                  "nodeType": "ExpressionStatement",
                  "src": "4133:47:76"
                }
              ]
            },
            "baseFunctions": [
              43787
            ],
            "documentation": {
              "id": 42642,
              "nodeType": "StructuredDocumentation",
              "src": "3350:342:76",
              "text": " @notice Cellar must approve Pool to spend its assets, then call deposit to lend its assets.\n @param assets the amount of assets to lend on Aave\n @param adaptorData adaptor data containining the abi encoded aToken\n @dev configurationData is NOT used because this action will only increase the health factor"
            },
            "functionSelector": "69445c31",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "3706:7:76",
            "overrides": {
              "id": 42650,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3777:8:76"
            },
            "parameters": {
              "id": 42649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42644,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "3722:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 42710,
                  "src": "3714:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3714:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42646,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "3743:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 42710,
                  "src": "3730:24:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42645,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3730:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42648,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42710,
                  "src": "3756:12:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42647,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3756:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3713:56:76"
            },
            "returnParameters": {
              "id": 42651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3786:0:76"
            },
            "scope": 43303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42829,
            "nodeType": "FunctionDefinition",
            "src": "4753:1411:76",
            "nodes": [],
            "body": {
              "id": 42828,
              "nodeType": "Block",
              "src": "4910:1254:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42724,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42715,
                        "src": "4983:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42723,
                      "name": "_externalReceiverCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43944,
                      "src": "4960:22:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 42725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4960:32:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42726,
                  "nodeType": "ExpressionStatement",
                  "src": "4960:32:76"
                },
                {
                  "assignments": [
                    42729
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42729,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "5052:5:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 42828,
                      "src": "5041:16:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveToken_$35801",
                        "typeString": "contract IAaveToken"
                      },
                      "typeName": {
                        "id": 42728,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42727,
                          "name": "IAaveToken",
                          "nameLocations": [
                            "5041:10:76"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35801,
                          "src": "5041:10:76"
                        },
                        "referencedDeclaration": 35801,
                        "src": "5041:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveToken_$35801",
                          "typeString": "contract IAaveToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42739,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42733,
                            "name": "adaptorData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42717,
                            "src": "5082:11:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 42735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5096:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 42734,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5096:7:76",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 42736,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5095:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          ],
                          "expression": {
                            "id": 42731,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5071:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 42732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5075:6:76",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "5071:10:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 42737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5071:34:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 42730,
                      "name": "IAaveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35801,
                      "src": "5060:10:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IAaveToken_$35801_$",
                        "typeString": "type(contract IAaveToken)"
                      }
                    },
                    "id": 42738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5060:46:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveToken_$35801",
                      "typeString": "contract IAaveToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5041:65:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 42743,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42729,
                            "src": "5132:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveToken_$35801",
                              "typeString": "contract IAaveToken"
                            }
                          },
                          "id": 42744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5138:24:76",
                          "memberName": "UNDERLYING_ASSET_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35800,
                          "src": "5132:30:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 42745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5132:32:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42746,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42713,
                        "src": "5166:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42749,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5182:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          ],
                          "id": 42748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5174:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42747,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5174:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5174:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 42740,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42620,
                          "src": "5116:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                            "typeString": "function () pure returns (contract IPoolV3)"
                          }
                        },
                        "id": 42741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5116:6:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolV3_$38640",
                          "typeString": "contract IPoolV3"
                        }
                      },
                      "id": 42742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5123:8:76",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38257,
                      "src": "5116:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 42751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5116:72:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42752,
                  "nodeType": "ExpressionStatement",
                  "src": "5116:72:76"
                },
                {
                  "assignments": [
                    null,
                    42754,
                    null,
                    null,
                    null,
                    42756
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 42754,
                      "mutability": "mutable",
                      "name": "totalDebtBase",
                      "nameLocation": "5210:13:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 42828,
                      "src": "5202:21:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5202:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 42756,
                      "mutability": "mutable",
                      "name": "healthFactor",
                      "nameLocation": "5239:12:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 42828,
                      "src": "5231:20:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42755,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5231:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42765,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42762,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5289:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          ],
                          "id": 42761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5281:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42760,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5281:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5281:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 42757,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42620,
                          "src": "5255:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                            "typeString": "function () pure returns (contract IPoolV3)"
                          }
                        },
                        "id": 42758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5255:6:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolV3_$38640",
                          "typeString": "contract IPoolV3"
                        }
                      },
                      "id": 42759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5262:18:76",
                      "memberName": "getUserAccountData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38410,
                      "src": "5255:25:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5255:40:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5199:96:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42766,
                      "name": "totalDebtBase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42754,
                      "src": "5309:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 42767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5325:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5309:17:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42817,
                  "nodeType": "IfStatement",
                  "src": "5305:732:76",
                  "trueBody": {
                    "id": 42816,
                    "nodeType": "Block",
                    "src": "5328:709:76",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 42772,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5459:3:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 42773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5463:6:76",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5459:10:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 42769,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42620,
                                  "src": "5439:4:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                                    "typeString": "function () pure returns (contract IPoolV3)"
                                  }
                                },
                                "id": 42770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5439:6:76",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPoolV3_$38640",
                                  "typeString": "contract IPoolV3"
                                }
                              },
                              "id": 42771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5446:12:76",
                              "memberName": "getUserEMode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 38574,
                              "src": "5439:19:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 42774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5439:31:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 42775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5474:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5439:36:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 42780,
                        "nodeType": "IfStatement",
                        "src": "5435:87:76",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 42777,
                              "name": "BaseAdaptor__UserWithdrawsNotAllowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43730,
                              "src": "5484:36:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 42778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5484:38:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 42779,
                          "nodeType": "RevertStatement",
                          "src": "5477:45:76"
                        }
                      },
                      {
                        "assignments": [
                          42782
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 42782,
                            "mutability": "mutable",
                            "name": "minHealthFactor",
                            "nameLocation": "5594:15:76",
                            "nodeType": "VariableDeclaration",
                            "scope": 42816,
                            "src": "5586:23:76",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 42781,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5586:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 42790,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 42785,
                              "name": "configData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42719,
                              "src": "5623:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 42787,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5636:7:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 42786,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5636:7:76",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 42788,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5635:9:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "expression": {
                              "id": 42783,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5612:3:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 42784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5616:6:76",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5612:10:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 42789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5612:33:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5586:59:76"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42791,
                            "name": "minHealthFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42782,
                            "src": "5663:15:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 42792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5682:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5663:20:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 42798,
                        "nodeType": "IfStatement",
                        "src": "5659:104:76",
                        "trueBody": {
                          "id": 42797,
                          "nodeType": "Block",
                          "src": "5685:78:76",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 42794,
                                  "name": "BaseAdaptor__UserWithdrawsNotAllowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43730,
                                  "src": "5710:36:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 42795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5710:38:76",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 42796,
                              "nodeType": "RevertStatement",
                              "src": "5703:45:76"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42799,
                            "name": "minHealthFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42782,
                            "src": "5876:15:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 42800,
                              "name": "HFMIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42641,
                              "src": "5894:5:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                "typeString": "function () pure returns (uint256)"
                              }
                            },
                            "id": 42801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5894:7:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5876:25:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 42808,
                        "nodeType": "IfStatement",
                        "src": "5872:56:76",
                        "trueBody": {
                          "expression": {
                            "id": 42806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 42803,
                              "name": "minHealthFactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42782,
                              "src": "5903:15:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 42804,
                                "name": "HFMIN",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42641,
                                "src": "5921:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                  "typeString": "function () pure returns (uint256)"
                                }
                              },
                              "id": 42805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5921:7:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5903:25:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 42807,
                          "nodeType": "ExpressionStatement",
                          "src": "5903:25:76"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42809,
                            "name": "healthFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42756,
                            "src": "5946:12:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 42810,
                            "name": "minHealthFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42782,
                            "src": "5961:15:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5946:30:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 42815,
                        "nodeType": "IfStatement",
                        "src": "5942:84:76",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 42812,
                              "name": "AaveV3ATokenAdaptor__HealthFactorTooLow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42590,
                              "src": "5985:39:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 42813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5985:41:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 42814,
                          "nodeType": "RevertStatement",
                          "src": "5978:48:76"
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42824,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42715,
                        "src": "6140:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42825,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42713,
                        "src": "6150:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 42819,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42729,
                                "src": "6093:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAaveToken_$35801",
                                  "typeString": "contract IAaveToken"
                                }
                              },
                              "id": 42820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6099:24:76",
                              "memberName": "UNDERLYING_ASSET_ADDRESS",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35800,
                              "src": "6093:30:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 42821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6093:32:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42818,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34556,
                          "src": "6087:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 42822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6087:39:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 42823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6127:12:76",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35286,
                      "src": "6087:52:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$34556_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 42826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6087:70:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42827,
                  "nodeType": "ExpressionStatement",
                  "src": "6087:70:76"
                }
              ]
            },
            "baseFunctions": [
              43799
            ],
            "documentation": {
              "id": 42711,
              "nodeType": "StructuredDocumentation",
              "src": "4193:555:76",
              "text": "@notice Cellars must withdraw from Aave, check if a minimum health factor is specified\n       then transfer assets to receiver.\n @dev Important to verify that external receivers are allowed if receiver is not Cellar address.\n @param assets the amount of assets to withdraw from Aave\n @param receiver the address to send withdrawn assets to\n @param adaptorData adaptor data containining the abi encoded aToken\n @param configData abi encoded minimum health factor, if zero user withdraws are not allowed."
            },
            "functionSelector": "c9111bd7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "4762:8:76",
            "overrides": {
              "id": 42721,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4901:8:76"
            },
            "parameters": {
              "id": 42720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42713,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "4788:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 42829,
                  "src": "4780:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4780:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42715,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "4812:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 42829,
                  "src": "4804:16:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4804:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42717,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "4843:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 42829,
                  "src": "4830:24:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42716,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4830:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42719,
                  "mutability": "mutable",
                  "name": "configData",
                  "nameLocation": "4877:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 42829,
                  "src": "4864:23:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42718,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4864:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4770:123:76"
            },
            "returnParameters": {
              "id": 42722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4910:0:76"
            },
            "scope": 43303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43020,
            "nodeType": "FunctionDefinition",
            "src": "7107:2931:76",
            "nodes": [],
            "body": {
              "id": 43019,
              "nodeType": "Block",
              "src": "7245:2793:76",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42842,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "7266:5:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43019,
                      "src": "7255:16:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveToken_$35801",
                        "typeString": "contract IAaveToken"
                      },
                      "typeName": {
                        "id": 42841,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42840,
                          "name": "IAaveToken",
                          "nameLocations": [
                            "7255:10:76"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35801,
                          "src": "7255:10:76"
                        },
                        "referencedDeclaration": 35801,
                        "src": "7255:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveToken_$35801",
                          "typeString": "contract IAaveToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42852,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42846,
                            "name": "adaptorData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42832,
                            "src": "7296:11:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 42848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7310:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 42847,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7310:7:76",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 42849,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7309:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          ],
                          "expression": {
                            "id": 42844,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7285:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 42845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7289:6:76",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "7285:10:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 42850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7285:34:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 42843,
                      "name": "IAaveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35801,
                      "src": "7274:10:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IAaveToken_$35801_$",
                        "typeString": "type(contract IAaveToken)"
                      }
                    },
                    "id": 42851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7274:46:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveToken_$35801",
                      "typeString": "contract IAaveToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7255:65:76"
                },
                {
                  "assignments": [
                    42854,
                    42856,
                    null,
                    42858,
                    null,
                    42860
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42854,
                      "mutability": "mutable",
                      "name": "totalCollateralBase",
                      "nameLocation": "7353:19:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43019,
                      "src": "7345:27:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42853,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7345:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42856,
                      "mutability": "mutable",
                      "name": "totalDebtBase",
                      "nameLocation": "7394:13:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43019,
                      "src": "7386:21:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42855,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7386:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 42858,
                      "mutability": "mutable",
                      "name": "currentLiquidationThreshold",
                      "nameLocation": "7443:27:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43019,
                      "src": "7435:35:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42857,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7435:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 42860,
                      "mutability": "mutable",
                      "name": "healthFactor",
                      "nameLocation": "7506:12:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43019,
                      "src": "7498:20:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42859,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7498:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42867,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 42864,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7557:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 42865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7561:6:76",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7557:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 42861,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42620,
                          "src": "7531:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                            "typeString": "function () pure returns (contract IPoolV3)"
                          }
                        },
                        "id": 42862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7531:6:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolV3_$38640",
                          "typeString": "contract IPoolV3"
                        }
                      },
                      "id": 42863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7538:18:76",
                      "memberName": "getUserAccountData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38410,
                      "src": "7531:25:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7531:37:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7331:237:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42868,
                      "name": "totalDebtBase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42856,
                      "src": "7669:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 42869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7686:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7669:18:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42882,
                  "nodeType": "IfStatement",
                  "src": "7665:74:76",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 42878,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7728:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 42879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7732:6:76",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7728:10:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 42874,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42842,
                                  "src": "7710:5:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAaveToken_$35801",
                                    "typeString": "contract IAaveToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAaveToken_$35801",
                                    "typeString": "contract IAaveToken"
                                  }
                                ],
                                "id": 42873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7702:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 42872,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7702:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 42875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7702:14:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 42871,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34556,
                            "src": "7696:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 42876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7696:21:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$34556",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 42877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7718:9:76",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34199,
                        "src": "7696:31:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 42880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7696:43:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 42839,
                    "id": 42881,
                    "nodeType": "Return",
                    "src": "7689:50:76"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 42886,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7864:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 42887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7868:6:76",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7864:10:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 42883,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42620,
                            "src": "7844:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                              "typeString": "function () pure returns (contract IPoolV3)"
                            }
                          },
                          "id": 42884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7844:6:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPoolV3_$38640",
                            "typeString": "contract IPoolV3"
                          }
                        },
                        "id": 42885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7851:12:76",
                        "memberName": "getUserEMode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38574,
                        "src": "7844:19:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 42888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7844:31:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 42889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7879:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7844:36:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42893,
                  "nodeType": "IfStatement",
                  "src": "7840:50:76",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 42891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7889:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 42839,
                    "id": 42892,
                    "nodeType": "Return",
                    "src": "7882:8:76"
                  }
                },
                {
                  "assignments": [
                    42895
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42895,
                      "mutability": "mutable",
                      "name": "minHealthFactor",
                      "nameLocation": "7972:15:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43019,
                      "src": "7964:23:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42894,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7964:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42903,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42898,
                        "name": "configData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42834,
                        "src": "8001:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 42900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8014:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 42899,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8014:7:76",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 42901,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8013:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 42896,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7990:3:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 42897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7994:6:76",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7990:10:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 42902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7990:33:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7964:59:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42904,
                      "name": "minHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42895,
                      "src": "8172:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 42905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8191:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8172:20:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42909,
                  "nodeType": "IfStatement",
                  "src": "8168:34:76",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 42907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8201:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 42839,
                    "id": 42908,
                    "nodeType": "Return",
                    "src": "8194:8:76"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42910,
                      "name": "minHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42895,
                      "src": "8308:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 42911,
                        "name": "HFMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42641,
                        "src": "8326:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                          "typeString": "function () pure returns (uint256)"
                        }
                      },
                      "id": 42912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8326:7:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8308:25:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42919,
                  "nodeType": "IfStatement",
                  "src": "8304:56:76",
                  "trueBody": {
                    "expression": {
                      "id": 42917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 42914,
                        "name": "minHealthFactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42895,
                        "src": "8335:15:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 42915,
                          "name": "HFMIN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42641,
                          "src": "8353:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                            "typeString": "function () pure returns (uint256)"
                          }
                        },
                        "id": 42916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8353:7:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8335:25:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 42918,
                    "nodeType": "ExpressionStatement",
                    "src": "8335:25:76"
                  }
                },
                {
                  "assignments": [
                    42921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42921,
                      "mutability": "mutable",
                      "name": "maxBorrowableWithMin",
                      "nameLocation": "8379:20:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43019,
                      "src": "8371:28:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42920,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8371:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42922,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8371:28:76"
                },
                {
                  "assignments": [
                    42924
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42924,
                      "mutability": "mutable",
                      "name": "cushion",
                      "nameLocation": "8509:7:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43019,
                      "src": "8501:15:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42923,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8501:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42926,
                  "initialValue": {
                    "hexValue": "302e3031653138",
                    "id": 42925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8519:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "0.01e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8501:25:76"
                },
                {
                  "expression": {
                    "id": 42929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42927,
                      "name": "minHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42895,
                      "src": "8582:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 42928,
                      "name": "cushion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42924,
                      "src": "8601:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8582:26:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42930,
                  "nodeType": "ExpressionStatement",
                  "src": "8582:26:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42931,
                      "name": "healthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42860,
                      "src": "8716:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42932,
                            "name": "minHealthFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42895,
                            "src": "8732:15:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 42933,
                            "name": "cushion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42924,
                            "src": "8750:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8732:25:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 42935,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8731:27:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8716:42:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 42952,
                    "nodeType": "Block",
                    "src": "8868:181:76",
                    "statements": [
                      {
                        "expression": {
                          "id": 42950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 42939,
                            "name": "maxBorrowableWithMin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42921,
                            "src": "8882:20:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 42949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 42940,
                              "name": "totalCollateralBase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42854,
                              "src": "8921:19:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 42943,
                                  "name": "totalDebtBase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42856,
                                  "src": "8986:13:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 42946,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 42944,
                                        "name": "currentLiquidationThreshold",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 42858,
                                        "src": "9002:27:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "31653134",
                                        "id": 42945,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9032:4:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000000000000_by_1",
                                          "typeString": "int_const 100000000000000"
                                        },
                                        "value": "1e14"
                                      },
                                      "src": "9002:34:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 42947,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9001:36:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 42941,
                                  "name": "minHealthFactor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42895,
                                  "src": "8959:15:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 42942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8975:10:76",
                                "memberName": "mulDivDown",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 54494,
                                "src": "8959:26:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 42948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8959:79:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8921:117:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8882:156:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 42951,
                        "nodeType": "ExpressionStatement",
                        "src": "8882:156:76"
                      }
                    ]
                  },
                  "id": 42953,
                  "nodeType": "IfStatement",
                  "src": "8712:337:76",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 42937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8767:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 42839,
                    "id": 42938,
                    "nodeType": "Return",
                    "src": "8760:8:76"
                  }
                },
                {
                  "assignments": [
                    42957
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42957,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "9335:10:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43019,
                      "src": "9329:16:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 42956,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42955,
                          "name": "ERC20",
                          "nameLocations": [
                            "9329:5:76"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34556,
                          "src": "9329:5:76"
                        },
                        "referencedDeclaration": 34556,
                        "src": "9329:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev We want right side of \"-\" to have 8 decimals, so we need to dviide by 18 decimals.",
                  "id": 42963,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 42959,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42842,
                            "src": "9354:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveToken_$35801",
                              "typeString": "contract IAaveToken"
                            }
                          },
                          "id": 42960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9360:24:76",
                          "memberName": "UNDERLYING_ASSET_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35800,
                          "src": "9354:30:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 42961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9354:32:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42958,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34556,
                      "src": "9348:5:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 42962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9348:39:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9329:58:76"
                },
                {
                  "assignments": [
                    42966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42966,
                      "mutability": "mutable",
                      "name": "priceRouter",
                      "nameLocation": "9492:11:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43019,
                      "src": "9480:23:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceRouter_$52732",
                        "typeString": "contract PriceRouter"
                      },
                      "typeName": {
                        "id": 42965,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42964,
                          "name": "PriceRouter",
                          "nameLocations": [
                            "9480:11:76"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52732,
                          "src": "9480:11:76"
                        },
                        "referencedDeclaration": 52732,
                        "src": "9480:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceRouter_$52732",
                          "typeString": "contract PriceRouter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42979,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 42975,
                              "name": "PRICE_ROUTER_REGISTRY_SLOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43768,
                              "src": "9559:26:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                "typeString": "function () pure returns (uint256)"
                              }
                            },
                            "id": 42976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9559:28:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 42969,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "9525:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 42970,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9529:6:76",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "9525:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 42968,
                                  "name": "Cellar",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33437,
                                  "src": "9518:6:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                                    "typeString": "type(contract Cellar)"
                                  }
                                },
                                "id": 42971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9518:18:76",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Cellar_$33437",
                                  "typeString": "contract Cellar"
                                }
                              },
                              "id": 42972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9537:8:76",
                              "memberName": "registry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31073,
                              "src": "9518:27:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Registry_$30033_$",
                                "typeString": "function () view external returns (contract Registry)"
                              }
                            },
                            "id": 42973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9518:29:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Registry_$30033",
                              "typeString": "contract Registry"
                            }
                          },
                          "id": 42974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9548:10:76",
                          "memberName": "getAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29189,
                          "src": "9518:40:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 42977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9518:70:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42967,
                      "name": "PriceRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52732,
                      "src": "9506:11:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PriceRouter_$52732_$",
                        "typeString": "type(contract PriceRouter)"
                      }
                    },
                    "id": 42978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9506:83:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceRouter_$52732",
                      "typeString": "contract PriceRouter"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9480:109:76"
                },
                {
                  "assignments": [
                    42981
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42981,
                      "mutability": "mutable",
                      "name": "underlyingToUSD",
                      "nameLocation": "9607:15:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43019,
                      "src": "9599:23:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42980,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9599:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42986,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42984,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42957,
                        "src": "9651:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "expression": {
                        "id": 42982,
                        "name": "priceRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42966,
                        "src": "9625:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceRouter_$52732",
                          "typeString": "contract PriceRouter"
                        }
                      },
                      "id": 42983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9637:13:76",
                      "memberName": "getPriceInUSD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49990,
                      "src": "9625:25:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$34556_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20) view external returns (uint256)"
                      }
                    },
                    "id": 42985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9625:37:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9599:63:76"
                },
                {
                  "assignments": [
                    42988
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42988,
                      "mutability": "mutable",
                      "name": "withdrawable",
                      "nameLocation": "9680:12:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43019,
                      "src": "9672:20:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42987,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9672:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42998,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 42991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9727:2:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 42992,
                              "name": "underlying",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42957,
                              "src": "9733:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$34556",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 42993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9744:8:76",
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34193,
                            "src": "9733:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 42994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9733:21:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "9727:27:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42996,
                        "name": "underlyingToUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42981,
                        "src": "9756:15:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 42989,
                        "name": "maxBorrowableWithMin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42921,
                        "src": "9695:20:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 42990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9716:10:76",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54494,
                      "src": "9695:31:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 42997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9695:77:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9672:100:76"
                },
                {
                  "assignments": [
                    43000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43000,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "9790:7:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43019,
                      "src": "9782:15:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42999,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9782:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43011,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 43008,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9832:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 43009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9836:6:76",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9832:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 43004,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42842,
                                "src": "9814:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAaveToken_$35801",
                                  "typeString": "contract IAaveToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IAaveToken_$35801",
                                  "typeString": "contract IAaveToken"
                                }
                              ],
                              "id": 43003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9806:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 43002,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9806:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 43005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9806:14:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 43001,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34556,
                          "src": "9800:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 43006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9800:21:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 43007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9822:9:76",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34199,
                      "src": "9800:31:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 43010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9800:43:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9782:61:76"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 43014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 43012,
                        "name": "withdrawable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42988,
                        "src": "9984:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 43013,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43000,
                        "src": "9999:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9984:22:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 43016,
                      "name": "withdrawable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42988,
                      "src": "10019:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 43017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9984:47:76",
                    "trueExpression": {
                      "id": 43015,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43000,
                      "src": "10009:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 42839,
                  "id": 43018,
                  "nodeType": "Return",
                  "src": "9977:54:76"
                }
              ]
            },
            "baseFunctions": [
              43817
            ],
            "documentation": {
              "id": 42830,
              "nodeType": "StructuredDocumentation",
              "src": "6170:932:76",
              "text": " @notice Uses configurartion data minimum health factor to calculate withdrawable assets from Aave.\n @dev Applies a `cushion` value to the health factor checks and calculation.\n      The goal of this is to minimize scenarios where users are withdrawing a very small amount of\n      assets from Aave. This function returns zero if\n      -minimum health factor is NOT set.\n      -the current health factor is less than the minimum health factor + 2x `cushion`\n      Otherwise this function calculates the withdrawable amount using\n      minimum health factor + `cushion` for its calcualtions.\n @dev It is possible for the math below to lose a small amount of precision since it is only\n      maintaining 18 decimals during the calculation, but this is desired since\n      doing so lowers the withdrawable from amount which in turn raises the health factor."
            },
            "functionSelector": "fa50e5d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawableFrom",
            "nameLocation": "7116:16:76",
            "overrides": {
              "id": 42836,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7218:8:76"
            },
            "parameters": {
              "id": 42835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42832,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "7155:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 43020,
                  "src": "7142:24:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42831,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7142:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42834,
                  "mutability": "mutable",
                  "name": "configData",
                  "nameLocation": "7189:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 43020,
                  "src": "7176:23:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42833,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7176:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7132:73:76"
            },
            "returnParameters": {
              "id": 42839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42838,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43020,
                  "src": "7236:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7236:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7235:9:76"
            },
            "scope": 43303,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43048,
            "nodeType": "FunctionDefinition",
            "src": "10128:202:76",
            "nodes": [],
            "body": {
              "id": 43047,
              "nodeType": "Block",
              "src": "10212:118:76",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    43030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43030,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "10230:5:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43047,
                      "src": "10222:13:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 43029,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10222:7:76",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43038,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 43033,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43023,
                        "src": "10249:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 43035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10263:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 43034,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10263:7:76",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 43036,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10262:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 43031,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "10238:3:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 43032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "10242:6:76",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "10238:10:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 43037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10238:34:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10222:50:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 43043,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10312:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 43044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10316:6:76",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10312:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 43040,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43030,
                            "src": "10295:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 43039,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34556,
                          "src": "10289:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 43041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10289:12:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 43042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10302:9:76",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34199,
                      "src": "10289:22:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 43045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10289:34:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 43028,
                  "id": 43046,
                  "nodeType": "Return",
                  "src": "10282:41:76"
                }
              ]
            },
            "baseFunctions": [
              43807
            ],
            "documentation": {
              "id": 43021,
              "nodeType": "StructuredDocumentation",
              "src": "10044:79:76",
              "text": " @notice Returns the cellars balance of the positions aToken."
            },
            "functionSelector": "78415365",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "10137:9:76",
            "overrides": {
              "id": 43025,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10185:8:76"
            },
            "parameters": {
              "id": 43024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43023,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "10160:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 43048,
                  "src": "10147:24:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 43022,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10147:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10146:26:76"
            },
            "returnParameters": {
              "id": 43028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43027,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43048,
                  "src": "10203:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10203:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10202:9:76"
            },
            "scope": 43303,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43078,
            "nodeType": "FunctionDefinition",
            "src": "10414:218:76",
            "nodes": [],
            "body": {
              "id": 43077,
              "nodeType": "Block",
              "src": "10494:138:76",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    43060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43060,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "10515:5:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43077,
                      "src": "10504:16:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveToken_$35801",
                        "typeString": "contract IAaveToken"
                      },
                      "typeName": {
                        "id": 43059,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 43058,
                          "name": "IAaveToken",
                          "nameLocations": [
                            "10504:10:76"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35801,
                          "src": "10504:10:76"
                        },
                        "referencedDeclaration": 35801,
                        "src": "10504:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveToken_$35801",
                          "typeString": "contract IAaveToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43070,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43064,
                            "name": "adaptorData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43051,
                            "src": "10545:11:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 43066,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10559:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 43065,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10559:7:76",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 43067,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10558:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          ],
                          "expression": {
                            "id": 43062,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10534:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 43063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10538:6:76",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "10534:10:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 43068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10534:34:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 43061,
                      "name": "IAaveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35801,
                      "src": "10523:10:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IAaveToken_$35801_$",
                        "typeString": "type(contract IAaveToken)"
                      }
                    },
                    "id": 43069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10523:46:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveToken_$35801",
                      "typeString": "contract IAaveToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10504:65:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 43072,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43060,
                            "src": "10592:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveToken_$35801",
                              "typeString": "contract IAaveToken"
                            }
                          },
                          "id": 43073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10598:24:76",
                          "memberName": "UNDERLYING_ASSET_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35800,
                          "src": "10592:30:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 43074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10592:32:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 43071,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34556,
                      "src": "10586:5:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 43075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10586:39:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "functionReturnParameters": 43057,
                  "id": 43076,
                  "nodeType": "Return",
                  "src": "10579:46:76"
                }
              ]
            },
            "baseFunctions": [
              43826
            ],
            "documentation": {
              "id": 43049,
              "nodeType": "StructuredDocumentation",
              "src": "10336:73:76",
              "text": " @notice Returns the positions aToken underlying asset."
            },
            "functionSelector": "e170a9bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetOf",
            "nameLocation": "10423:7:76",
            "overrides": {
              "id": 43053,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10469:8:76"
            },
            "parameters": {
              "id": 43052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43051,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "10444:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 43078,
                  "src": "10431:24:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 43050,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10431:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10430:26:76"
            },
            "returnParameters": {
              "id": 43057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43056,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43078,
                  "src": "10487:5:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$34556",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 43055,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43054,
                      "name": "ERC20",
                      "nameLocations": [
                        "10487:5:76"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34556,
                      "src": "10487:5:76"
                    },
                    "referencedDeclaration": 34556,
                    "src": "10487:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10486:7:76"
            },
            "scope": 43303,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43126,
            "nodeType": "FunctionDefinition",
            "src": "10638:540:76",
            "nodes": [],
            "body": {
              "id": 43125,
              "nodeType": "Block",
              "src": "10737:441:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 43095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43088,
                      "name": "assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43086,
                      "src": "10747:6:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                        "typeString": "contract ERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 43093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10768:1:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 43092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "10756:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract ERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 43090,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 43089,
                              "name": "ERC20",
                              "nameLocations": [
                                "10760:5:76"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 34556,
                              "src": "10760:5:76"
                            },
                            "referencedDeclaration": 34556,
                            "src": "10760:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 43091,
                          "nodeType": "ArrayTypeName",
                          "src": "10760:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_storage_ptr",
                            "typeString": "contract ERC20[]"
                          }
                        }
                      },
                      "id": 43094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10756:14:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                        "typeString": "contract ERC20[] memory"
                      }
                    },
                    "src": "10747:23:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                      "typeString": "contract ERC20[] memory"
                    }
                  },
                  "id": 43096,
                  "nodeType": "ExpressionStatement",
                  "src": "10747:23:76"
                },
                {
                  "expression": {
                    "id": 43103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43097,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43086,
                        "src": "10780:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 43099,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10787:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10780:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 43101,
                          "name": "adaptorData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43080,
                          "src": "10800:11:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 43100,
                        "name": "assetOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          43078
                        ],
                        "referencedDeclaration": 43078,
                        "src": "10792:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_contract$_ERC20_$34556_$",
                          "typeString": "function (bytes memory) view returns (contract ERC20)"
                        }
                      },
                      "id": 43102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10792:20:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "10780:32:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 43104,
                  "nodeType": "ExpressionStatement",
                  "src": "10780:32:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 43120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 43113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 43105,
                              "name": "aaveOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42632,
                              "src": "11018:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IAaveOracle_$35791_$",
                                "typeString": "function () pure returns (contract IAaveOracle)"
                              }
                            },
                            "id": 43106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11018:12:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveOracle_$35791",
                              "typeString": "contract IAaveOracle"
                            }
                          },
                          "id": 43107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11031:13:76",
                          "memberName": "BASE_CURRENCY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35790,
                          "src": "11018:26:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 43108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11018:28:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 43111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11058:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 43110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11050:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43109,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11050:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11050:10:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "11018:42:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 43119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 43114,
                              "name": "aaveOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42632,
                              "src": "11064:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IAaveOracle_$35791_$",
                                "typeString": "function () pure returns (contract IAaveOracle)"
                              }
                            },
                            "id": 43115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11064:12:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveOracle_$35791",
                              "typeString": "contract IAaveOracle"
                            }
                          },
                          "id": 43116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11077:18:76",
                          "memberName": "BASE_CURRENCY_UNIT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35785,
                          "src": "11064:31:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 43117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11064:33:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "316538",
                        "id": 43118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11101:3:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000_by_1",
                          "typeString": "int_const 100000000"
                        },
                        "value": "1e8"
                      },
                      "src": "11064:40:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11018:86:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43124,
                  "nodeType": "IfStatement",
                  "src": "11014:157:76",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43121,
                        "name": "AaveV3ATokenAdaptor__OracleUsesDifferentBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42593,
                        "src": "11125:44:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 43122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11125:46:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 43123,
                    "nodeType": "RevertStatement",
                    "src": "11118:53:76"
                  }
                }
              ]
            },
            "baseFunctions": [
              43854
            ],
            "functionSelector": "aeffddde",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetsUsed",
            "nameLocation": "10647:10:76",
            "overrides": {
              "id": 43082,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10696:8:76"
            },
            "parameters": {
              "id": 43081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43080,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "10671:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 43126,
                  "src": "10658:24:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 43079,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10658:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10657:26:76"
            },
            "returnParameters": {
              "id": 43087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43086,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "10729:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 43126,
                  "src": "10714:21:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                    "typeString": "contract ERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 43084,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 43083,
                        "name": "ERC20",
                        "nameLocations": [
                          "10714:5:76"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 34556,
                        "src": "10714:5:76"
                      },
                      "referencedDeclaration": 34556,
                      "src": "10714:5:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "id": 43085,
                    "nodeType": "ArrayTypeName",
                    "src": "10714:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_storage_ptr",
                      "typeString": "contract ERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10713:23:76"
            },
            "scope": 43303,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43136,
            "nodeType": "FunctionDefinition",
            "src": "11262:83:76",
            "nodes": [],
            "body": {
              "id": 43135,
              "nodeType": "Block",
              "src": "11316:29:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 43133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11333:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 43132,
                  "id": 43134,
                  "nodeType": "Return",
                  "src": "11326:12:76"
                }
              ]
            },
            "baseFunctions": [
              43860
            ],
            "documentation": {
              "id": 43127,
              "nodeType": "StructuredDocumentation",
              "src": "11184:73:76",
              "text": " @notice This adaptor returns collateral, and not debt."
            },
            "functionSelector": "89353a09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDebt",
            "nameLocation": "11271:6:76",
            "overrides": {
              "id": 43129,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11292:8:76"
            },
            "parameters": {
              "id": 43128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11277:2:76"
            },
            "returnParameters": {
              "id": 43132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43131,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43136,
                  "src": "11310:4:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43130,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11310:4:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11309:6:76"
            },
            "scope": 43303,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43188,
            "nodeType": "FunctionDefinition",
            "src": "11744:422:76",
            "nodes": [],
            "body": {
              "id": 43187,
              "nodeType": "Block",
              "src": "11821:345:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 43150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43145,
                      "name": "amountToDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43142,
                      "src": "11831:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 43147,
                          "name": "tokenToDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43140,
                          "src": "11863:14:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$34556",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 43148,
                          "name": "amountToDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43142,
                          "src": "11879:15:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$34556",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 43146,
                        "name": "_maxAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43890,
                        "src": "11849:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$34556_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,uint256) view returns (uint256)"
                        }
                      },
                      "id": 43149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11849:46:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11831:64:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 43151,
                  "nodeType": "ExpressionStatement",
                  "src": "11831:64:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 43157,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42620,
                              "src": "11940:4:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                                "typeString": "function () pure returns (contract IPoolV3)"
                              }
                            },
                            "id": 43158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11940:6:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPoolV3_$38640",
                              "typeString": "contract IPoolV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPoolV3_$38640",
                              "typeString": "contract IPoolV3"
                            }
                          ],
                          "id": 43156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11932:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43155,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11932:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11932:15:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 43160,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43142,
                        "src": "11949:15:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 43152,
                        "name": "tokenToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43140,
                        "src": "11905:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 43154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11920:11:76",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35306,
                      "src": "11905:26:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$34556_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 43161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11905:60:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43162,
                  "nodeType": "ExpressionStatement",
                  "src": "11905:60:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43168,
                            "name": "tokenToDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43140,
                            "src": "11997:14:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 43167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11989:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43166,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11989:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11989:23:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 43170,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43142,
                        "src": "12014:15:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43173,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12039:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          ],
                          "id": 43172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12031:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43171,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12031:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12031:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 43175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12046:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43163,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42620,
                          "src": "11975:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                            "typeString": "function () pure returns (contract IPoolV3)"
                          }
                        },
                        "id": 43164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11975:6:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolV3_$38640",
                          "typeString": "contract IPoolV3"
                        }
                      },
                      "id": 43165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11982:6:76",
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38225,
                      "src": "11975:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,address,uint16) external"
                      }
                    },
                    "id": 43176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11975:73:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43177,
                  "nodeType": "ExpressionStatement",
                  "src": "11975:73:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43179,
                        "name": "tokenToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43140,
                        "src": "12127:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 43182,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42620,
                              "src": "12151:4:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                                "typeString": "function () pure returns (contract IPoolV3)"
                              }
                            },
                            "id": 43183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12151:6:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPoolV3_$38640",
                              "typeString": "contract IPoolV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPoolV3_$38640",
                              "typeString": "contract IPoolV3"
                            }
                          ],
                          "id": 43181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12143:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43180,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12143:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12143:15:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 43178,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43918,
                      "src": "12103:23:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 43185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12103:56:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43186,
                  "nodeType": "ExpressionStatement",
                  "src": "12103:56:76"
                }
              ]
            },
            "documentation": {
              "id": 43137,
              "nodeType": "StructuredDocumentation",
              "src": "11467:272:76",
              "text": " @notice Allows strategists to lend assets on Aave.\n @dev Uses `_maxAvailable` helper function, see BaseAdaptor.sol\n @param tokenToDeposit the token to lend on Aave\n @param amountToDeposit the amount of `tokenToDeposit` to lend on Aave."
            },
            "functionSelector": "eeb149e7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToAave",
            "nameLocation": "11753:13:76",
            "parameters": {
              "id": 43143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43140,
                  "mutability": "mutable",
                  "name": "tokenToDeposit",
                  "nameLocation": "11773:14:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 43188,
                  "src": "11767:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$34556",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 43139,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43138,
                      "name": "ERC20",
                      "nameLocations": [
                        "11767:5:76"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34556,
                      "src": "11767:5:76"
                    },
                    "referencedDeclaration": 34556,
                    "src": "11767:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43142,
                  "mutability": "mutable",
                  "name": "amountToDeposit",
                  "nameLocation": "11797:15:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 43188,
                  "src": "11789:23:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11789:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11766:47:76"
            },
            "returnParameters": {
              "id": 43144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11821:0:76"
            },
            "scope": 43303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43231,
            "nodeType": "FunctionDefinition",
            "src": "12400:406:76",
            "nodes": [],
            "body": {
              "id": 43230,
              "nodeType": "Block",
              "src": "12482:324:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43202,
                            "name": "tokenToWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43192,
                            "src": "12516:15:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 43201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12508:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43200,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12508:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12508:24:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 43204,
                        "name": "amountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43194,
                        "src": "12534:16:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43207,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12560:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          ],
                          "id": 43206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12552:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43205,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12552:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12552:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43197,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42620,
                          "src": "12492:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                            "typeString": "function () pure returns (contract IPoolV3)"
                          }
                        },
                        "id": 43198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12492:6:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolV3_$38640",
                          "typeString": "contract IPoolV3"
                        }
                      },
                      "id": 43199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12499:8:76",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38257,
                      "src": "12492:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 43209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12492:74:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 43210,
                  "nodeType": "ExpressionStatement",
                  "src": "12492:74:76"
                },
                {
                  "assignments": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    43212
                  ],
                  "declarations": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 43212,
                      "mutability": "mutable",
                      "name": "healthFactor",
                      "nameLocation": "12657:12:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43230,
                      "src": "12649:20:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43211,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12649:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43221,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43218,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12707:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          ],
                          "id": 43217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12699:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43216,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12699:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12699:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43213,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42620,
                          "src": "12673:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                            "typeString": "function () pure returns (contract IPoolV3)"
                          }
                        },
                        "id": 43214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12673:6:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolV3_$38640",
                          "typeString": "contract IPoolV3"
                        }
                      },
                      "id": 43215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12680:18:76",
                      "memberName": "getUserAccountData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38410,
                      "src": "12673:25:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 43220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12673:40:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12638:75:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 43225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 43222,
                      "name": "healthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43212,
                      "src": "12727:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43223,
                        "name": "HFMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42641,
                        "src": "12742:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                          "typeString": "function () pure returns (uint256)"
                        }
                      },
                      "id": 43224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12742:7:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12727:22:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43229,
                  "nodeType": "IfStatement",
                  "src": "12723:76:76",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43226,
                        "name": "AaveV3ATokenAdaptor__HealthFactorTooLow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42590,
                        "src": "12758:39:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 43227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12758:41:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 43228,
                    "nodeType": "RevertStatement",
                    "src": "12751:48:76"
                  }
                }
              ]
            },
            "documentation": {
              "id": 43189,
              "nodeType": "StructuredDocumentation",
              "src": "12172:223:76",
              "text": " @notice Allows strategists to withdraw assets from Aave.\n @param tokenToWithdraw the token to withdraw from Aave.\n @param amountToWithdraw the amount of `tokenToWithdraw` to withdraw from Aave"
            },
            "functionSelector": "487ede04",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFromAave",
            "nameLocation": "12409:16:76",
            "parameters": {
              "id": 43195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43192,
                  "mutability": "mutable",
                  "name": "tokenToWithdraw",
                  "nameLocation": "12432:15:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 43231,
                  "src": "12426:21:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$34556",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 43191,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43190,
                      "name": "ERC20",
                      "nameLocations": [
                        "12426:5:76"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34556,
                      "src": "12426:5:76"
                    },
                    "referencedDeclaration": 34556,
                    "src": "12426:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43194,
                  "mutability": "mutable",
                  "name": "amountToWithdraw",
                  "nameLocation": "12457:16:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 43231,
                  "src": "12449:24:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12449:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12425:49:76"
            },
            "returnParameters": {
              "id": 43196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12482:0:76"
            },
            "scope": 43303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43270,
            "nodeType": "FunctionDefinition",
            "src": "12899:407:76",
            "nodes": [],
            "body": {
              "id": 43269,
              "nodeType": "Block",
              "src": "12987:319:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43245,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43235,
                            "src": "13042:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 43244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13034:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43243,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13034:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13034:14:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 43247,
                        "name": "useAsCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43237,
                        "src": "13050:15:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43240,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42620,
                          "src": "12997:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                            "typeString": "function () pure returns (contract IPoolV3)"
                          }
                        },
                        "id": 43241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12997:6:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolV3_$38640",
                          "typeString": "contract IPoolV3"
                        }
                      },
                      "id": 43242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13004:29:76",
                      "memberName": "setUserUseReserveAsCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38343,
                      "src": "12997:36:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 43248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12997:69:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43249,
                  "nodeType": "ExpressionStatement",
                  "src": "12997:69:76"
                },
                {
                  "assignments": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    43251
                  ],
                  "declarations": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 43251,
                      "mutability": "mutable",
                      "name": "healthFactor",
                      "nameLocation": "13157:12:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43269,
                      "src": "13149:20:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43250,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13149:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43260,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43257,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13207:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          ],
                          "id": 43256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13199:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43255,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13199:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13199:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43252,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42620,
                          "src": "13173:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                            "typeString": "function () pure returns (contract IPoolV3)"
                          }
                        },
                        "id": 43253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13173:6:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolV3_$38640",
                          "typeString": "contract IPoolV3"
                        }
                      },
                      "id": 43254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13180:18:76",
                      "memberName": "getUserAccountData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38410,
                      "src": "13173:25:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 43259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13173:40:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13138:75:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 43264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 43261,
                      "name": "healthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43251,
                      "src": "13227:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43262,
                        "name": "HFMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42641,
                        "src": "13242:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                          "typeString": "function () pure returns (uint256)"
                        }
                      },
                      "id": 43263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13242:7:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13227:22:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43268,
                  "nodeType": "IfStatement",
                  "src": "13223:76:76",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43265,
                        "name": "AaveV3ATokenAdaptor__HealthFactorTooLow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42590,
                        "src": "13258:39:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 43266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13258:41:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 43267,
                    "nodeType": "RevertStatement",
                    "src": "13251:48:76"
                  }
                }
              ]
            },
            "documentation": {
              "id": 43232,
              "nodeType": "StructuredDocumentation",
              "src": "12812:82:76",
              "text": " @notice Allows strategists to adjust an asset's isolation mode."
            },
            "functionSelector": "23bf298f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "adjustIsolationModeAssetAsCollateral",
            "nameLocation": "12908:36:76",
            "parameters": {
              "id": 43238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43235,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "12951:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 43270,
                  "src": "12945:11:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$34556",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 43234,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43233,
                      "name": "ERC20",
                      "nameLocations": [
                        "12945:5:76"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34556,
                      "src": "12945:5:76"
                    },
                    "referencedDeclaration": 34556,
                    "src": "12945:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43237,
                  "mutability": "mutable",
                  "name": "useAsCollateral",
                  "nameLocation": "12963:15:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 43270,
                  "src": "12958:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43236,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12958:4:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12944:35:76"
            },
            "returnParameters": {
              "id": 43239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12987:0:76"
            },
            "scope": 43303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43302,
            "nodeType": "FunctionDefinition",
            "src": "13389:327:76",
            "nodes": [],
            "body": {
              "id": 43301,
              "nodeType": "Block",
              "src": "13435:281:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43279,
                        "name": "categoryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43273,
                        "src": "13465:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43276,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42620,
                          "src": "13445:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                            "typeString": "function () pure returns (contract IPoolV3)"
                          }
                        },
                        "id": 43277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13445:6:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolV3_$38640",
                          "typeString": "contract IPoolV3"
                        }
                      },
                      "id": 43278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13452:12:76",
                      "memberName": "setUserEMode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38566,
                      "src": "13445:19:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8) external"
                      }
                    },
                    "id": 43280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13445:31:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43281,
                  "nodeType": "ExpressionStatement",
                  "src": "13445:31:76"
                },
                {
                  "assignments": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    43283
                  ],
                  "declarations": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 43283,
                      "mutability": "mutable",
                      "name": "healthFactor",
                      "nameLocation": "13567:12:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 43301,
                      "src": "13559:20:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43282,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13559:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43292,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43289,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13617:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveV3ATokenAdaptor_$43303",
                              "typeString": "contract AaveV3ATokenAdaptor"
                            }
                          ],
                          "id": 43288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13609:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43287,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13609:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13609:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43284,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42620,
                          "src": "13583:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPoolV3_$38640_$",
                            "typeString": "function () pure returns (contract IPoolV3)"
                          }
                        },
                        "id": 43285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13583:6:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolV3_$38640",
                          "typeString": "contract IPoolV3"
                        }
                      },
                      "id": 43286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13590:18:76",
                      "memberName": "getUserAccountData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38410,
                      "src": "13583:25:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 43291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13583:40:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13548:75:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 43296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 43293,
                      "name": "healthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43283,
                      "src": "13637:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43294,
                        "name": "HFMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42641,
                        "src": "13652:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                          "typeString": "function () pure returns (uint256)"
                        }
                      },
                      "id": 43295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13652:7:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13637:22:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43300,
                  "nodeType": "IfStatement",
                  "src": "13633:76:76",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43297,
                        "name": "AaveV3ATokenAdaptor__HealthFactorTooLow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42590,
                        "src": "13668:39:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 43298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13668:41:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 43299,
                    "nodeType": "RevertStatement",
                    "src": "13661:48:76"
                  }
                }
              ]
            },
            "documentation": {
              "id": 43271,
              "nodeType": "StructuredDocumentation",
              "src": "13312:72:76",
              "text": " @notice Allows strategists to enter different EModes."
            },
            "functionSelector": "4ac839f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeEMode",
            "nameLocation": "13398:11:76",
            "parameters": {
              "id": 43274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43273,
                  "mutability": "mutable",
                  "name": "categoryId",
                  "nameLocation": "13416:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 43302,
                  "src": "13410:16:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 43272,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13410:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13409:18:76"
            },
            "returnParameters": {
              "id": 43275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13435:0:76"
            },
            "scope": 43303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 42579,
              "name": "BaseAdaptor",
              "nameLocations": [
                "548:11:76"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43962,
              "src": "548:11:76"
            },
            "id": 42580,
            "nodeType": "InheritanceSpecifier",
            "src": "548:11:76"
          }
        ],
        "canonicalName": "AaveV3ATokenAdaptor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 42578,
          "nodeType": "StructuredDocumentation",
          "src": "387:128:76",
          "text": " @title Aave aToken Adaptor\n @notice Allows Cellars to interact with Aave aToken positions.\n @author crispymangoes"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43303,
          43962
        ],
        "name": "AaveV3ATokenAdaptor",
        "nameLocation": "525:19:76",
        "scope": 43304,
        "usedErrors": [
          42590,
          42593,
          43724,
          43727,
          43730,
          43733,
          43738
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 76
}