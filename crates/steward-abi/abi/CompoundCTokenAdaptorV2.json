{
  "abi": [
    {
      "inputs": [],
      "name": "BaseAdaptor__ExternalReceiverBlocked",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "BaseAdaptor__PricingNotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__Slippage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserDepositsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserWithdrawsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "market",
          "type": "address"
        }
      ],
      "name": "CTokenAdaptor__MarketNotListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "errorCode",
          "type": "uint256"
        }
      ],
      "name": "CTokenAdaptor__NonZeroCompoundErrorCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetOf",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetsUsed",
      "outputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimComp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract CErc20",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToDeposit",
          "type": "uint256"
        }
      ],
      "name": "depositToCompound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDebt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "revokeApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippage",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract CErc20",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToWithdraw",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromCompound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "withdrawableFrom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611231806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063ad8da96b1161008c578063c9111bd711610066578063c9111bd714610184578063d3bfe76a14610197578063e170a9bf146101aa578063fa50e5d2146101d557600080fd5b8063ad8da96b1461013e578063aeffddde14610151578063c88da5f31461017157600080fd5b80631bd85bdb146100d45780633e032a3b146100de57806369445c31146100f357806378415365146101065780637998a1c41461012757806389353a091461012f575b600080fd5b6100dc6101e8565b005b60405161232881526020015b60405180910390f35b6100dc610101366004610ef6565b61025a565b610119610114366004610f63565b61039e565b6040519081526020016100ea565b6101196104a2565b604051600081526020016100ea565b6100dc61014c366004610fad565b610500565b61016461015f366004610f63565b61062b565b6040516100ea9190610fd9565b6100dc61017f366004610fad565b6106cc565b6100dc610192366004611026565b61084d565b6100dc6101a53660046110a6565b610980565b6101bd6101b8366004610f63565b610999565b6040516001600160a01b0390911681526020016100ea565b6101196101e33660046110df565b610a1b565b733d9819210a31b4961b30ef54be2aed79b9c9cd3b6040516374d7814960e11b81523060048201526001600160a01b03919091169063e9af029290602401600060405180830381600087803b15801561024057600080fd5b505af1158015610254573d6000803e3d6000fd5b50505050565b6000828060200190518101906102709190611143565b905061027b81610aee565b6000816001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102df9190611143565b90506102f56001600160a01b0382168387610b9e565b60405163140e25ad60e31b8152600481018690526000906001600160a01b0384169063a0712d68906024016020604051808303816000875af115801561033f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103639190611160565b9050801561038c57604051636bb7836560e11b8152600481018290526024015b60405180910390fd5b6103968284610c15565b505050505050565b600080828060200190518101906103b59190611143565b6040516370a0823160e01b81523360048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104239190611160565b905061049a826001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048a9190611160565b8290670de0b6b3a7640000610ca4565b949350505050565b60006040516020016104e5906020808252601d908201527f436f6d706f756e642063546f6b656e2041646170746f72205620312e30000000604082015260600190565b60405160208183030381529060405280519060200120905090565b61050982610aee565b6000826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056d9190611143565b90506105798183610cc3565b915061058f6001600160a01b0382168484610b9e565b60405163140e25ad60e31b8152600481018390526000906001600160a01b0385169063a0712d68906024016020604051808303816000875af11580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd9190611160565b9050801561062157604051636bb7836560e11b815260048101829052602401610383565b6102548285610c15565b604080516002808252606080830184529260208301908036833701905050905061065482610999565b8160008151811061066757610667611179565b6001600160a01b039092166020928302919091019091015273c00e94cb662c3520282e6f5717214004a7f26888816001815181106106a7576106a7611179565b60200260200101906001600160a01b031690816001600160a01b031681525050919050565b6106d582610aee565b600060001982036107b8576040516370a0823160e01b81523060048201526001600160a01b0384169063db006a759082906370a0823190602401602060405180830381865afa15801561072c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107509190611160565b6040518263ffffffff1660e01b815260040161076e91815260200190565b6020604051808303816000875af115801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b19190611160565b9050610826565b60405163852a12e360e01b8152600481018390526001600160a01b0384169063852a12e3906024016020604051808303816000875af11580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108239190611160565b90505b801561084857604051636bb7836560e11b815260048101829052602401610383565b505050565b61085683610d44565b60008280602001905181019061086c9190611143565b905061087781610aee565b60405163852a12e360e01b8152600481018690526000906001600160a01b0383169063852a12e3906024016020604051808303816000875af11580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e59190611160565b9050801561090957604051636bb7836560e11b815260048101829052602401610383565b6103968587846001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561094c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109709190611143565b6001600160a01b03169190610ddb565b6109956001600160a01b038316826000610b9e565b5050565b600080828060200190518101906109b09190611143565b9050806001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a149190611143565b9392505050565b60008083806020019051810190610a329190611143565b6040516370a0823160e01b81523360048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa09190611160565b9050610ae3826001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610466573d6000803e3d6000fd5b925050505b92915050565b6000733d9819210a31b4961b30ef54be2aed79b9c9cd3b604051638e8f294b60e01b81526001600160a01b0384811660048301529190911690638e8f294b90602401606060405180830381865afa158015610b4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7191906111a4565b505090508061099557604051630ceedc9d60e01b81526001600160a01b0383166004820152602401610383565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806102545760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b6044820152606401610383565b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa158015610c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c899190611160565b1115610995576109956001600160a01b038316826000610b9e565b828202811515841585830485141716610cbc57600080fd5b0492915050565b60006000198203610d3d576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d369190611160565b9050610ae8565b5080610ae8565b6001600160a01b0381163014801590610dba5750306001600160a01b0316634c4602da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dba91906111e0565b15610dd8576040516307de9b5160e21b815260040160405180910390fd5b50565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806102545760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610383565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e7a57600080fd5b813567ffffffffffffffff80821115610e9557610e95610e53565b604051601f8301601f19908116603f01168101908282118183101715610ebd57610ebd610e53565b81604052838152866020858801011115610ed657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610f0b57600080fd5b83359250602084013567ffffffffffffffff80821115610f2a57600080fd5b610f3687838801610e69565b93506040860135915080821115610f4c57600080fd5b50610f5986828701610e69565b9150509250925092565b600060208284031215610f7557600080fd5b813567ffffffffffffffff811115610f8c57600080fd5b61049a84828501610e69565b6001600160a01b0381168114610dd857600080fd5b60008060408385031215610fc057600080fd5b8235610fcb81610f98565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561101a5783516001600160a01b031683529284019291840191600101610ff5565b50909695505050505050565b6000806000806080858703121561103c57600080fd5b84359350602085013561104e81610f98565b9250604085013567ffffffffffffffff8082111561106b57600080fd5b61107788838901610e69565b9350606087013591508082111561108d57600080fd5b5061109a87828801610e69565b91505092959194509250565b600080604083850312156110b957600080fd5b82356110c481610f98565b915060208301356110d481610f98565b809150509250929050565b600080604083850312156110f257600080fd5b823567ffffffffffffffff8082111561110a57600080fd5b61111686838701610e69565b9350602085013591508082111561112c57600080fd5b5061113985828601610e69565b9150509250929050565b60006020828403121561115557600080fd5b8151610a1481610f98565b60006020828403121561117257600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b8051801515811461119f57600080fd5b919050565b6000806000606084860312156111b957600080fd5b6111c28461118f565b9250602084015191506111d76040850161118f565b90509250925092565b6000602082840312156111f257600080fd5b610a148261118f56fea264697066735822122069a9b3ea57d98ad1eb26f7a9768468f123cef4a53cdccfee29e6bf385447fb4b64736f6c63430008100033",
    "sourceMap": "406:9902:79:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063ad8da96b1161008c578063c9111bd711610066578063c9111bd714610184578063d3bfe76a14610197578063e170a9bf146101aa578063fa50e5d2146101d557600080fd5b8063ad8da96b1461013e578063aeffddde14610151578063c88da5f31461017157600080fd5b80631bd85bdb146100d45780633e032a3b146100de57806369445c31146100f357806378415365146101065780637998a1c41461012757806389353a091461012f575b600080fd5b6100dc6101e8565b005b60405161232881526020015b60405180910390f35b6100dc610101366004610ef6565b61025a565b610119610114366004610f63565b61039e565b6040519081526020016100ea565b6101196104a2565b604051600081526020016100ea565b6100dc61014c366004610fad565b610500565b61016461015f366004610f63565b61062b565b6040516100ea9190610fd9565b6100dc61017f366004610fad565b6106cc565b6100dc610192366004611026565b61084d565b6100dc6101a53660046110a6565b610980565b6101bd6101b8366004610f63565b610999565b6040516001600160a01b0390911681526020016100ea565b6101196101e33660046110df565b610a1b565b733d9819210a31b4961b30ef54be2aed79b9c9cd3b6040516374d7814960e11b81523060048201526001600160a01b03919091169063e9af029290602401600060405180830381600087803b15801561024057600080fd5b505af1158015610254573d6000803e3d6000fd5b50505050565b6000828060200190518101906102709190611143565b905061027b81610aee565b6000816001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102df9190611143565b90506102f56001600160a01b0382168387610b9e565b60405163140e25ad60e31b8152600481018690526000906001600160a01b0384169063a0712d68906024016020604051808303816000875af115801561033f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103639190611160565b9050801561038c57604051636bb7836560e11b8152600481018290526024015b60405180910390fd5b6103968284610c15565b505050505050565b600080828060200190518101906103b59190611143565b6040516370a0823160e01b81523360048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104239190611160565b905061049a826001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048a9190611160565b8290670de0b6b3a7640000610ca4565b949350505050565b60006040516020016104e5906020808252601d908201527f436f6d706f756e642063546f6b656e2041646170746f72205620312e30000000604082015260600190565b60405160208183030381529060405280519060200120905090565b61050982610aee565b6000826001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056d9190611143565b90506105798183610cc3565b915061058f6001600160a01b0382168484610b9e565b60405163140e25ad60e31b8152600481018390526000906001600160a01b0385169063a0712d68906024016020604051808303816000875af11580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd9190611160565b9050801561062157604051636bb7836560e11b815260048101829052602401610383565b6102548285610c15565b604080516002808252606080830184529260208301908036833701905050905061065482610999565b8160008151811061066757610667611179565b6001600160a01b039092166020928302919091019091015273c00e94cb662c3520282e6f5717214004a7f26888816001815181106106a7576106a7611179565b60200260200101906001600160a01b031690816001600160a01b031681525050919050565b6106d582610aee565b600060001982036107b8576040516370a0823160e01b81523060048201526001600160a01b0384169063db006a759082906370a0823190602401602060405180830381865afa15801561072c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107509190611160565b6040518263ffffffff1660e01b815260040161076e91815260200190565b6020604051808303816000875af115801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b19190611160565b9050610826565b60405163852a12e360e01b8152600481018390526001600160a01b0384169063852a12e3906024016020604051808303816000875af11580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108239190611160565b90505b801561084857604051636bb7836560e11b815260048101829052602401610383565b505050565b61085683610d44565b60008280602001905181019061086c9190611143565b905061087781610aee565b60405163852a12e360e01b8152600481018690526000906001600160a01b0383169063852a12e3906024016020604051808303816000875af11580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e59190611160565b9050801561090957604051636bb7836560e11b815260048101829052602401610383565b6103968587846001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561094c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109709190611143565b6001600160a01b03169190610ddb565b6109956001600160a01b038316826000610b9e565b5050565b600080828060200190518101906109b09190611143565b9050806001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a149190611143565b9392505050565b60008083806020019051810190610a329190611143565b6040516370a0823160e01b81523360048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa09190611160565b9050610ae3826001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610466573d6000803e3d6000fd5b925050505b92915050565b6000733d9819210a31b4961b30ef54be2aed79b9c9cd3b604051638e8f294b60e01b81526001600160a01b0384811660048301529190911690638e8f294b90602401606060405180830381865afa158015610b4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7191906111a4565b505090508061099557604051630ceedc9d60e01b81526001600160a01b0383166004820152602401610383565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806102545760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b6044820152606401610383565b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa158015610c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c899190611160565b1115610995576109956001600160a01b038316826000610b9e565b828202811515841585830485141716610cbc57600080fd5b0492915050565b60006000198203610d3d576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d369190611160565b9050610ae8565b5080610ae8565b6001600160a01b0381163014801590610dba5750306001600160a01b0316634c4602da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dba91906111e0565b15610dd8576040516307de9b5160e21b815260040160405180910390fd5b50565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806102545760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610383565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e7a57600080fd5b813567ffffffffffffffff80821115610e9557610e95610e53565b604051601f8301601f19908116603f01168101908282118183101715610ebd57610ebd610e53565b81604052838152866020858801011115610ed657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610f0b57600080fd5b83359250602084013567ffffffffffffffff80821115610f2a57600080fd5b610f3687838801610e69565b93506040860135915080821115610f4c57600080fd5b50610f5986828701610e69565b9150509250925092565b600060208284031215610f7557600080fd5b813567ffffffffffffffff811115610f8c57600080fd5b61049a84828501610e69565b6001600160a01b0381168114610dd857600080fd5b60008060408385031215610fc057600080fd5b8235610fcb81610f98565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561101a5783516001600160a01b031683529284019291840191600101610ff5565b50909695505050505050565b6000806000806080858703121561103c57600080fd5b84359350602085013561104e81610f98565b9250604085013567ffffffffffffffff8082111561106b57600080fd5b61107788838901610e69565b9350606087013591508082111561108d57600080fd5b5061109a87828801610e69565b91505092959194509250565b600080604083850312156110b957600080fd5b82356110c481610f98565b915060208301356110d481610f98565b809150509250929050565b600080604083850312156110f257600080fd5b823567ffffffffffffffff8082111561110a57600080fd5b61111686838701610e69565b9350602085013591508082111561112c57600080fd5b5061113985828601610e69565b9150509250929050565b60006020828403121561115557600080fd5b8151610a1481610f98565b60006020828403121561117257600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b8051801515811461119f57600080fd5b919050565b6000806000606084860312156111b957600080fd5b6111c28461118f565b9250602084015191506111d76040850161118f565b90509250925092565b6000602082840312156111f257600080fd5b610a148261118f56fea264697066735822122069a9b3ea57d98ad1eb26f7a9768468f123cef4a53cdccfee29e6bf385447fb4b64736f6c63430008100033",
    "sourceMap": "406:9902:79:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8973:83;;;:::i;:::-;;2203:78:78;;;2269:5;158:42:98;;146:2;131:18;2203:78:78;;;;;;;;2992:611:79;;;;;;:::i;:::-;;:::i;5970:288::-;;;;;;:::i;:::-;;:::i;:::-;;;2149:25:98;;;2137:2;2122:18;5970:288:79;2003:177:98;2008:139:79;;;:::i;7105:83::-;;;7153:4;2507:41:98;;2495:2;2480:18;7105:83:79;2367:187:98;7587:618:79;;;;;;:::i;:::-;;:::i;6812:209::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8438:456::-;;;;;;:::i;:::-;;:::i;4236:632::-;;;;;;:::i;:::-;;:::i;8378:107:78:-;;;;;;:::i;:::-;;:::i;6342:189:79:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5084:32:98;;;5066:51;;5054:2;5039:18;6342:189:79;4905:218:98;5143:309:79;;;;;;:::i;:::-;;:::i;8973:83::-;2330:42;9011:38;;-1:-1:-1;;;9011:38:79;;9043:4;9011:38;;;5066:51:98;-1:-1:-1;;;;;9011:23:79;;;;;;;5039:18:98;;9011:38:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8973:83::o;2992:611::-;3130:13;3157:11;3146:33;;;;;;;;;;;;:::i;:::-;3130:49;;3189:37;3218:6;3189:20;:37::i;:::-;3236:11;3256:6;-1:-1:-1;;;;;3256:17:79;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3236:40;-1:-1:-1;3286:42:79;-1:-1:-1;;;;;3286:17:79;;3312:6;3321;3286:17;:42::i;:::-;3358:19;;-1:-1:-1;;;3358:19:79;;;;;2149:25:98;;;3338:17:79;;-1:-1:-1;;;;;3358:11:79;;;;;2122:18:98;;3358:19:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3338:39;-1:-1:-1;3421:14:79;;3417:77;;3444:50;;-1:-1:-1;;;3444:50:79;;;;;2149:25:98;;;2122:18;;3444:50:79;;;;;;;;3417:77;3549:47;3573:5;3588:6;3549:23;:47::i;:::-;3081:522;;;2992:611;;;:::o;5970:288::-;6045:7;6064:13;6091:11;6080:33;;;;;;;;;;;;:::i;:::-;6147:28;;-1:-1:-1;;;6147:28:79;;6164:10;6147:28;;;5066:51:98;6064:49:79;;-1:-1:-1;6123:21:79;;-1:-1:-1;;;;;6147:16:79;;;;;5039:18:98;;6147:28:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6123:52;;6192:59;6217:6;-1:-1:-1;;;;;6217:25:79;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6192:13;;6246:4;6192:24;:59::i;:::-;6185:66;5970:288;-1:-1:-1;;;;5970:288:79:o;2008:139::-;2060:7;2096:43;;;;;;6815:2:98;6797:21;;;6854:2;6834:18;;;6827:30;6893:31;6888:2;6873:18;;6866:59;6957:2;6942:18;;6613:353;2096:43:79;;;;;;;;;;;;;2086:54;;;;;;2079:61;;2008:139;:::o;7587:618::-;7671:37;7700:6;7671:20;:37::i;:::-;7719:20;7748:6;-1:-1:-1;;;;;7748:17:79;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7719:49;;7796:46;7810:14;7826:15;7796:13;:46::i;:::-;7778:64;-1:-1:-1;7852:60:79;-1:-1:-1;;;;;7852:26:79;;7887:6;7778:64;7852:26;:60::i;:::-;7942:28;;-1:-1:-1;;;7942:28:79;;;;;2149:25:98;;;7922:17:79;;-1:-1:-1;;;;;7942:11:79;;;;;2122:18:98;;7942:28:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7922:48;-1:-1:-1;8014:14:79;;8010:77;;8037:50;;-1:-1:-1;;;8037:50:79;;;;;2149:25:98;;;2122:18;;8037:50:79;2003:177:98;8010:77:79;8142:56;8166:14;8190:6;8142:23;:56::i;6812:209::-;6930:14;;;6942:1;6930:14;;;6888:21;6930:14;;;;;6888:21;6930:14;;;;;;;;;;-1:-1:-1;6930:14:79;6921:23;;6966:20;6974:11;6966:7;:20::i;:::-;6954:6;6961:1;6954:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6954:32:79;;;:9;;;;;;;;;;;:32;2525:42;6996:6;7003:1;6996:9;;;;;;;;:::i;:::-;;;;;;:18;-1:-1:-1;;;;;6996:18:79;;;-1:-1:-1;;;;;6996:18:79;;;;;6812:209;;;:::o;8438:456::-;8526:37;8555:6;8526:20;:37::i;:::-;8574:17;-1:-1:-1;;8605:16:79;:37;8601:169;;8670:31;;-1:-1:-1;;;8670:31:79;;8695:4;8670:31;;;5066:51:98;-1:-1:-1;;;;;8656:13:79;;;;;;;8670:16;;5039:18:98;;8670:31:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8656:46;;;;;;;;;;;;;2149:25:98;;2137:2;2122:18;;2003:177;8656:46:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8644:58;;8601:169;;;8729:41;;-1:-1:-1;;;8729:41:79;;;;;2149:25:98;;;-1:-1:-1;;;;;8729:23:79;;;;;2122:18:98;;8729:41:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8717:53;;8601:169;8814:14;;8810:77;;8837:50;;-1:-1:-1;;;8837:50:79;;;;;2149:25:98;;;2122:18;;8837:50:79;2003:177:98;8810:77:79;8516:378;8438:456;;:::o;4236:632::-;4394:32;4417:8;4394:22;:32::i;:::-;4479:13;4506:11;4495:33;;;;;;;;;;;;:::i;:::-;4479:49;;4538:37;4567:6;4538:20;:37::i;:::-;4605:31;;-1:-1:-1;;;4605:31:79;;;;;2149:25:98;;;4585:17:79;;-1:-1:-1;;;;;4605:23:79;;;;;2122:18:98;;4605:31:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4585:51;-1:-1:-1;4680:14:79;;4676:77;;4703:50;;-1:-1:-1;;;4703:50:79;;;;;2149:25:98;;;2122:18;;4703:50:79;2003:177:98;4676:77:79;4804:57;4844:8;4854:6;4810;-1:-1:-1;;;;;4810:17:79;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4804:39:79;;:57;:39;:57::i;8378:107:78:-;8449:29;-1:-1:-1;;;;;8449:17:78;;8467:7;8476:1;8449:17;:29::i;:::-;8378:107;;:::o;6342:189:79:-;6415:5;6432:13;6459:11;6448:33;;;;;;;;;;;;:::i;:::-;6432:49;;6504:6;-1:-1:-1;;;;;6504:17:79;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6491:33;6342:189;-1:-1:-1;;;6342:189:79:o;5143:309::-;5239:7;5258:13;5285:11;5274:33;;;;;;;;;;;;:::i;:::-;5341:28;;-1:-1:-1;;;5341:28:79;;5358:10;5341:28;;;5066:51:98;5258:49:79;;-1:-1:-1;5317:21:79;;-1:-1:-1;;;;;5341:16:79;;;;;5039:18:98;;5341:28:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5317:52;;5386:59;5411:6;-1:-1:-1;;;;;5411:25:79;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5386:59;5379:66;;;;5143:309;;;;;:::o;10110:196::-;10180:13;2330:42;10201:28;;-1:-1:-1;;;10201:28:79;;-1:-1:-1;;;;;5084:32:98;;;10201:28:79;;;5066:51:98;10201:21:79;;;;;;;5039:18:98;;10201:28:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10179:50;;;;10245:8;10240:59;;10262:37;;-1:-1:-1;;;10262:37:79;;-1:-1:-1;;;;;5084:32:98;;10262:37:79;;;5066:51:98;5039:18;;10262:37:79;4905:218:98;4327:1454:48;4438:12;4565:4;4559:11;-1:-1:-1;;;4688:17:48;4681:93;4821:2;4817:1;4798:17;4794:25;4787:37;4901:6;4896:2;4877:17;4873:26;4866:42;5703:2;5700:1;5696:2;5677:17;5674:1;5667:5;5660;5655:51;5224:16;5217:24;5211:2;5193:16;5190:24;5186:1;5182;5176:8;5173:15;5169:46;5166:76;4966:754;4955:765;;;5748:7;5740:34;;;;-1:-1:-1;;;5740:34:48;;7821:2:98;5740:34:48;;;7803:21:98;7860:2;7840:18;;;7833:30;-1:-1:-1;;;7879:18:98;;;7872:44;7933:18;;5740:34:48;7619:338:98;7665:167:78;7751:39;;-1:-1:-1;;;7751:39:78;;7775:4;7751:39;;;8174:34:98;-1:-1:-1;;;;;8244:15:98;;;8224:18;;;8217:43;7793:1:78;;7751:15;;;;;;8109:18:98;;7751:39:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;7747:78;;;7796:29;-1:-1:-1;;;;;7796:17:78;;7814:7;7823:1;7796:17;:29::i;1357:535:96:-;1563:9;;;1694:19;;1687:27;1719:9;;1733;;;1730:16;;1716:31;1683:65;1673:121;;1778:1;1775;1768:12;1673:121;1857:19;;1357:535;-1:-1:-1;;1357:535:96:o;7323:207:78:-;7406:7;-1:-1:-1;;7429:6:78;:27;7425:98;;7465:30;;-1:-1:-1;;;7465:30:78;;7489:4;7465:30;;;5066:51:98;-1:-1:-1;;;;;7465:15:78;;;;;5039:18:98;;7465:30:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7458:37;;;;7425:98;-1:-1:-1;7517:6:78;7510:13;;7932:218;-1:-1:-1;;;;;8010:25:78;;8030:4;8010:25;;;;:74;;;8054:4;-1:-1:-1;;;;;8039:43:78;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8006:137;;;8105:38;;-1:-1:-1;;;8105:38:78;;;;;;;;;;;8006:137;7932:218;:::o;2865:1456:48:-;2977:12;3104:4;3098:11;-1:-1:-1;;;3227:17:48;3220:93;3360:2;3356:1;3337:17;3333:25;3326:37;3440:6;3435:2;3416:17;3412:26;3405:42;4242:2;4239:1;4235:2;4216:17;4213:1;4206:5;4199;4194:51;3763:16;3756:24;3750:2;3732:16;3729:24;3725:1;3721;3715:8;3712:15;3708:46;3705:76;3505:754;3494:765;;;4287:7;4279:35;;;;-1:-1:-1;;;4279:35:48;;8680:2:98;4279:35:48;;;8662:21:98;8719:2;8699:18;;;8692:30;-1:-1:-1;;;8738:18:98;;;8731:45;8793:18;;4279:35:48;8478:339:98;211:127;272:10;267:3;263:20;260:1;253:31;303:4;300:1;293:15;327:4;324:1;317:15;343:718;385:5;438:3;431:4;423:6;419:17;415:27;405:55;;456:1;453;446:12;405:55;492:6;479:20;518:18;555:2;551;548:10;545:36;;;561:18;;:::i;:::-;636:2;630:9;604:2;690:13;;-1:-1:-1;;686:22:98;;;710:2;682:31;678:40;666:53;;;734:18;;;754:22;;;731:46;728:72;;;780:18;;:::i;:::-;820:10;816:2;809:22;855:2;847:6;840:18;901:3;894:4;889:2;881:6;877:15;873:26;870:35;867:55;;;918:1;915;908:12;867:55;982:2;975:4;967:6;963:17;956:4;948:6;944:17;931:54;1029:1;1022:4;1017:2;1009:6;1005:15;1001:26;994:37;1049:6;1040:15;;;;;;343:718;;;;:::o;1066:607::-;1161:6;1169;1177;1230:2;1218:9;1209:7;1205:23;1201:32;1198:52;;;1246:1;1243;1236:12;1198:52;1282:9;1269:23;1259:33;;1343:2;1332:9;1328:18;1315:32;1366:18;1407:2;1399:6;1396:14;1393:34;;;1423:1;1420;1413:12;1393:34;1446:49;1487:7;1478:6;1467:9;1463:22;1446:49;:::i;:::-;1436:59;;1548:2;1537:9;1533:18;1520:32;1504:48;;1577:2;1567:8;1564:16;1561:36;;;1593:1;1590;1583:12;1561:36;;1616:51;1659:7;1648:8;1637:9;1633:24;1616:51;:::i;:::-;1606:61;;;1066:607;;;;;:::o;1678:320::-;1746:6;1799:2;1787:9;1778:7;1774:23;1770:32;1767:52;;;1815:1;1812;1805:12;1767:52;1855:9;1842:23;1888:18;1880:6;1877:30;1874:50;;;1920:1;1917;1910:12;1874:50;1943:49;1984:7;1975:6;1964:9;1960:22;1943:49;:::i;2559:139::-;-1:-1:-1;;;;;2642:31:98;;2632:42;;2622:70;;2688:1;2685;2678:12;2703:339;2787:6;2795;2848:2;2836:9;2827:7;2823:23;2819:32;2816:52;;;2864:1;2861;2854:12;2816:52;2903:9;2890:23;2922:39;2955:5;2922:39;:::i;:::-;2980:5;3032:2;3017:18;;;;3004:32;;-1:-1:-1;;;2703:339:98:o;3047:673::-;3233:2;3285:21;;;3355:13;;3258:18;;;3377:22;;;3204:4;;3233:2;3456:15;;;;3430:2;3415:18;;;3204:4;3499:195;3513:6;3510:1;3507:13;3499:195;;;3578:13;;-1:-1:-1;;;;;3574:39:98;3562:52;;3669:15;;;;3634:12;;;;3610:1;3528:9;3499:195;;;-1:-1:-1;3711:3:98;;3047:673;-1:-1:-1;;;;;;3047:673:98:o;3725:751::-;3829:6;3837;3845;3853;3906:3;3894:9;3885:7;3881:23;3877:33;3874:53;;;3923:1;3920;3913:12;3874:53;3959:9;3946:23;3936:33;;4019:2;4008:9;4004:18;3991:32;4032:39;4065:5;4032:39;:::i;:::-;4090:5;-1:-1:-1;4146:2:98;4131:18;;4118:32;4169:18;4199:14;;;4196:34;;;4226:1;4223;4216:12;4196:34;4249:49;4290:7;4281:6;4270:9;4266:22;4249:49;:::i;:::-;4239:59;;4351:2;4340:9;4336:18;4323:32;4307:48;;4380:2;4370:8;4367:16;4364:36;;;4396:1;4393;4386:12;4364:36;;4419:51;4462:7;4451:8;4440:9;4436:24;4419:51;:::i;:::-;4409:61;;;3725:751;;;;;;;:::o;4481:419::-;4564:6;4572;4625:2;4613:9;4604:7;4600:23;4596:32;4593:52;;;4641:1;4638;4631:12;4593:52;4680:9;4667:23;4699:39;4732:5;4699:39;:::i;:::-;4757:5;-1:-1:-1;4814:2:98;4799:18;;4786:32;4827:41;4786:32;4827:41;:::i;:::-;4887:7;4877:17;;;4481:419;;;;;:::o;5128:539::-;5214:6;5222;5275:2;5263:9;5254:7;5250:23;5246:32;5243:52;;;5291:1;5288;5281:12;5243:52;5331:9;5318:23;5360:18;5401:2;5393:6;5390:14;5387:34;;;5417:1;5414;5407:12;5387:34;5440:49;5481:7;5472:6;5461:9;5457:22;5440:49;:::i;:::-;5430:59;;5542:2;5531:9;5527:18;5514:32;5498:48;;5571:2;5561:8;5558:16;5555:36;;;5587:1;5584;5577:12;5555:36;;5610:51;5653:7;5642:8;5631:9;5627:24;5610:51;:::i;:::-;5600:61;;;5128:539;;;;;:::o;5880:275::-;5966:6;6019:2;6007:9;5998:7;5994:23;5990:32;5987:52;;;6035:1;6032;6025:12;5987:52;6067:9;6061:16;6086:39;6119:5;6086:39;:::i;6424:184::-;6494:6;6547:2;6535:9;6526:7;6522:23;6518:32;6515:52;;;6563:1;6560;6553:12;6515:52;-1:-1:-1;6586:16:98;;6424:184;-1:-1:-1;6424:184:98:o;6971:127::-;7032:10;7027:3;7023:20;7020:1;7013:31;7063:4;7060:1;7053:15;7087:4;7084:1;7077:15;7103:164;7179:13;;7228;;7221:21;7211:32;;7201:60;;7257:1;7254;7247:12;7201:60;7103:164;;;:::o;7272:342::-;7354:6;7362;7370;7423:2;7411:9;7402:7;7398:23;7394:32;7391:52;;;7439:1;7436;7429:12;7391:52;7462:37;7489:9;7462:37;:::i;:::-;7452:47;;7539:2;7528:9;7524:18;7518:25;7508:35;;7562:46;7604:2;7593:9;7589:18;7562:46;:::i;:::-;7552:56;;7272:342;;;;;:::o;8271:202::-;8338:6;8391:2;8379:9;8370:7;8366:23;8362:32;8359:52;;;8407:1;8404;8397:12;8359:52;8430:37;8457:9;8430:37;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "assetOf(bytes)": "e170a9bf",
    "assetsUsed(bytes)": "aeffddde",
    "balanceOf(bytes)": "78415365",
    "claimComp()": "1bd85bdb",
    "deposit(uint256,bytes,bytes)": "69445c31",
    "depositToCompound(address,uint256)": "ad8da96b",
    "identifier()": "7998a1c4",
    "isDebt()": "89353a09",
    "revokeApproval(address,address)": "d3bfe76a",
    "slippage()": "3e032a3b",
    "withdraw(uint256,address,bytes,bytes)": "c9111bd7",
    "withdrawFromCompound(address,uint256)": "c88da5f3",
    "withdrawableFrom(bytes,bytes)": "fa50e5d2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BaseAdaptor__ExternalReceiverBlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"BaseAdaptor__PricingNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__Slippage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserDepositsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserWithdrawsNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"}],\"name\":\"CTokenAdaptor__MarketNotListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"CTokenAdaptor__NonZeroCompoundErrorCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetOf\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetsUsed\",\"outputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimComp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract CErc20\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToDeposit\",\"type\":\"uint256\"}],\"name\":\"depositToCompound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDebt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"revokeApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippage\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract CErc20\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdrawFromCompound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"withdrawableFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"crispymangoes\",\"kind\":\"dev\",\"methods\":{\"assetsUsed(bytes)\":{\"details\":\"COMP is used when claiming COMP and swapping.\"},\"balanceOf(bytes)\":{\"details\":\"Relies on `exchangeRateStored`, so if the stored exchange rate diverges      from the current exchange rate, an arbitrage opportunity is created for      people to enter the cellar right before the stored value is updated, then      leave immediately after. This is mitigated by the shareLockPeriod,      and because it is rare for the exchange rates to diverge significantly.\"},\"deposit(uint256,bytes,bytes)\":{\"details\":\"configurationData is NOT used\",\"params\":{\"adaptorData\":\"adaptor data containing the abi encoded cToken\",\"assets\":\"the amount of assets to lend on Compound\"}},\"depositToCompound(address,uint256)\":{\"details\":\"Uses `_maxAvailable` helper function, see BaseAdaptor.sol\",\"params\":{\"amountToDeposit\":\"the amount of `tokenToDeposit` to lend on Compound.\",\"market\":\"the market to deposit to.\"}},\"identifier()\":{\"details\":\"Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult.\"},\"revokeApproval(address,address)\":{\"params\":{\"asset\":\"the ERC20 asset to revoke `spender`s approval for\",\"spender\":\"the address to revoke approval for\"}},\"withdraw(uint256,address,bytes,bytes)\":{\"details\":\"Important to verify that external receivers are allowed if receiver is not Cellar address.configurationData is NOT usedThere are NO health factor checks done in `withdraw`, or `withdrawableFrom`.      If cellars ever take on Compound Debt it is crucial these checks are added,      see \\\"IMPORTANT\\\" above.\",\"params\":{\"adaptorData\":\"adaptor data containing the abi encoded cToken\",\"assets\":\"the amount of assets to withdraw from Compound\",\"receiver\":\"the address to send withdrawn assets to\"}},\"withdrawFromCompound(address,uint256)\":{\"params\":{\"amountToWithdraw\":\"the amount of `market.underlying()` to withdraw from Compound\",\"market\":\"the market to withdraw from.\"}},\"withdrawableFrom(bytes,bytes)\":{\"details\":\"There are NO health factor checks done in `withdraw`, or `withdrawableFrom`.      If cellars ever take on Compound Debt it is crucial these checks are added,      see \\\"IMPORTANT\\\" above.\"}},\"title\":\"Compound CToken Adaptor\",\"version\":1},\"userdoc\":{\"errors\":{\"BaseAdaptor__ExternalReceiverBlocked()\":[{\"notice\":\"Attempted to specify an external receiver during a Cellar `callOnAdaptor` call.\"}],\"BaseAdaptor__PricingNotSupported(address)\":[{\"notice\":\"Attempted swap used unsupported output asset.\"}],\"BaseAdaptor__Slippage()\":[{\"notice\":\"Attempted swap has bad slippage.\"}],\"BaseAdaptor__UserDepositsNotAllowed()\":[{\"notice\":\"Attempted to deposit to a position where user deposits were not allowed.\"}],\"BaseAdaptor__UserWithdrawsNotAllowed()\":[{\"notice\":\"Attempted to withdraw from a position where user withdraws were not allowed.\"}],\"CTokenAdaptor__MarketNotListed(address)\":[{\"notice\":\"Strategist attempted to interact with a market that is not listed.\"}],\"CTokenAdaptor__NonZeroCompoundErrorCode(uint256)\":[{\"notice\":\"Compound action returned a non zero error code.\"}]},\"kind\":\"user\",\"methods\":{\"assetOf(bytes)\":{\"notice\":\"Returns the positions cToken underlying asset.\"},\"assetsUsed(bytes)\":{\"notice\":\"When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup.\"},\"balanceOf(bytes)\":{\"notice\":\"Returns the cellars balance of the positions cToken underlying.\"},\"claimComp()\":{\"notice\":\"Allows strategists to claim COMP rewards.\"},\"deposit(uint256,bytes,bytes)\":{\"notice\":\"Cellar must approve market to spend its assets, then call mint to lend its assets.\"},\"depositToCompound(address,uint256)\":{\"notice\":\"Allows strategists to lend assets on Compound.\"},\"isDebt()\":{\"notice\":\"This adaptor returns collateral, and not debt.\"},\"revokeApproval(address,address)\":{\"notice\":\"Allows strategists to zero out an approval for a given `asset`.\"},\"slippage()\":{\"notice\":\"Max possible slippage when making a swap router swap.\"},\"withdraw(uint256,address,bytes,bytes)\":{\"notice\":\"Cellars must withdraw from Compound.\"},\"withdrawFromCompound(address,uint256)\":{\"notice\":\"Allows strategists to withdraw assets from Compound.\"},\"withdrawableFrom(bytes,bytes)\":{\"notice\":\"Identical to `balanceOf`.\"}},\"notice\":\"Allows Cellars to interact with Compound CToken positions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/adaptors/Compound/CTokenAdaptor.sol\":\"CTokenAdaptor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":@uniswapV3C/=lib/v3-core.git/contracts/\",\":@uniswapV3P/=lib/v3-periphery.git/contracts/\",\":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":v3-core.git/=lib/v3-core.git/contracts/\",\":v3-periphery.git/=lib/v3-periphery.git/contracts/\"]},\"sources\":{\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"src/Registry.sol\":{\"keccak256\":\"0x72690631323f459be3da7dd7c4644a7678a509ff6fd9a76fc6f77124ba96bcb3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://237231d6746fbf8d95ec0fc07ee1ddc0978ae77ef12fe00f445e9f22232d1108\",\"dweb:/ipfs/QmbSKScTxX8nxNnjogci32r3fRexDfFG4sH4myE85AewQp\"]},\"src/base/Cellar.sol\":{\"keccak256\":\"0x851d6f03d13fcd1e4e55d40ab04908677ef1ec92dbcaf3c02ee492602c368d67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0eff90da37039eb4fb743024373d46ce6ccc198b5cb5c61c628f7a160d94fd0b\",\"dweb:/ipfs/QmUoLuGxVU5UqKNUB75BxMvYnpTxxcq8ZiUskrTTx8WbJA\"]},\"src/base/ERC20.sol\":{\"keccak256\":\"0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4\",\"dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf\"]},\"src/base/ERC4626.sol\":{\"keccak256\":\"0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469\",\"dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE\"]},\"src/base/Multicall.sol\":{\"keccak256\":\"0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c\",\"dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K\"]},\"src/base/SafeTransferLib.sol\":{\"keccak256\":\"0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a\",\"dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3\"]},\"src/interfaces/IMulticall.sol\":{\"keccak256\":\"0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0\",\"dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5\"]},\"src/interfaces/external/IAaveToken.sol\":{\"keccak256\":\"0x77cd64637e4c0fd379b2d4d826bcd9f64fc706a291ce77d023f693d1eb8e45d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e87630603401ff3374cb610b765e46a3a235ef294fab212cf3116a35db7c4d58\",\"dweb:/ipfs/Qma8awSuYptmpBsWUMz9NZBogVRtVQwXF5cvfsVWpNKhc3\"]},\"src/interfaces/external/IChainlinkAggregator.sol\":{\"keccak256\":\"0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2\",\"dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs\"]},\"src/interfaces/external/ICompound.sol\":{\"keccak256\":\"0x41305358249614c984e406b2bedcf6087d172b11af16a0911f47175c0f44a1c9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c03c82aac4d76d7e0bd975e96e07d9ab5beea8770ea700086c9fbd98e3ed40f3\",\"dweb:/ipfs/QmfCjNkXxjovoRZb6t5NHJe3VnbDksrkhYBpZGBCq8xzqX\"]},\"src/interfaces/external/ICurvePool.sol\":{\"keccak256\":\"0x9ae71865252aeca89fd6c74013eded1d8029eccc46e3604291be16e97b89a5da\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f504248ab846844bcd771226f7b2984455ddcc746357924fce50a41b65eec9e2\",\"dweb:/ipfs/QmQVe1VZUgxUab9ocsbrX42Ust3hs83BU3bpA1j6Cx1xo6\"]},\"src/interfaces/external/IGravity.sol\":{\"keccak256\":\"0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51\",\"dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c\"]},\"src/interfaces/external/IUniswapV2Router02.sol\":{\"keccak256\":\"0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a\",\"dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo\"]},\"src/interfaces/external/IUniswapV3Router.sol\":{\"keccak256\":\"0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd\",\"dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK\"]},\"src/modules/adaptors/BaseAdaptor.sol\":{\"keccak256\":\"0xb45700da63110e41cbb1879c3d261763644bc851effa798721cf7eca3e039f9a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7810084abb53310d5d50f5ca55557e9dcdc8fef6c987e55d82a7748aad467e27\",\"dweb:/ipfs/QmaieqMfgwWJvFy8q3jVrx8Fifo6M9UZM8cBjpmyNFPc5j\"]},\"src/modules/adaptors/Compound/CTokenAdaptor.sol\":{\"keccak256\":\"0x439df3692c62946a01b4b9fbc655389cee9afa64a9ebba8278c1502736230aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://749f5a3e5ddf37d3fa63debed99328761da5ed9526add5df80131a48cd787440\",\"dweb:/ipfs/QmWp2poKaK5PUkjSyaidM6PLN381PdovQLEnZGrSkkv2KY\"]},\"src/modules/price-router/PriceRouter.sol\":{\"keccak256\":\"0x3d0fb1c107cfbd5b72660b548a9749dfd0d07d9a0b5abdf554d593ee00569550\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f90a60a3097007a1dcd2871db79b0df74cf2a18de5126fc2bd2896f2715e93af\",\"dweb:/ipfs/QmTDqnNN9Rv29MYHCAzZsKzsDbTBMYYQi17VEwhmbE6KYC\"]},\"src/modules/swap-router/SwapRouter.sol\":{\"keccak256\":\"0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818\",\"dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312\",\"dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r\"]},\"src/utils/Uint32Array.sol\":{\"keccak256\":\"0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944\",\"dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__ExternalReceiverBlocked"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BaseAdaptor__PricingNotSupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__Slippage"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserDepositsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserWithdrawsNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "CTokenAdaptor__MarketNotListed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "errorCode",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "CTokenAdaptor__NonZeroCompoundErrorCode"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetOf",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetsUsed",
          "outputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "assets",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimComp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "contract CErc20",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToDeposit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositToCompound"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "identifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isDebt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeApproval"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "slippage",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "contract CErc20",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToWithdraw",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromCompound"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableFrom",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "assetsUsed(bytes)": {
            "details": "COMP is used when claiming COMP and swapping."
          },
          "balanceOf(bytes)": {
            "details": "Relies on `exchangeRateStored`, so if the stored exchange rate diverges      from the current exchange rate, an arbitrage opportunity is created for      people to enter the cellar right before the stored value is updated, then      leave immediately after. This is mitigated by the shareLockPeriod,      and because it is rare for the exchange rates to diverge significantly."
          },
          "deposit(uint256,bytes,bytes)": {
            "details": "configurationData is NOT used",
            "params": {
              "adaptorData": "adaptor data containing the abi encoded cToken",
              "assets": "the amount of assets to lend on Compound"
            }
          },
          "depositToCompound(address,uint256)": {
            "details": "Uses `_maxAvailable` helper function, see BaseAdaptor.sol",
            "params": {
              "amountToDeposit": "the amount of `tokenToDeposit` to lend on Compound.",
              "market": "the market to deposit to."
            }
          },
          "identifier()": {
            "details": "Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult."
          },
          "revokeApproval(address,address)": {
            "params": {
              "asset": "the ERC20 asset to revoke `spender`s approval for",
              "spender": "the address to revoke approval for"
            }
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "details": "Important to verify that external receivers are allowed if receiver is not Cellar address.configurationData is NOT usedThere are NO health factor checks done in `withdraw`, or `withdrawableFrom`.      If cellars ever take on Compound Debt it is crucial these checks are added,      see \"IMPORTANT\" above.",
            "params": {
              "adaptorData": "adaptor data containing the abi encoded cToken",
              "assets": "the amount of assets to withdraw from Compound",
              "receiver": "the address to send withdrawn assets to"
            }
          },
          "withdrawFromCompound(address,uint256)": {
            "params": {
              "amountToWithdraw": "the amount of `market.underlying()` to withdraw from Compound",
              "market": "the market to withdraw from."
            }
          },
          "withdrawableFrom(bytes,bytes)": {
            "details": "There are NO health factor checks done in `withdraw`, or `withdrawableFrom`.      If cellars ever take on Compound Debt it is crucial these checks are added,      see \"IMPORTANT\" above."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "assetOf(bytes)": {
            "notice": "Returns the positions cToken underlying asset."
          },
          "assetsUsed(bytes)": {
            "notice": "When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup."
          },
          "balanceOf(bytes)": {
            "notice": "Returns the cellars balance of the positions cToken underlying."
          },
          "claimComp()": {
            "notice": "Allows strategists to claim COMP rewards."
          },
          "deposit(uint256,bytes,bytes)": {
            "notice": "Cellar must approve market to spend its assets, then call mint to lend its assets."
          },
          "depositToCompound(address,uint256)": {
            "notice": "Allows strategists to lend assets on Compound."
          },
          "isDebt()": {
            "notice": "This adaptor returns collateral, and not debt."
          },
          "revokeApproval(address,address)": {
            "notice": "Allows strategists to zero out an approval for a given `asset`."
          },
          "slippage()": {
            "notice": "Max possible slippage when making a swap router swap."
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "notice": "Cellars must withdraw from Compound."
          },
          "withdrawFromCompound(address,uint256)": {
            "notice": "Allows strategists to withdraw assets from Compound."
          },
          "withdrawableFrom(bytes,bytes)": {
            "notice": "Identical to `balanceOf`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=lib/chainlink/",
        ":@ds-test/=lib/forge-std/lib/ds-test/src/",
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":@uniswapV3C/=lib/v3-core.git/contracts/",
        ":@uniswapV3P/=lib/v3-periphery.git/contracts/",
        ":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-core.git/=lib/v3-core.git/contracts/",
        ":v3-periphery.git/=lib/v3-periphery.git/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/adaptors/Compound/CTokenAdaptor.sol": "CTokenAdaptor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "keccak256": "0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7",
        "urls": [
          "bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465",
          "dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2",
        "urls": [
          "bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b",
          "dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol": {
        "keccak256": "0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340",
        "urls": [
          "bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e",
          "dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028",
        "urls": [
          "bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf",
          "dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb",
        "urls": [
          "bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929",
          "dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Registry.sol": {
        "keccak256": "0x72690631323f459be3da7dd7c4644a7678a509ff6fd9a76fc6f77124ba96bcb3",
        "urls": [
          "bzz-raw://237231d6746fbf8d95ec0fc07ee1ddc0978ae77ef12fe00f445e9f22232d1108",
          "dweb:/ipfs/QmbSKScTxX8nxNnjogci32r3fRexDfFG4sH4myE85AewQp"
        ],
        "license": "Apache-2.0"
      },
      "src/base/Cellar.sol": {
        "keccak256": "0x851d6f03d13fcd1e4e55d40ab04908677ef1ec92dbcaf3c02ee492602c368d67",
        "urls": [
          "bzz-raw://0eff90da37039eb4fb743024373d46ce6ccc198b5cb5c61c628f7a160d94fd0b",
          "dweb:/ipfs/QmUoLuGxVU5UqKNUB75BxMvYnpTxxcq8ZiUskrTTx8WbJA"
        ],
        "license": "Apache-2.0"
      },
      "src/base/ERC20.sol": {
        "keccak256": "0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02",
        "urls": [
          "bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4",
          "dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ERC4626.sol": {
        "keccak256": "0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7",
        "urls": [
          "bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469",
          "dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/Multicall.sol": {
        "keccak256": "0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9",
        "urls": [
          "bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c",
          "dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/SafeTransferLib.sol": {
        "keccak256": "0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324",
        "urls": [
          "bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a",
          "dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IMulticall.sol": {
        "keccak256": "0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e",
        "urls": [
          "bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0",
          "dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/IAaveToken.sol": {
        "keccak256": "0x77cd64637e4c0fd379b2d4d826bcd9f64fc706a291ce77d023f693d1eb8e45d8",
        "urls": [
          "bzz-raw://e87630603401ff3374cb610b765e46a3a235ef294fab212cf3116a35db7c4d58",
          "dweb:/ipfs/Qma8awSuYptmpBsWUMz9NZBogVRtVQwXF5cvfsVWpNKhc3"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/IChainlinkAggregator.sol": {
        "keccak256": "0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d",
        "urls": [
          "bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2",
          "dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/ICompound.sol": {
        "keccak256": "0x41305358249614c984e406b2bedcf6087d172b11af16a0911f47175c0f44a1c9",
        "urls": [
          "bzz-raw://c03c82aac4d76d7e0bd975e96e07d9ab5beea8770ea700086c9fbd98e3ed40f3",
          "dweb:/ipfs/QmfCjNkXxjovoRZb6t5NHJe3VnbDksrkhYBpZGBCq8xzqX"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/ICurvePool.sol": {
        "keccak256": "0x9ae71865252aeca89fd6c74013eded1d8029eccc46e3604291be16e97b89a5da",
        "urls": [
          "bzz-raw://f504248ab846844bcd771226f7b2984455ddcc746357924fce50a41b65eec9e2",
          "dweb:/ipfs/QmQVe1VZUgxUab9ocsbrX42Ust3hs83BU3bpA1j6Cx1xo6"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IGravity.sol": {
        "keccak256": "0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11",
        "urls": [
          "bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51",
          "dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IUniswapV2Router02.sol": {
        "keccak256": "0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f",
        "urls": [
          "bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a",
          "dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IUniswapV3Router.sol": {
        "keccak256": "0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355",
        "urls": [
          "bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd",
          "dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/modules/adaptors/BaseAdaptor.sol": {
        "keccak256": "0xb45700da63110e41cbb1879c3d261763644bc851effa798721cf7eca3e039f9a",
        "urls": [
          "bzz-raw://7810084abb53310d5d50f5ca55557e9dcdc8fef6c987e55d82a7748aad467e27",
          "dweb:/ipfs/QmaieqMfgwWJvFy8q3jVrx8Fifo6M9UZM8cBjpmyNFPc5j"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/adaptors/Compound/CTokenAdaptor.sol": {
        "keccak256": "0x439df3692c62946a01b4b9fbc655389cee9afa64a9ebba8278c1502736230aec",
        "urls": [
          "bzz-raw://749f5a3e5ddf37d3fa63debed99328761da5ed9526add5df80131a48cd787440",
          "dweb:/ipfs/QmWp2poKaK5PUkjSyaidM6PLN381PdovQLEnZGrSkkv2KY"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/price-router/PriceRouter.sol": {
        "keccak256": "0x3d0fb1c107cfbd5b72660b548a9749dfd0d07d9a0b5abdf554d593ee00569550",
        "urls": [
          "bzz-raw://f90a60a3097007a1dcd2871db79b0df74cf2a18de5126fc2bd2896f2715e93af",
          "dweb:/ipfs/QmTDqnNN9Rv29MYHCAzZsKzsDbTBMYYQi17VEwhmbE6KYC"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/swap-router/SwapRouter.sol": {
        "keccak256": "0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80",
        "urls": [
          "bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818",
          "dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f",
        "urls": [
          "bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312",
          "dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Uint32Array.sol": {
        "keccak256": "0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9",
        "urls": [
          "bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944",
          "dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/adaptors/Compound/CTokenAdaptor.sol",
    "id": 44470,
    "exportedSymbols": {
      "BaseAdaptor": [
        43962
      ],
      "CErc20": [
        35887
      ],
      "CTokenAdaptor": [
        44469
      ],
      "Comptroller": [
        35848
      ],
      "ERC20": [
        34556
      ],
      "Math": [
        54508
      ],
      "SafeTransferLib": [
        35307
      ],
      "SwapRouter": [
        53227
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:10270:79",
    "nodes": [
      {
        "id": 43964,
        "nodeType": "PragmaDirective",
        "src": "39:23:79",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 43970,
        "nodeType": "ImportDirective",
        "src": "64:109:79",
        "nodes": [],
        "absolutePath": "src/modules/adaptors/BaseAdaptor.sol",
        "file": "src/modules/adaptors/BaseAdaptor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44470,
        "sourceUnit": 43963,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43965,
              "name": "BaseAdaptor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43962,
              "src": "73:11:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 43966,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34556,
              "src": "86:5:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 43967,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35307,
              "src": "93:15:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 43968,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54508,
              "src": "110:4:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 43969,
              "name": "SwapRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53227,
              "src": "116:10:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43973,
        "nodeType": "ImportDirective",
        "src": "174:93:79",
        "nodes": [],
        "absolutePath": "src/interfaces/external/ICompound.sol",
        "file": "src/interfaces/external/ICompound.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44470,
        "sourceUnit": 35888,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43971,
              "name": "ComptrollerG7",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35848,
              "src": "183:13:79",
              "typeDescriptions": {}
            },
            "local": "Comptroller",
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 43972,
              "name": "CErc20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35887,
              "src": "213:6:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44469,
        "nodeType": "ContractDefinition",
        "src": "406:9902:79",
        "nodes": [
          {
            "id": 43980,
            "nodeType": "UsingForDirective",
            "src": "450:32:79",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 43977,
              "name": "SafeTransferLib",
              "nameLocations": [
                "456:15:79"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35307,
              "src": "456:15:79"
            },
            "typeName": {
              "id": 43979,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 43978,
                "name": "ERC20",
                "nameLocations": [
                  "476:5:79"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34556,
                "src": "476:5:79"
              },
              "referencedDeclaration": 34556,
              "src": "476:5:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$34556",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 43983,
            "nodeType": "UsingForDirective",
            "src": "487:23:79",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 43981,
              "name": "Math",
              "nameLocations": [
                "493:4:79"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54508,
              "src": "493:4:79"
            },
            "typeName": {
              "id": 43982,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "502:7:79",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 43988,
            "nodeType": "ErrorDefinition",
            "src": "1367:65:79",
            "nodes": [],
            "documentation": {
              "id": 43984,
              "nodeType": "StructuredDocumentation",
              "src": "1290:72:79",
              "text": "@notice Compound action returned a non zero error code."
            },
            "errorSelector": "d76f06ca",
            "name": "CTokenAdaptor__NonZeroCompoundErrorCode",
            "nameLocation": "1373:39:79",
            "parameters": {
              "id": 43987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43986,
                  "mutability": "mutable",
                  "name": "errorCode",
                  "nameLocation": "1421:9:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 43988,
                  "src": "1413:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43985,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1412:19:79"
            }
          },
          {
            "id": 43993,
            "nodeType": "ErrorDefinition",
            "src": "1536:53:79",
            "nodes": [],
            "documentation": {
              "id": 43989,
              "nodeType": "StructuredDocumentation",
              "src": "1438:93:79",
              "text": " @notice Strategist attempted to interact with a market that is not listed."
            },
            "errorSelector": "0ceedc9d",
            "name": "CTokenAdaptor__MarketNotListed",
            "nameLocation": "1542:30:79",
            "parameters": {
              "id": 43992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43991,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "1581:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 43993,
                  "src": "1573:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1572:16:79"
            }
          },
          {
            "id": 44008,
            "nodeType": "FunctionDefinition",
            "src": "2008:139:79",
            "nodes": [],
            "body": {
              "id": 44007,
              "nodeType": "Block",
              "src": "2069:78:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "436f6d706f756e642063546f6b656e2041646170746f72205620312e30",
                            "id": 44003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2107:31:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_de2faef283c01b8a85e94d0da8886aa94a76a2be0155ec4f38d38680b15693e7",
                              "typeString": "literal_string \"Compound cToken Adaptor V 1.0\""
                            },
                            "value": "Compound cToken Adaptor V 1.0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_de2faef283c01b8a85e94d0da8886aa94a76a2be0155ec4f38d38680b15693e7",
                              "typeString": "literal_string \"Compound cToken Adaptor V 1.0\""
                            }
                          ],
                          "expression": {
                            "id": 44001,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2096:3:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 44002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2100:6:79",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2096:10:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 44004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2096:43:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 44000,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2086:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 44005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2086:54:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 43999,
                  "id": 44006,
                  "nodeType": "Return",
                  "src": "2079:61:79"
                }
              ]
            },
            "baseFunctions": [
              43752
            ],
            "documentation": {
              "id": 43994,
              "nodeType": "StructuredDocumentation",
              "src": "1707:296:79",
              "text": " @dev Identifier unique to this adaptor for a shared registry.\n Normally the identifier would just be the address of this contract, but this\n Identifier is needed during Cellar Delegate Call Operations, so getting the address\n of the adaptor is more difficult."
            },
            "functionSelector": "7998a1c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "identifier",
            "nameLocation": "2017:10:79",
            "overrides": {
              "id": 43996,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2042:8:79"
            },
            "parameters": {
              "id": 43995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2027:2:79"
            },
            "returnParameters": {
              "id": 43999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43998,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44008,
                  "src": "2060:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 43997,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2059:9:79"
            },
            "scope": 44469,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44020,
            "nodeType": "FunctionDefinition",
            "src": "2242:138:79",
            "nodes": [],
            "body": {
              "id": 44019,
              "nodeType": "Block",
              "src": "2301:79:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307833643938313932313041333162343936316233304546353462453261654437394239633943643342",
                        "id": 44016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2330:42:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44015,
                      "name": "Comptroller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35848,
                      "src": "2318:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ComptrollerG7_$35848_$",
                        "typeString": "type(contract ComptrollerG7)"
                      }
                    },
                    "id": 44017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2318:55:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerG7_$35848",
                      "typeString": "contract ComptrollerG7"
                    }
                  },
                  "functionReturnParameters": 44014,
                  "id": 44018,
                  "nodeType": "Return",
                  "src": "2311:62:79"
                }
              ]
            },
            "documentation": {
              "id": 44009,
              "nodeType": "StructuredDocumentation",
              "src": "2153:84:79",
              "text": " @notice The Compound V2 Comptroller contract on Ethereum Mainnet."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "comptroller",
            "nameLocation": "2251:11:79",
            "parameters": {
              "id": 44010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:2:79"
            },
            "returnParameters": {
              "id": 44014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44013,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44020,
                  "src": "2288:11:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ComptrollerG7_$35848",
                    "typeString": "contract ComptrollerG7"
                  },
                  "typeName": {
                    "id": 44012,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44011,
                      "name": "Comptroller",
                      "nameLocations": [
                        "2288:11:79"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35848,
                      "src": "2288:11:79"
                    },
                    "referencedDeclaration": 35848,
                    "src": "2288:11:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerG7_$35848",
                      "typeString": "contract ComptrollerG7"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2287:13:79"
            },
            "scope": 44469,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44032,
            "nodeType": "FunctionDefinition",
            "src": "2456:119:79",
            "nodes": [],
            "body": {
              "id": 44031,
              "nodeType": "Block",
              "src": "2502:73:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307863303065393443623636324333353230323832453666353731373231343030344137663236383838",
                        "id": 44028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2525:42:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xc00e94Cb662C3520282E6f5717214004A7f26888"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44027,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34556,
                      "src": "2519:5:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 44029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2519:49:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "functionReturnParameters": 44026,
                  "id": 44030,
                  "nodeType": "Return",
                  "src": "2512:56:79"
                }
              ]
            },
            "documentation": {
              "id": 44021,
              "nodeType": "StructuredDocumentation",
              "src": "2386:65:79",
              "text": " @notice The COMP contract on Ethereum Mainnet."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "COMP",
            "nameLocation": "2465:4:79",
            "parameters": {
              "id": 44022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2469:2:79"
            },
            "returnParameters": {
              "id": 44026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44025,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44032,
                  "src": "2495:5:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$34556",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 44024,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44023,
                      "name": "ERC20",
                      "nameLocations": [
                        "2495:5:79"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34556,
                      "src": "2495:5:79"
                    },
                    "referencedDeclaration": 34556,
                    "src": "2495:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2494:7:79"
            },
            "scope": 44469,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44103,
            "nodeType": "FunctionDefinition",
            "src": "2992:611:79",
            "nodes": [],
            "body": {
              "id": 44102,
              "nodeType": "Block",
              "src": "3081:522:79",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44045,
                      "mutability": "mutable",
                      "name": "cToken",
                      "nameLocation": "3137:6:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 44102,
                      "src": "3130:13:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CErc20_$35887",
                        "typeString": "contract CErc20"
                      },
                      "typeName": {
                        "id": 44044,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44043,
                          "name": "CErc20",
                          "nameLocations": [
                            "3130:6:79"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35887,
                          "src": "3130:6:79"
                        },
                        "referencedDeclaration": 35887,
                        "src": "3130:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CErc20_$35887",
                          "typeString": "contract CErc20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44052,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44048,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44037,
                        "src": "3157:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 44049,
                            "name": "CErc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35887,
                            "src": "3171:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                              "typeString": "type(contract CErc20)"
                            }
                          }
                        ],
                        "id": 44050,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3170:8:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                          "typeString": "type(contract CErc20)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                          "typeString": "type(contract CErc20)"
                        }
                      ],
                      "expression": {
                        "id": 44046,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3146:3:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 44047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3150:6:79",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3146:10:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 44051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3146:33:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CErc20_$35887",
                      "typeString": "contract CErc20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3130:49:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44056,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44045,
                            "src": "3218:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          ],
                          "id": 44055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3210:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44054,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3210:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3210:15:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44053,
                      "name": "_validateMarketInput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44468,
                      "src": "3189:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 44058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3189:37:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44059,
                  "nodeType": "ExpressionStatement",
                  "src": "3189:37:79"
                },
                {
                  "assignments": [
                    44062
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44062,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "3242:5:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 44102,
                      "src": "3236:11:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 44061,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44060,
                          "name": "ERC20",
                          "nameLocations": [
                            "3236:5:79"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34556,
                          "src": "3236:5:79"
                        },
                        "referencedDeclaration": 34556,
                        "src": "3236:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44068,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44064,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44045,
                            "src": "3256:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          },
                          "id": 44065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3263:10:79",
                          "memberName": "underlying",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35853,
                          "src": "3256:17:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 44066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3256:19:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44063,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34556,
                      "src": "3250:5:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 44067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3250:26:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3236:40:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44074,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44045,
                            "src": "3312:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          ],
                          "id": 44073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3304:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44072,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3304:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3304:15:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44076,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44035,
                        "src": "3321:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44069,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44062,
                        "src": "3286:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 44071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3292:11:79",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35306,
                      "src": "3286:17:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$34556_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 44077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3286:42:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44078,
                  "nodeType": "ExpressionStatement",
                  "src": "3286:42:79"
                },
                {
                  "assignments": [
                    44080
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44080,
                      "mutability": "mutable",
                      "name": "errorCode",
                      "nameLocation": "3346:9:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 44102,
                      "src": "3338:17:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44079,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3338:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44085,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44083,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44035,
                        "src": "3370:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44081,
                        "name": "cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44045,
                        "src": "3358:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CErc20_$35887",
                          "typeString": "contract CErc20"
                        }
                      },
                      "id": 44082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3365:4:79",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35872,
                      "src": "3358:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 44084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3358:19:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3338:39:79"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44086,
                      "name": "errorCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44080,
                      "src": "3421:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 44087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3434:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3421:14:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44093,
                  "nodeType": "IfStatement",
                  "src": "3417:77:79",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 44090,
                          "name": "errorCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44080,
                          "src": "3484:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 44089,
                        "name": "CTokenAdaptor__NonZeroCompoundErrorCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43988,
                        "src": "3444:39:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) pure"
                        }
                      },
                      "id": 44091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3444:50:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44092,
                    "nodeType": "RevertStatement",
                    "src": "3437:57:79"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44095,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44062,
                        "src": "3573:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44098,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44045,
                            "src": "3588:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          ],
                          "id": 44097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3580:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44096,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3580:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3580:15:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44094,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43918,
                      "src": "3549:23:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 44100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3549:47:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44101,
                  "nodeType": "ExpressionStatement",
                  "src": "3549:47:79"
                }
              ]
            },
            "baseFunctions": [
              43787
            ],
            "documentation": {
              "id": 44033,
              "nodeType": "StructuredDocumentation",
              "src": "2701:286:79",
              "text": " @notice Cellar must approve market to spend its assets, then call mint to lend its assets.\n @param assets the amount of assets to lend on Compound\n @param adaptorData adaptor data containing the abi encoded cToken\n @dev configurationData is NOT used"
            },
            "functionSelector": "69445c31",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "3001:7:79",
            "overrides": {
              "id": 44041,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3072:8:79"
            },
            "parameters": {
              "id": 44040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44035,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "3017:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44103,
                  "src": "3009:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3009:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44037,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "3038:11:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44103,
                  "src": "3025:24:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44036,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3025:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44039,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44103,
                  "src": "3051:12:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44038,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3051:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3008:56:79"
            },
            "returnParameters": {
              "id": 44042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3081:0:79"
            },
            "scope": 44469,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44163,
            "nodeType": "FunctionDefinition",
            "src": "4236:632:79",
            "nodes": [],
            "body": {
              "id": 44162,
              "nodeType": "Block",
              "src": "4344:524:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44117,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44108,
                        "src": "4417:8:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44116,
                      "name": "_externalReceiverCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43944,
                      "src": "4394:22:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 44118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4394:32:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44119,
                  "nodeType": "ExpressionStatement",
                  "src": "4394:32:79"
                },
                {
                  "assignments": [
                    44122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44122,
                      "mutability": "mutable",
                      "name": "cToken",
                      "nameLocation": "4486:6:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 44162,
                      "src": "4479:13:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CErc20_$35887",
                        "typeString": "contract CErc20"
                      },
                      "typeName": {
                        "id": 44121,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44120,
                          "name": "CErc20",
                          "nameLocations": [
                            "4479:6:79"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35887,
                          "src": "4479:6:79"
                        },
                        "referencedDeclaration": 35887,
                        "src": "4479:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CErc20_$35887",
                          "typeString": "contract CErc20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44129,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44125,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44110,
                        "src": "4506:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 44126,
                            "name": "CErc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35887,
                            "src": "4520:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                              "typeString": "type(contract CErc20)"
                            }
                          }
                        ],
                        "id": 44127,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4519:8:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                          "typeString": "type(contract CErc20)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                          "typeString": "type(contract CErc20)"
                        }
                      ],
                      "expression": {
                        "id": 44123,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4495:3:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 44124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4499:6:79",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4495:10:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 44128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4495:33:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CErc20_$35887",
                      "typeString": "contract CErc20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4479:49:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44133,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44122,
                            "src": "4567:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          ],
                          "id": 44132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4559:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44131,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4559:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4559:15:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44130,
                      "name": "_validateMarketInput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44468,
                      "src": "4538:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 44135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4538:37:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44136,
                  "nodeType": "ExpressionStatement",
                  "src": "4538:37:79"
                },
                {
                  "assignments": [
                    44138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44138,
                      "mutability": "mutable",
                      "name": "errorCode",
                      "nameLocation": "4593:9:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 44162,
                      "src": "4585:17:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44137,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4585:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44143,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44141,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44106,
                        "src": "4629:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44139,
                        "name": "cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44122,
                        "src": "4605:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CErc20_$35887",
                          "typeString": "contract CErc20"
                        }
                      },
                      "id": 44140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4612:16:79",
                      "memberName": "redeemUnderlying",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35879,
                      "src": "4605:23:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 44142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4605:31:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4585:51:79"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44144,
                      "name": "errorCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44138,
                      "src": "4680:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 44145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4693:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4680:14:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44151,
                  "nodeType": "IfStatement",
                  "src": "4676:77:79",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 44148,
                          "name": "errorCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44138,
                          "src": "4743:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 44147,
                        "name": "CTokenAdaptor__NonZeroCompoundErrorCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43988,
                        "src": "4703:39:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) pure"
                        }
                      },
                      "id": 44149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4703:50:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44150,
                    "nodeType": "RevertStatement",
                    "src": "4696:57:79"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44158,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44108,
                        "src": "4844:8:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44159,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44106,
                        "src": "4854:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 44153,
                                "name": "cToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44122,
                                "src": "4810:6:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CErc20_$35887",
                                  "typeString": "contract CErc20"
                                }
                              },
                              "id": 44154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4817:10:79",
                              "memberName": "underlying",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35853,
                              "src": "4810:17:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 44155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4810:19:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 44152,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34556,
                          "src": "4804:5:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 44156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4804:26:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 44157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4831:12:79",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35286,
                      "src": "4804:39:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$34556_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 44160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4804:57:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44161,
                  "nodeType": "ExpressionStatement",
                  "src": "4804:57:79"
                }
              ]
            },
            "baseFunctions": [
              43799
            ],
            "documentation": {
              "id": 44104,
              "nodeType": "StructuredDocumentation",
              "src": "3609:622:79",
              "text": "@notice Cellars must withdraw from Compound.\n @dev Important to verify that external receivers are allowed if receiver is not Cellar address.\n @param assets the amount of assets to withdraw from Compound\n @param receiver the address to send withdrawn assets to\n @param adaptorData adaptor data containing the abi encoded cToken\n @dev configurationData is NOT used\n @dev There are NO health factor checks done in `withdraw`, or `withdrawableFrom`.\n      If cellars ever take on Compound Debt it is crucial these checks are added,\n      see \"IMPORTANT\" above."
            },
            "functionSelector": "c9111bd7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "4245:8:79",
            "overrides": {
              "id": 44114,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4335:8:79"
            },
            "parameters": {
              "id": 44113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44106,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "4262:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44163,
                  "src": "4254:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4254:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44108,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "4278:8:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44163,
                  "src": "4270:16:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4270:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44110,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "4301:11:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44163,
                  "src": "4288:24:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44109,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4288:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44112,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44163,
                  "src": "4314:12:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44111,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4314:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4253:74:79"
            },
            "returnParameters": {
              "id": 44115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4344:0:79"
            },
            "scope": 44469,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44201,
            "nodeType": "FunctionDefinition",
            "src": "5143:309:79",
            "nodes": [],
            "body": {
              "id": 44200,
              "nodeType": "Block",
              "src": "5248:204:79",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44176,
                      "mutability": "mutable",
                      "name": "cToken",
                      "nameLocation": "5265:6:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 44200,
                      "src": "5258:13:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CErc20_$35887",
                        "typeString": "contract CErc20"
                      },
                      "typeName": {
                        "id": 44175,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44174,
                          "name": "CErc20",
                          "nameLocations": [
                            "5258:6:79"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35887,
                          "src": "5258:6:79"
                        },
                        "referencedDeclaration": 35887,
                        "src": "5258:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CErc20_$35887",
                          "typeString": "contract CErc20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44183,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44179,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44166,
                        "src": "5285:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 44180,
                            "name": "CErc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35887,
                            "src": "5299:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                              "typeString": "type(contract CErc20)"
                            }
                          }
                        ],
                        "id": 44181,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5298:8:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                          "typeString": "type(contract CErc20)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                          "typeString": "type(contract CErc20)"
                        }
                      ],
                      "expression": {
                        "id": 44177,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5274:3:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 44178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5278:6:79",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5274:10:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 44182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5274:33:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CErc20_$35887",
                      "typeString": "contract CErc20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5258:49:79"
                },
                {
                  "assignments": [
                    44185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44185,
                      "mutability": "mutable",
                      "name": "cTokenBalance",
                      "nameLocation": "5325:13:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 44200,
                      "src": "5317:21:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44184,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5317:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44191,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5358:3:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5362:6:79",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5358:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44186,
                        "name": "cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44176,
                        "src": "5341:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CErc20_$35887",
                          "typeString": "contract CErc20"
                        }
                      },
                      "id": 44187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5348:9:79",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35860,
                      "src": "5341:16:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 44190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5341:28:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5317:52:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44194,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44176,
                            "src": "5411:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          },
                          "id": 44195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5418:18:79",
                          "memberName": "exchangeRateStored",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35865,
                          "src": "5411:25:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 44196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5411:27:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 44197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5440:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44192,
                        "name": "cTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44185,
                        "src": "5386:13:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 44193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5400:10:79",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54494,
                      "src": "5386:24:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 44198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5386:59:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 44173,
                  "id": 44199,
                  "nodeType": "Return",
                  "src": "5379:66:79"
                }
              ]
            },
            "baseFunctions": [
              43817
            ],
            "documentation": {
              "id": 44164,
              "nodeType": "StructuredDocumentation",
              "src": "4874:264:79",
              "text": " @notice Identical to `balanceOf`.\n @dev There are NO health factor checks done in `withdraw`, or `withdrawableFrom`.\n      If cellars ever take on Compound Debt it is crucial these checks are added,\n      see \"IMPORTANT\" above."
            },
            "functionSelector": "fa50e5d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawableFrom",
            "nameLocation": "5152:16:79",
            "overrides": {
              "id": 44170,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5221:8:79"
            },
            "parameters": {
              "id": 44169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44166,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "5182:11:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44201,
                  "src": "5169:24:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44165,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5169:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44201,
                  "src": "5195:12:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44167,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5195:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5168:40:79"
            },
            "returnParameters": {
              "id": 44173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44172,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44201,
                  "src": "5239:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5239:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5238:9:79"
            },
            "scope": 44469,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44237,
            "nodeType": "FunctionDefinition",
            "src": "5970:288:79",
            "nodes": [],
            "body": {
              "id": 44236,
              "nodeType": "Block",
              "src": "6054:204:79",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44212,
                      "mutability": "mutable",
                      "name": "cToken",
                      "nameLocation": "6071:6:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 44236,
                      "src": "6064:13:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CErc20_$35887",
                        "typeString": "contract CErc20"
                      },
                      "typeName": {
                        "id": 44211,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44210,
                          "name": "CErc20",
                          "nameLocations": [
                            "6064:6:79"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35887,
                          "src": "6064:6:79"
                        },
                        "referencedDeclaration": 35887,
                        "src": "6064:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CErc20_$35887",
                          "typeString": "contract CErc20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44219,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44215,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44204,
                        "src": "6091:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 44216,
                            "name": "CErc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35887,
                            "src": "6105:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                              "typeString": "type(contract CErc20)"
                            }
                          }
                        ],
                        "id": 44217,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6104:8:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                          "typeString": "type(contract CErc20)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                          "typeString": "type(contract CErc20)"
                        }
                      ],
                      "expression": {
                        "id": 44213,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6080:3:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 44214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6084:6:79",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6080:10:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 44218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6080:33:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CErc20_$35887",
                      "typeString": "contract CErc20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6064:49:79"
                },
                {
                  "assignments": [
                    44221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44221,
                      "mutability": "mutable",
                      "name": "cTokenBalance",
                      "nameLocation": "6131:13:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 44236,
                      "src": "6123:21:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44220,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6123:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44227,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44224,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6164:3:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6168:6:79",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6164:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44222,
                        "name": "cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44212,
                        "src": "6147:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CErc20_$35887",
                          "typeString": "contract CErc20"
                        }
                      },
                      "id": 44223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6154:9:79",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35860,
                      "src": "6147:16:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 44226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6147:28:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6123:52:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44230,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44212,
                            "src": "6217:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          },
                          "id": 44231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6224:18:79",
                          "memberName": "exchangeRateStored",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35865,
                          "src": "6217:25:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 44232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6217:27:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 44233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6246:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44228,
                        "name": "cTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44221,
                        "src": "6192:13:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 44229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6206:10:79",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54494,
                      "src": "6192:24:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 44234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6192:59:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 44209,
                  "id": 44235,
                  "nodeType": "Return",
                  "src": "6185:66:79"
                }
              ]
            },
            "baseFunctions": [
              43807
            ],
            "documentation": {
              "id": 44202,
              "nodeType": "StructuredDocumentation",
              "src": "5458:507:79",
              "text": " @notice Returns the cellars balance of the positions cToken underlying.\n @dev Relies on `exchangeRateStored`, so if the stored exchange rate diverges\n      from the current exchange rate, an arbitrage opportunity is created for\n      people to enter the cellar right before the stored value is updated, then\n      leave immediately after. This is mitigated by the shareLockPeriod,\n      and because it is rare for the exchange rates to diverge significantly."
            },
            "functionSelector": "78415365",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5979:9:79",
            "overrides": {
              "id": 44206,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6027:8:79"
            },
            "parameters": {
              "id": 44205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44204,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "6002:11:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44237,
                  "src": "5989:24:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44203,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5989:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5988:26:79"
            },
            "returnParameters": {
              "id": 44209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44208,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44237,
                  "src": "6045:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6045:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6044:9:79"
            },
            "scope": 44469,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44264,
            "nodeType": "FunctionDefinition",
            "src": "6342:189:79",
            "nodes": [],
            "body": {
              "id": 44263,
              "nodeType": "Block",
              "src": "6422:109:79",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44249,
                      "mutability": "mutable",
                      "name": "cToken",
                      "nameLocation": "6439:6:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 44263,
                      "src": "6432:13:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CErc20_$35887",
                        "typeString": "contract CErc20"
                      },
                      "typeName": {
                        "id": 44248,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44247,
                          "name": "CErc20",
                          "nameLocations": [
                            "6432:6:79"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35887,
                          "src": "6432:6:79"
                        },
                        "referencedDeclaration": 35887,
                        "src": "6432:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CErc20_$35887",
                          "typeString": "contract CErc20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44256,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44252,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44240,
                        "src": "6459:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 44253,
                            "name": "CErc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35887,
                            "src": "6473:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                              "typeString": "type(contract CErc20)"
                            }
                          }
                        ],
                        "id": 44254,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6472:8:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                          "typeString": "type(contract CErc20)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_CErc20_$35887_$",
                          "typeString": "type(contract CErc20)"
                        }
                      ],
                      "expression": {
                        "id": 44250,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6448:3:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 44251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6452:6:79",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6448:10:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 44255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6448:33:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CErc20_$35887",
                      "typeString": "contract CErc20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6432:49:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44258,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44249,
                            "src": "6504:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          },
                          "id": 44259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6511:10:79",
                          "memberName": "underlying",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35853,
                          "src": "6504:17:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 44260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6504:19:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44257,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34556,
                      "src": "6498:5:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 44261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6498:26:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "functionReturnParameters": 44246,
                  "id": 44262,
                  "nodeType": "Return",
                  "src": "6491:33:79"
                }
              ]
            },
            "baseFunctions": [
              43826
            ],
            "documentation": {
              "id": 44238,
              "nodeType": "StructuredDocumentation",
              "src": "6264:73:79",
              "text": " @notice Returns the positions cToken underlying asset."
            },
            "functionSelector": "e170a9bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetOf",
            "nameLocation": "6351:7:79",
            "overrides": {
              "id": 44242,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6397:8:79"
            },
            "parameters": {
              "id": 44241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44240,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "6372:11:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44264,
                  "src": "6359:24:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44239,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6359:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6358:26:79"
            },
            "returnParameters": {
              "id": 44246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44245,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44264,
                  "src": "6415:5:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$34556",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 44244,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44243,
                      "name": "ERC20",
                      "nameLocations": [
                        "6415:5:79"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34556,
                      "src": "6415:5:79"
                    },
                    "referencedDeclaration": 34556,
                    "src": "6415:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6414:7:79"
            },
            "scope": 44469,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44300,
            "nodeType": "FunctionDefinition",
            "src": "6812:209:79",
            "nodes": [],
            "body": {
              "id": 44299,
              "nodeType": "Block",
              "src": "6911:110:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44275,
                      "name": "assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44273,
                      "src": "6921:6:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                        "typeString": "contract ERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 44280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6942:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 44279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6930:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract ERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 44277,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 44276,
                              "name": "ERC20",
                              "nameLocations": [
                                "6934:5:79"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 34556,
                              "src": "6934:5:79"
                            },
                            "referencedDeclaration": 34556,
                            "src": "6934:5:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 44278,
                          "nodeType": "ArrayTypeName",
                          "src": "6934:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_storage_ptr",
                            "typeString": "contract ERC20[]"
                          }
                        }
                      },
                      "id": 44281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6930:14:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                        "typeString": "contract ERC20[] memory"
                      }
                    },
                    "src": "6921:23:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                      "typeString": "contract ERC20[] memory"
                    }
                  },
                  "id": 44283,
                  "nodeType": "ExpressionStatement",
                  "src": "6921:23:79"
                },
                {
                  "expression": {
                    "id": 44290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44284,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44273,
                        "src": "6954:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 44286,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 44285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6961:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6954:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44288,
                          "name": "adaptorData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44267,
                          "src": "6974:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 44287,
                        "name": "assetOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          44264
                        ],
                        "referencedDeclaration": 44264,
                        "src": "6966:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_contract$_ERC20_$34556_$",
                          "typeString": "function (bytes memory) view returns (contract ERC20)"
                        }
                      },
                      "id": 44289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6966:20:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "6954:32:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 44291,
                  "nodeType": "ExpressionStatement",
                  "src": "6954:32:79"
                },
                {
                  "expression": {
                    "id": 44297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44292,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44273,
                        "src": "6996:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 44294,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 44293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7003:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6996:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44295,
                        "name": "COMP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44032,
                        "src": "7008:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ERC20_$34556_$",
                          "typeString": "function () pure returns (contract ERC20)"
                        }
                      },
                      "id": 44296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7008:6:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "6996:18:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 44298,
                  "nodeType": "ExpressionStatement",
                  "src": "6996:18:79"
                }
              ]
            },
            "baseFunctions": [
              43854
            ],
            "documentation": {
              "id": 44265,
              "nodeType": "StructuredDocumentation",
              "src": "6537:270:79",
              "text": " @notice When positions are added to the Registry, this function can be used in order to figure out\n         what assets this adaptor needs to price, and confirm pricing is properly setup.\n @dev COMP is used when claiming COMP and swapping."
            },
            "functionSelector": "aeffddde",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetsUsed",
            "nameLocation": "6821:10:79",
            "overrides": {
              "id": 44269,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6870:8:79"
            },
            "parameters": {
              "id": 44268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44267,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "6845:11:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44300,
                  "src": "6832:24:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44266,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6832:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6831:26:79"
            },
            "returnParameters": {
              "id": 44274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44273,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "6903:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44300,
                  "src": "6888:21:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                    "typeString": "contract ERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 44271,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 44270,
                        "name": "ERC20",
                        "nameLocations": [
                          "6888:5:79"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 34556,
                        "src": "6888:5:79"
                      },
                      "referencedDeclaration": 34556,
                      "src": "6888:5:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "id": 44272,
                    "nodeType": "ArrayTypeName",
                    "src": "6888:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_storage_ptr",
                      "typeString": "contract ERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6887:23:79"
            },
            "scope": 44469,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44310,
            "nodeType": "FunctionDefinition",
            "src": "7105:83:79",
            "nodes": [],
            "body": {
              "id": 44309,
              "nodeType": "Block",
              "src": "7159:29:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 44307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7176:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 44306,
                  "id": 44308,
                  "nodeType": "Return",
                  "src": "7169:12:79"
                }
              ]
            },
            "baseFunctions": [
              43860
            ],
            "documentation": {
              "id": 44301,
              "nodeType": "StructuredDocumentation",
              "src": "7027:73:79",
              "text": " @notice This adaptor returns collateral, and not debt."
            },
            "functionSelector": "89353a09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDebt",
            "nameLocation": "7114:6:79",
            "overrides": {
              "id": 44303,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7135:8:79"
            },
            "parameters": {
              "id": 44302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7120:2:79"
            },
            "returnParameters": {
              "id": 44306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44305,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44310,
                  "src": "7153:4:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 44304,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7153:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7152:6:79"
            },
            "scope": 44469,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44376,
            "nodeType": "FunctionDefinition",
            "src": "7587:618:79",
            "nodes": [],
            "body": {
              "id": 44375,
              "nodeType": "Block",
              "src": "7661:544:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44322,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44314,
                            "src": "7700:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          ],
                          "id": 44321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7692:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44320,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7692:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7692:15:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44319,
                      "name": "_validateMarketInput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44468,
                      "src": "7671:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 44324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7671:37:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44325,
                  "nodeType": "ExpressionStatement",
                  "src": "7671:37:79"
                },
                {
                  "assignments": [
                    44328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44328,
                      "mutability": "mutable",
                      "name": "tokenToDeposit",
                      "nameLocation": "7725:14:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 44375,
                      "src": "7719:20:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 44327,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44326,
                          "name": "ERC20",
                          "nameLocations": [
                            "7719:5:79"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34556,
                          "src": "7719:5:79"
                        },
                        "referencedDeclaration": 34556,
                        "src": "7719:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44334,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44330,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44314,
                            "src": "7748:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          },
                          "id": 44331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7755:10:79",
                          "memberName": "underlying",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35853,
                          "src": "7748:17:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 44332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7748:19:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44329,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34556,
                      "src": "7742:5:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 44333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7742:26:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7719:49:79"
                },
                {
                  "expression": {
                    "id": 44340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44335,
                      "name": "amountToDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44316,
                      "src": "7778:15:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44337,
                          "name": "tokenToDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44328,
                          "src": "7810:14:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$34556",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 44338,
                          "name": "amountToDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44316,
                          "src": "7826:15:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$34556",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 44336,
                        "name": "_maxAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43890,
                        "src": "7796:13:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$34556_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,uint256) view returns (uint256)"
                        }
                      },
                      "id": 44339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7796:46:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7778:64:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44341,
                  "nodeType": "ExpressionStatement",
                  "src": "7778:64:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44347,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44314,
                            "src": "7887:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          ],
                          "id": 44346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7879:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44345,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7879:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7879:15:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44349,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44316,
                        "src": "7896:15:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44342,
                        "name": "tokenToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44328,
                        "src": "7852:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 44344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7867:11:79",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35306,
                      "src": "7852:26:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$34556_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 44350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7852:60:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44351,
                  "nodeType": "ExpressionStatement",
                  "src": "7852:60:79"
                },
                {
                  "assignments": [
                    44353
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44353,
                      "mutability": "mutable",
                      "name": "errorCode",
                      "nameLocation": "7930:9:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 44375,
                      "src": "7922:17:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44352,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7922:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44358,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44356,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44316,
                        "src": "7954:15:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44354,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44314,
                        "src": "7942:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CErc20_$35887",
                          "typeString": "contract CErc20"
                        }
                      },
                      "id": 44355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7949:4:79",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35872,
                      "src": "7942:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 44357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7942:28:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7922:48:79"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44359,
                      "name": "errorCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44353,
                      "src": "8014:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 44360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8027:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8014:14:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44366,
                  "nodeType": "IfStatement",
                  "src": "8010:77:79",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 44363,
                          "name": "errorCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44353,
                          "src": "8077:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 44362,
                        "name": "CTokenAdaptor__NonZeroCompoundErrorCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43988,
                        "src": "8037:39:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) pure"
                        }
                      },
                      "id": 44364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8037:50:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44365,
                    "nodeType": "RevertStatement",
                    "src": "8030:57:79"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44368,
                        "name": "tokenToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44328,
                        "src": "8166:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44371,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44314,
                            "src": "8190:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          ],
                          "id": 44370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8182:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44369,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8182:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8182:15:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44367,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43918,
                      "src": "8142:23:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 44373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8142:56:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44374,
                  "nodeType": "ExpressionStatement",
                  "src": "8142:56:79"
                }
              ]
            },
            "documentation": {
              "id": 44311,
              "nodeType": "StructuredDocumentation",
              "src": "7310:272:79",
              "text": " @notice Allows strategists to lend assets on Compound.\n @dev Uses `_maxAvailable` helper function, see BaseAdaptor.sol\n @param market the market to deposit to.\n @param amountToDeposit the amount of `tokenToDeposit` to lend on Compound."
            },
            "functionSelector": "ad8da96b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToCompound",
            "nameLocation": "7596:17:79",
            "parameters": {
              "id": 44317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44314,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "7621:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44376,
                  "src": "7614:13:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CErc20_$35887",
                    "typeString": "contract CErc20"
                  },
                  "typeName": {
                    "id": 44313,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44312,
                      "name": "CErc20",
                      "nameLocations": [
                        "7614:6:79"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35887,
                      "src": "7614:6:79"
                    },
                    "referencedDeclaration": 35887,
                    "src": "7614:6:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CErc20_$35887",
                      "typeString": "contract CErc20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44316,
                  "mutability": "mutable",
                  "name": "amountToDeposit",
                  "nameLocation": "7637:15:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44376,
                  "src": "7629:23:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7629:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7613:40:79"
            },
            "returnParameters": {
              "id": 44318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7661:0:79"
            },
            "scope": 44469,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44432,
            "nodeType": "FunctionDefinition",
            "src": "8438:456:79",
            "nodes": [],
            "body": {
              "id": 44431,
              "nodeType": "Block",
              "src": "8516:378:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44388,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44380,
                            "src": "8555:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          ],
                          "id": 44387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8547:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44386,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8547:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8547:15:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44385,
                      "name": "_validateMarketInput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44468,
                      "src": "8526:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 44390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8526:37:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44391,
                  "nodeType": "ExpressionStatement",
                  "src": "8526:37:79"
                },
                {
                  "assignments": [
                    44393
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44393,
                      "mutability": "mutable",
                      "name": "errorCode",
                      "nameLocation": "8582:9:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 44431,
                      "src": "8574:17:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44392,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8574:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44394,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8574:17:79"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44395,
                      "name": "amountToWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44382,
                      "src": "8605:16:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 44398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8630:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 44397,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8630:7:79",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 44396,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "8625:4:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 44399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8625:13:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 44400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "8639:3:79",
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "8625:17:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8605:37:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 44420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 44415,
                        "name": "errorCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44393,
                        "src": "8717:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 44418,
                            "name": "amountToWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44382,
                            "src": "8753:16:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 44416,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44380,
                            "src": "8729:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          },
                          "id": 44417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8736:16:79",
                          "memberName": "redeemUnderlying",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35879,
                          "src": "8729:23:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) external returns (uint256)"
                          }
                        },
                        "id": 44419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8729:41:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8717:53:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 44421,
                    "nodeType": "ExpressionStatement",
                    "src": "8717:53:79"
                  },
                  "id": 44422,
                  "nodeType": "IfStatement",
                  "src": "8601:169:79",
                  "trueBody": {
                    "expression": {
                      "id": 44413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 44402,
                        "name": "errorCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44393,
                        "src": "8644:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 44409,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "8695:4:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CTokenAdaptor_$44469",
                                      "typeString": "contract CTokenAdaptor"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_CTokenAdaptor_$44469",
                                      "typeString": "contract CTokenAdaptor"
                                    }
                                  ],
                                  "id": 44408,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8687:7:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 44407,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8687:7:79",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 44410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8687:13:79",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 44405,
                                "name": "market",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44380,
                                "src": "8670:6:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CErc20_$35887",
                                  "typeString": "contract CErc20"
                                }
                              },
                              "id": 44406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8677:9:79",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35860,
                              "src": "8670:16:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 44411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8670:31:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 44403,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44380,
                            "src": "8656:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$35887",
                              "typeString": "contract CErc20"
                            }
                          },
                          "id": 44404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8663:6:79",
                          "memberName": "redeem",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35886,
                          "src": "8656:13:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) external returns (uint256)"
                          }
                        },
                        "id": 44412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8656:46:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8644:58:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 44414,
                    "nodeType": "ExpressionStatement",
                    "src": "8644:58:79"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44423,
                      "name": "errorCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44393,
                      "src": "8814:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 44424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8827:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8814:14:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44430,
                  "nodeType": "IfStatement",
                  "src": "8810:77:79",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 44427,
                          "name": "errorCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44393,
                          "src": "8877:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 44426,
                        "name": "CTokenAdaptor__NonZeroCompoundErrorCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43988,
                        "src": "8837:39:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) pure"
                        }
                      },
                      "id": 44428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8837:50:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44429,
                    "nodeType": "RevertStatement",
                    "src": "8830:57:79"
                  }
                }
              ]
            },
            "documentation": {
              "id": 44377,
              "nodeType": "StructuredDocumentation",
              "src": "8211:222:79",
              "text": " @notice Allows strategists to withdraw assets from Compound.\n @param market the market to withdraw from.\n @param amountToWithdraw the amount of `market.underlying()` to withdraw from Compound"
            },
            "functionSelector": "c88da5f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFromCompound",
            "nameLocation": "8447:20:79",
            "parameters": {
              "id": 44383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44380,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "8475:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44432,
                  "src": "8468:13:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CErc20_$35887",
                    "typeString": "contract CErc20"
                  },
                  "typeName": {
                    "id": 44379,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44378,
                      "name": "CErc20",
                      "nameLocations": [
                        "8468:6:79"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35887,
                      "src": "8468:6:79"
                    },
                    "referencedDeclaration": 35887,
                    "src": "8468:6:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CErc20_$35887",
                      "typeString": "contract CErc20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44382,
                  "mutability": "mutable",
                  "name": "amountToWithdraw",
                  "nameLocation": "8491:16:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44432,
                  "src": "8483:24:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8483:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8467:41:79"
            },
            "returnParameters": {
              "id": 44384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8516:0:79"
            },
            "scope": 44469,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44446,
            "nodeType": "FunctionDefinition",
            "src": "8973:83:79",
            "nodes": [],
            "body": {
              "id": 44445,
              "nodeType": "Block",
              "src": "9001:55:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44441,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9043:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CTokenAdaptor_$44469",
                              "typeString": "contract CTokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CTokenAdaptor_$44469",
                              "typeString": "contract CTokenAdaptor"
                            }
                          ],
                          "id": 44440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9035:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44439,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9035:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9035:13:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 44436,
                          "name": "comptroller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44020,
                          "src": "9011:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ComptrollerG7_$35848_$",
                            "typeString": "function () pure returns (contract ComptrollerG7)"
                          }
                        },
                        "id": 44437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9011:13:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComptrollerG7_$35848",
                          "typeString": "contract ComptrollerG7"
                        }
                      },
                      "id": 44438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9025:9:79",
                      "memberName": "claimComp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35829,
                      "src": "9011:23:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 44443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9011:38:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44444,
                  "nodeType": "ExpressionStatement",
                  "src": "9011:38:79"
                }
              ]
            },
            "documentation": {
              "id": 44433,
              "nodeType": "StructuredDocumentation",
              "src": "8900:68:79",
              "text": " @notice Allows strategists to claim COMP rewards."
            },
            "functionSelector": "1bd85bdb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimComp",
            "nameLocation": "8982:9:79",
            "parameters": {
              "id": 44434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8991:2:79"
            },
            "returnParameters": {
              "id": 44435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9001:0:79"
            },
            "scope": 44469,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44468,
            "nodeType": "FunctionDefinition",
            "src": "10110:196:79",
            "nodes": [],
            "body": {
              "id": 44467,
              "nodeType": "Block",
              "src": "10169:137:79",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44453,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44453,
                      "mutability": "mutable",
                      "name": "isListed",
                      "nameLocation": "10185:8:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 44467,
                      "src": "10180:13:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 44452,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10180:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 44459,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44457,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44449,
                        "src": "10223:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 44454,
                          "name": "comptroller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44020,
                          "src": "10201:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ComptrollerG7_$35848_$",
                            "typeString": "function () pure returns (contract ComptrollerG7)"
                          }
                        },
                        "id": 44455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10201:13:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComptrollerG7_$35848",
                          "typeString": "contract ComptrollerG7"
                        }
                      },
                      "id": 44456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10215:7:79",
                      "memberName": "markets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35840,
                      "src": "10201:21:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$_t_uint256_$_t_bool_$",
                        "typeString": "function (address) view external returns (bool,uint256,bool)"
                      }
                    },
                    "id": 44458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10201:28:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(bool,uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10179:50:79"
                },
                {
                  "condition": {
                    "id": 44461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "10244:9:79",
                    "subExpression": {
                      "id": 44460,
                      "name": "isListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44453,
                      "src": "10245:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44466,
                  "nodeType": "IfStatement",
                  "src": "10240:59:79",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 44463,
                          "name": "input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44449,
                          "src": "10293:5:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44462,
                        "name": "CTokenAdaptor__MarketNotListed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43993,
                        "src": "10262:30:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                          "typeString": "function (address) pure"
                        }
                      },
                      "id": 44464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10262:37:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44465,
                    "nodeType": "RevertStatement",
                    "src": "10255:44:79"
                  }
                }
              ]
            },
            "documentation": {
              "id": 44447,
              "nodeType": "StructuredDocumentation",
              "src": "10010:95:79",
              "text": " @notice Helper function that reverts if market is not listed in Comptroller."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateMarketInput",
            "nameLocation": "10119:20:79",
            "parameters": {
              "id": 44450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44449,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "10148:5:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 44468,
                  "src": "10140:13:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10140:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10139:15:79"
            },
            "returnParameters": {
              "id": 44451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10169:0:79"
            },
            "scope": 44469,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 43975,
              "name": "BaseAdaptor",
              "nameLocations": [
                "432:11:79"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43962,
              "src": "432:11:79"
            },
            "id": 43976,
            "nodeType": "InheritanceSpecifier",
            "src": "432:11:79"
          }
        ],
        "canonicalName": "CTokenAdaptor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 43974,
          "nodeType": "StructuredDocumentation",
          "src": "269:136:79",
          "text": " @title Compound CToken Adaptor\n @notice Allows Cellars to interact with Compound CToken positions.\n @author crispymangoes"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44469,
          43962
        ],
        "name": "CTokenAdaptor",
        "nameLocation": "415:13:79",
        "scope": 44470,
        "usedErrors": [
          43724,
          43727,
          43730,
          43733,
          43738,
          43988,
          43993
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 79
}