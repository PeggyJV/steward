{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_accountForInterest",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "frax",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__ConstructorHealthFactorTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__ExternalReceiverBlocked",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "BaseAdaptor__PricingNotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__Slippage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserDepositsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserWithdrawsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fToken",
          "type": "address"
        }
      ],
      "name": "FTokenAdaptor__FTokenPositionsMustBeTracked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ACCOUNT_FOR_INTEREST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FRAX",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "assetOf",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetsUsed",
      "outputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFToken",
          "name": "fToken",
          "type": "address"
        }
      ],
      "name": "callAddInterest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDebt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFToken",
          "name": "fToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToDeposit",
          "type": "uint256"
        }
      ],
      "name": "lendFrax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFToken",
          "name": "fToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToRedeem",
          "type": "uint256"
        }
      ],
      "name": "redeemFraxShare",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "revokeApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippage",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFToken",
          "name": "fToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToWithdraw",
          "type": "uint256"
        }
      ],
      "name": "withdrawFrax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "withdrawableFrom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "withdrawableFrax",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c060405234801561001057600080fd5b5060405161144838038061144883398101604081905261002f91610046565b9015156080526001600160a01b031660a052610091565b6000806040838503121561005957600080fd5b8251801515811461006957600080fd5b60208401519092506001600160a01b038116811461008657600080fd5b809150509250929050565b60805160a05161135a6100ee600039600081816101f401528181610265015281816102f70152818161032e0152818161037c015281816103b0015281816103e701526104e401526000818161010a0152610437015261135a6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806389353a0911610097578063d3bfe76a11610066578063d3bfe76a14610241578063e170a9bf14610254578063f815ada414610287578063fa50e5d21461029a57600080fd5b806389353a09146101c8578063aeffddde146101cf578063b0e4556f146101ef578063c9111bd71461022e57600080fd5b80636dd659fd116100d35780636dd659fd14610179578063726bb0841461018c578063784153651461019f5780637998a1c4146101c057600080fd5b806319877557146101055780633e032a3b1461014157806361b14c981461015157806369445c3114610166575b600080fd5b61012c7f000000000000000000000000000000000000000000000000000000000000000081565b60405190151581526020015b60405180910390f35b6040516123288152602001610138565b61016461015f366004610d14565b6102ad565b005b610164610174366004610e0c565b6102d2565b610164610187366004610e79565b610359565b61016461019a366004610d14565b61036e565b6101b26101ad366004610e96565b61040c565b604051908152602001610138565b6101b2610462565b600061012c565b6101e26101dd366004610e96565b6104c0565b6040516101389190610ed3565b6102167f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610138565b61016461023c366004610f20565b61053b565b61016461024f366004610fa0565b61056f565b610216610262366004610e96565b507f000000000000000000000000000000000000000000000000000000000000000090565b610164610295366004610d14565b610584565b6101b26102a8366004610fd9565b610599565b6102b682610630565b6102c082826107f4565b90506102ce82823030610875565b5050565b6000828060200190518101906102e8919061103d565b905061031e6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682866108e6565b61032981853061095d565b6103537f0000000000000000000000000000000000000000000000000000000000000000826109c4565b50505050565b61036281610630565b61036b81610a53565b50565b61037782610630565b6103a17f0000000000000000000000000000000000000000000000000000000000000000826107f4565b90506103d76001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836108e6565b6103e282823061095d565b6102ce7f0000000000000000000000000000000000000000000000000000000000000000836109c4565b60008082806020019051810190610423919061103d565b905061045b816104338333610abf565b60007f0000000000000000000000000000000000000000000000000000000000000000610b2d565b9392505050565b60006040516020016104a5906020808252601d908201527f467261784c656e642066546f6b656e2041646170746f72205620302e31000000604082015260600190565b60405160208183030381529060405280519060200120905090565b604080516001808252818301909252606091602080830190803683370190505090507f0000000000000000000000000000000000000000000000000000000000000000816000815181106105165761051661105a565b60200260200101906001600160a01b031690816001600160a01b031681525050919050565b61054483610bb2565b60008280602001905181019061055a919061103d565b905061056881868630610c46565b5050505050565b6102ce6001600160a01b0383168260006108e6565b61058d82610630565b6102ce82823030610c46565b600080838060200190518101906105b0919061103d565b90506000806105be83610c83565b50509250509150816001600160801b0316816001600160801b0316106105ea576000935050505061062a565b60006105f68284611070565b6001600160801b031690506000610611856104338733610abf565b90508181116106205780610622565b815b955050505050505b92915050565b600061063a610462565b604080516001600160a01b03851660208201526000910160408051601f19818403018152908290526106709392916020016110a5565b6040516020818303038152906040528051906020012090506000306001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec919061103d565b6001600160a01b03166309f7abd2836040518263ffffffff1660e01b815260040161071991815260200190565b602060405180830381865afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a919061111d565b60405163024eefab60e61b815263ffffffff8216600482015290915030906393bbeac090602401602060405180830381865afa15801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c29190611138565b6107ef57604051630e3ce2dd60e41b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6000600019820361086e576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610843573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610867919061115a565b905061062a565b508061062a565b604051635d043b2960e11b8152600481018490526001600160a01b038381166024830152828116604483015285169063ba087652906064015b600060405180830381600087803b1580156108c857600080fd5b505af11580156108dc573d6000803e3d6000fd5b5050505050505050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806103535760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064016107e6565b604051636e553f6560e01b8152600481018390526001600160a01b038281166024830152841690636e553f6590604401600060405180830381600087803b1580156109a757600080fd5b505af11580156109bb573d6000803e3d6000fd5b50505050505050565b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa158015610a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a38919061115a565b11156102ce576102ce6001600160a01b0383168260006108e6565b604051631c6c959760e01b8152600060048201526001600160a01b03821690631c6c959790602401610180604051808303816000875af1158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bb9190611200565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa158015610b09573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045b919061115a565b604051637d37bdd760e01b815260048101849052821515602482015281151560448201526000906001600160a01b03861690637d37bdd790606401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba9919061115a565b95945050505050565b6001600160a01b0381163014801590610c285750306001600160a01b0316634c4602da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c289190611138565b1561036b576040516307de9b5160e21b815260040160405180910390fd5b604051632d182be560e21b8152600481018490526001600160a01b038381166024830152828116604483015285169063b460af94906064016108ae565b6000806000806000856001600160a01b031663cdd72d526040518163ffffffff1660e01b815260040160a060405180830381865afa158015610cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ced91906112c6565b939a9299509097509550909350915050565b6001600160a01b038116811461036b57600080fd5b60008060408385031215610d2757600080fd5b8235610d3281610cff565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610d7957610d79610d40565b60405290565b600082601f830112610d9057600080fd5b813567ffffffffffffffff80821115610dab57610dab610d40565b604051601f8301601f19908116603f01168101908282118183101715610dd357610dd3610d40565b81604052838152866020858801011115610dec57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610e2157600080fd5b83359250602084013567ffffffffffffffff80821115610e4057600080fd5b610e4c87838801610d7f565b93506040860135915080821115610e6257600080fd5b50610e6f86828701610d7f565b9150509250925092565b600060208284031215610e8b57600080fd5b813561045b81610cff565b600060208284031215610ea857600080fd5b813567ffffffffffffffff811115610ebf57600080fd5b610ecb84828501610d7f565b949350505050565b6020808252825182820181905260009190848201906040850190845b81811015610f145783516001600160a01b031683529284019291840191600101610eef565b50909695505050505050565b60008060008060808587031215610f3657600080fd5b843593506020850135610f4881610cff565b9250604085013567ffffffffffffffff80821115610f6557600080fd5b610f7188838901610d7f565b93506060870135915080821115610f8757600080fd5b50610f9487828801610d7f565b91505092959194509250565b60008060408385031215610fb357600080fd5b8235610fbe81610cff565b91506020830135610fce81610cff565b809150509250929050565b60008060408385031215610fec57600080fd5b823567ffffffffffffffff8082111561100457600080fd5b61101086838701610d7f565b9350602085013591508082111561102657600080fd5b5061103385828601610d7f565b9150509250929050565b60006020828403121561104f57600080fd5b815161045b81610cff565b634e487b7160e01b600052603260045260246000fd5b6001600160801b0382811682821603908082111561109e57634e487b7160e01b600052601160045260246000fd5b5092915050565b838152600060208415158184015260606040840152835180606085015260005b818110156110e1578581018301518582016080015282016110c5565b506000608082860101526080601f19601f83011685010192505050949350505050565b805163ffffffff8116811461111857600080fd5b919050565b60006020828403121561112f57600080fd5b61045b82611104565b60006020828403121561114a57600080fd5b8151801515811461045b57600080fd5b60006020828403121561116c57600080fd5b5051919050565b805167ffffffffffffffff8116811461111857600080fd5b80516001600160801b038116811461111857600080fd5b6000604082840312156111b457600080fd5b6040516040810181811067ffffffffffffffff821117156111d7576111d7610d40565b6040529050806111e68361118b565b81526111f46020840161118b565b60208201525092915050565b60008060008060008086880361018081121561121b57600080fd5b87519650602088015195506040880151945060a0605f198201121561123f57600080fd5b50611248610d56565b61125460608901611104565b815261126260808901611104565b602082015261127360a08901611173565b604082015261128460c08901611173565b606082015261129560e08901611173565b608082015292506112aa8861010089016111a2565b91506112ba8861014089016111a2565b90509295509295509295565b600080600080600060a086880312156112de57600080fd5b6112e78661118b565b94506112f56020870161118b565b93506113036040870161118b565b92506113116060870161118b565b915060808601519050929550929590935056fea2646970667358221220a902d18bf15d81ec62372b502518f72341b81ca8a2443f176dfdca8da0a64d6b64736f6c63430008100033",
    "sourceMap": "581:13996:195:-:0;;;1776:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1838:42;;;;;-1:-1:-1;;;;;1890:18:195;;;581:13996;;14:452:258;90:6;98;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;199:9;193:16;252:5;245:13;238:21;231:5;228:32;218:60;;274:1;271;264:12;218:60;347:2;332:18;;326:25;297:5;;-1:-1:-1;;;;;;382:33:258;;370:46;;360:74;;430:1;427;420:12;360:74;453:7;443:17;;;14:452;;;;;:::o;:::-;581:13996:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806389353a0911610097578063d3bfe76a11610066578063d3bfe76a14610241578063e170a9bf14610254578063f815ada414610287578063fa50e5d21461029a57600080fd5b806389353a09146101c8578063aeffddde146101cf578063b0e4556f146101ef578063c9111bd71461022e57600080fd5b80636dd659fd116100d35780636dd659fd14610179578063726bb0841461018c578063784153651461019f5780637998a1c4146101c057600080fd5b806319877557146101055780633e032a3b1461014157806361b14c981461015157806369445c3114610166575b600080fd5b61012c7f000000000000000000000000000000000000000000000000000000000000000081565b60405190151581526020015b60405180910390f35b6040516123288152602001610138565b61016461015f366004610d14565b6102ad565b005b610164610174366004610e0c565b6102d2565b610164610187366004610e79565b610359565b61016461019a366004610d14565b61036e565b6101b26101ad366004610e96565b61040c565b604051908152602001610138565b6101b2610462565b600061012c565b6101e26101dd366004610e96565b6104c0565b6040516101389190610ed3565b6102167f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610138565b61016461023c366004610f20565b61053b565b61016461024f366004610fa0565b61056f565b610216610262366004610e96565b507f000000000000000000000000000000000000000000000000000000000000000090565b610164610295366004610d14565b610584565b6101b26102a8366004610fd9565b610599565b6102b682610630565b6102c082826107f4565b90506102ce82823030610875565b5050565b6000828060200190518101906102e8919061103d565b905061031e6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682866108e6565b61032981853061095d565b6103537f0000000000000000000000000000000000000000000000000000000000000000826109c4565b50505050565b61036281610630565b61036b81610a53565b50565b61037782610630565b6103a17f0000000000000000000000000000000000000000000000000000000000000000826107f4565b90506103d76001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836108e6565b6103e282823061095d565b6102ce7f0000000000000000000000000000000000000000000000000000000000000000836109c4565b60008082806020019051810190610423919061103d565b905061045b816104338333610abf565b60007f0000000000000000000000000000000000000000000000000000000000000000610b2d565b9392505050565b60006040516020016104a5906020808252601d908201527f467261784c656e642066546f6b656e2041646170746f72205620302e31000000604082015260600190565b60405160208183030381529060405280519060200120905090565b604080516001808252818301909252606091602080830190803683370190505090507f0000000000000000000000000000000000000000000000000000000000000000816000815181106105165761051661105a565b60200260200101906001600160a01b031690816001600160a01b031681525050919050565b61054483610bb2565b60008280602001905181019061055a919061103d565b905061056881868630610c46565b5050505050565b6102ce6001600160a01b0383168260006108e6565b61058d82610630565b6102ce82823030610c46565b600080838060200190518101906105b0919061103d565b90506000806105be83610c83565b50509250509150816001600160801b0316816001600160801b0316106105ea576000935050505061062a565b60006105f68284611070565b6001600160801b031690506000610611856104338733610abf565b90508181116106205780610622565b815b955050505050505b92915050565b600061063a610462565b604080516001600160a01b03851660208201526000910160408051601f19818403018152908290526106709392916020016110a5565b6040516020818303038152906040528051906020012090506000306001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec919061103d565b6001600160a01b03166309f7abd2836040518263ffffffff1660e01b815260040161071991815260200190565b602060405180830381865afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a919061111d565b60405163024eefab60e61b815263ffffffff8216600482015290915030906393bbeac090602401602060405180830381865afa15801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c29190611138565b6107ef57604051630e3ce2dd60e41b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6000600019820361086e576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610843573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610867919061115a565b905061062a565b508061062a565b604051635d043b2960e11b8152600481018490526001600160a01b038381166024830152828116604483015285169063ba087652906064015b600060405180830381600087803b1580156108c857600080fd5b505af11580156108dc573d6000803e3d6000fd5b5050505050505050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806103535760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064016107e6565b604051636e553f6560e01b8152600481018390526001600160a01b038281166024830152841690636e553f6590604401600060405180830381600087803b1580156109a757600080fd5b505af11580156109bb573d6000803e3d6000fd5b50505050505050565b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa158015610a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a38919061115a565b11156102ce576102ce6001600160a01b0383168260006108e6565b604051631c6c959760e01b8152600060048201526001600160a01b03821690631c6c959790602401610180604051808303816000875af1158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bb9190611200565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa158015610b09573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045b919061115a565b604051637d37bdd760e01b815260048101849052821515602482015281151560448201526000906001600160a01b03861690637d37bdd790606401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba9919061115a565b95945050505050565b6001600160a01b0381163014801590610c285750306001600160a01b0316634c4602da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c289190611138565b1561036b576040516307de9b5160e21b815260040160405180910390fd5b604051632d182be560e21b8152600481018490526001600160a01b038381166024830152828116604483015285169063b460af94906064016108ae565b6000806000806000856001600160a01b031663cdd72d526040518163ffffffff1660e01b815260040160a060405180830381865afa158015610cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ced91906112c6565b939a9299509097509550909350915050565b6001600160a01b038116811461036b57600080fd5b60008060408385031215610d2757600080fd5b8235610d3281610cff565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610d7957610d79610d40565b60405290565b600082601f830112610d9057600080fd5b813567ffffffffffffffff80821115610dab57610dab610d40565b604051601f8301601f19908116603f01168101908282118183101715610dd357610dd3610d40565b81604052838152866020858801011115610dec57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610e2157600080fd5b83359250602084013567ffffffffffffffff80821115610e4057600080fd5b610e4c87838801610d7f565b93506040860135915080821115610e6257600080fd5b50610e6f86828701610d7f565b9150509250925092565b600060208284031215610e8b57600080fd5b813561045b81610cff565b600060208284031215610ea857600080fd5b813567ffffffffffffffff811115610ebf57600080fd5b610ecb84828501610d7f565b949350505050565b6020808252825182820181905260009190848201906040850190845b81811015610f145783516001600160a01b031683529284019291840191600101610eef565b50909695505050505050565b60008060008060808587031215610f3657600080fd5b843593506020850135610f4881610cff565b9250604085013567ffffffffffffffff80821115610f6557600080fd5b610f7188838901610d7f565b93506060870135915080821115610f8757600080fd5b50610f9487828801610d7f565b91505092959194509250565b60008060408385031215610fb357600080fd5b8235610fbe81610cff565b91506020830135610fce81610cff565b809150509250929050565b60008060408385031215610fec57600080fd5b823567ffffffffffffffff8082111561100457600080fd5b61101086838701610d7f565b9350602085013591508082111561102657600080fd5b5061103385828601610d7f565b9150509250929050565b60006020828403121561104f57600080fd5b815161045b81610cff565b634e487b7160e01b600052603260045260246000fd5b6001600160801b0382811682821603908082111561109e57634e487b7160e01b600052601160045260246000fd5b5092915050565b838152600060208415158184015260606040840152835180606085015260005b818110156110e1578581018301518582016080015282016110c5565b506000608082860101526080601f19601f83011685010192505050949350505050565b805163ffffffff8116811461111857600080fd5b919050565b60006020828403121561112f57600080fd5b61045b82611104565b60006020828403121561114a57600080fd5b8151801515811461045b57600080fd5b60006020828403121561116c57600080fd5b5051919050565b805167ffffffffffffffff8116811461111857600080fd5b80516001600160801b038116811461111857600080fd5b6000604082840312156111b457600080fd5b6040516040810181811067ffffffffffffffff821117156111d7576111d7610d40565b6040529050806111e68361118b565b81526111f46020840161118b565b60208201525092915050565b60008060008060008086880361018081121561121b57600080fd5b87519650602088015195506040880151945060a0605f198201121561123f57600080fd5b50611248610d56565b61125460608901611104565b815261126260808901611104565b602082015261127360a08901611173565b604082015261128460c08901611173565b606082015261129560e08901611173565b608082015292506112aa8861010089016111a2565b91506112ba8861014089016111a2565b90509295509295509295565b600080600080600060a086880312156112de57600080fd5b6112e78661118b565b94506112f56020870161118b565b93506113036040870161118b565b92506113116060870161118b565b915060808601519050929550929590935056fea2646970667358221220a902d18bf15d81ec62372b502518f72341b81ca8a2443f176dfdca8da0a64d6b64736f6c63430008100033",
    "sourceMap": "581:13996:195:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1549:42;;;;;;;;179:14:258;;172:22;154:41;;142:2;127:18;1549:42:195;;;;;;;;2415:78:188;;;2481:5;350:42:258;;338:2;323:18;2415:78:188;206:192:258;6662:264:195;;;;;;:::i;:::-;;:::i;:::-;;2901:398;;;;;;:::i;:::-;;:::i;7904:118::-;;;;;;:::i;:::-;;:::i;6052:389::-;;;;;;:::i;:::-;;:::i;5100:252::-;;;;;;:::i;:::-;;:::i;:::-;;;3363:25:258;;;3351:2;3336:18;5100:252:195;3217:177:258;2334:147:195;;;:::i;5583:83::-;5631:4;5583:83;;5934:180:188;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1742:27:195:-;;;;;;;;-1:-1:-1;;;;;4438:32:258;;;4420:51;;4408:2;4393:18;1742:27:195;4259:218:258;3756:357:195;;;;;;:::i;:::-;;:::i;9204:107:188:-;;;;;;:::i;:::-;;:::i;5403:96:195:-;;;;;;:::i;:::-;-1:-1:-1;5488:4:195;;5403:96;7251:186;;;;;;:::i;:::-;;:::i;4376:636::-;;;;;;:::i;:::-;;:::i;6662:264::-;6744:23;6760:6;6744:15;:23::i;:::-;6794:53;6822:6;6832:14;6794:13;:53::i;:::-;6777:70;;6858:61;6866:6;6874:14;6898:4;6913;6858:7;:61::i;:::-;6662:264;;:::o;2901:398::-;3040:14;3068:11;3057:34;;;;;;;;;;;;:::i;:::-;3040:51;-1:-1:-1;3101:41:195;-1:-1:-1;;;;;3101:4:195;:16;3040:51;3135:6;3101:16;:41::i;:::-;3152:39;3161:6;3169;3185:4;3152:8;:39::i;:::-;3246:46;3270:4;3284:6;3246:23;:46::i;:::-;2990:309;2901:398;;;:::o;7904:118::-;7962:23;7978:6;7962:15;:23::i;:::-;7995:20;8008:6;7995:12;:20::i;:::-;7904:118;:::o;6052:389::-;6128:23;6144:6;6128:15;:23::i;:::-;6179:36;6193:4;6199:15;6179:13;:36::i;:::-;6161:54;-1:-1:-1;6225:50:195;-1:-1:-1;;;;;6225:4:195;:16;6250:6;6161:54;6225:16;:50::i;:::-;6285:48;6294:6;6302:15;6327:4;6285:8;:48::i;:::-;6388:46;6412:4;6426:6;6388:23;:46::i;5100:252::-;5175:7;5194:14;5222:11;5211:34;;;;;;;;;;;;:::i;:::-;5194:51;;5262:83;5277:6;5285:30;5296:6;5304:10;5285;:30::i;:::-;5317:5;5324:20;5262:14;:83::i;:::-;5255:90;5100:252;-1:-1:-1;;;5100:252:195:o;2334:147::-;2394:7;2430:43;;;;;;6693:2:258;6675:21;;;6732:2;6712:18;;;6705:30;6771:31;6766:2;6751:18;;6744:59;6835:2;6820:18;;6491:353;2430:43:195;;;;;;;;;;;;;2420:54;;;;;;2413:61;;2334:147;:::o;5934:180:188:-;6051:14;;;6063:1;6051:14;;;;;;;;;6009:21;;6051:14;;;;;;;;;;;-1:-1:-1;;6042:23:188;-1:-1:-1;5488:4:195;6075:6:188;6082:1;6075:9;;;;;;;;:::i;:::-;;;;;;:32;-1:-1:-1;;;;;6075:32:188;;;-1:-1:-1;;;;;6075:32:188;;;;;5934:180;;;:::o;3756:357:195:-;3914:32;3937:8;3914:22;:32::i;:::-;3995:14;4023:11;4012:34;;;;;;;;;;;;:::i;:::-;3995:51;;4056:50;4066:6;4074;4082:8;4100:4;4056:9;:50::i;:::-;3864:249;3756:357;;;;:::o;9204:107:188:-;9275:29;-1:-1:-1;;;;;9275:17:188;;9293:7;9302:1;9275:17;:29::i;7251:186:195:-;7332:23;7348:6;7332:15;:23::i;:::-;7365:65;7375:6;7383:16;7409:4;7424;7365:9;:65::i;4376:636::-;4494:24;4530:14;4558:11;4547:34;;;;;;;;;;;;:::i;:::-;4530:51;;4592:25;4621;4654:26;4673:6;4654:18;:26::i;:::-;4591:89;;;;;;;4715:17;-1:-1:-1;;;;;4694:38:195;:17;-1:-1:-1;;;;;4694:38:195;;4690:52;;4741:1;4734:8;;;;;;;4690:52;4752:18;4773:37;4793:17;4773;:37;:::i;:::-;-1:-1:-1;;;;;4752:58:195;;;4820:19;4842:83;4857:6;4865:30;4876:6;4884:10;4865;:30::i;4842:83::-;4820:105;;4968:10;4954:11;:24;:51;;4994:11;4954:51;;;4981:10;4954:51;4935:70;;4520:492;;;;;4376:636;;;;;:::o;8205:414::-;8270:20;8314:12;:10;:12::i;:::-;8335:27;;;-1:-1:-1;;;;;4438:32:258;;8335:27:195;;;4420:51:258;8328:5:195;;4393:18:258;8335:27:195;;;-1:-1:-1;;8335:27:195;;;;;;;;;;8303:60;;;;8335:27;8303:60;;:::i;:::-;;;;;;;;;;;;;8293:71;;;;;;8270:94;;8374:17;8409:4;-1:-1:-1;;;;;8394:30:195;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8394:60:195;;8455:12;8394:74;;;;;;;;;;;;;3363:25:258;;3351:2;3336:18;;3217:177;8394:74:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8483:48;;-1:-1:-1;;;8483:48:195;;380:10:258;368:23;;8483:48:195;;;350:42:258;8374:94:195;;-1:-1:-1;8498:4:195;;8483:36;;323:18:258;;8483:48:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8478:134;;8552:60;;-1:-1:-1;;;8552:60:195;;-1:-1:-1;;;;;4438:32:258;;8552:60:195;;;4420:51:258;4393:18;;8552:60:195;;;;;;;;8478:134;8260:359;;8205:414;:::o;7816:207:188:-;7899:7;-1:-1:-1;;7922:6:188;:27;7918:98;;7958:30;;-1:-1:-1;;;7958:30:188;;7982:4;7958:30;;;4420:51:258;-1:-1:-1;;;;;7958:15:188;;;;;4393:18:258;;7958:30:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7951:37;;;;7918:98;-1:-1:-1;8010:6:188;8003:13;;11417:154:195;11526:38;;-1:-1:-1;;;11526:38:195;;;;;9734:25:258;;;-1:-1:-1;;;;;9833:15:258;;;9813:18;;;9806:43;9885:15;;;9865:18;;;9858:43;11526:13:195;;;;;9707:18:258;;11526:38:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11417:154;;;;:::o;4327:1454:104:-;4438:12;4565:4;4559:11;-1:-1:-1;;;4688:17:104;4681:93;4821:2;4817:1;4798:17;4794:25;4787:37;4901:6;4896:2;4877:17;4873:26;4866:42;5703:2;5700:1;5696:2;5677:17;5674:1;5667:5;5660;5655:51;5224:16;5217:24;5211:2;5193:16;5190:24;5186:1;5182;5176:8;5173:15;5169:46;5166:76;4966:754;4955:765;;;5748:7;5740:34;;;;-1:-1:-1;;;5740:34:104;;10114:2:258;5740:34:104;;;10096:21:258;10153:2;10133:18;;;10126:30;-1:-1:-1;;;10172:18:258;;;10165:44;10226:18;;5740:34:104;9912:338:258;10224:134:195;10319:32;;-1:-1:-1;;;10319:32:195;;;;;10429:25:258;;;-1:-1:-1;;;;;10490:32:258;;;10470:18;;;10463:60;10319:14:195;;;;;10402:18:258;;10319:32:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10224:134;;;:::o;8158:167:188:-;8244:39;;-1:-1:-1;;;8244:39:188;;8268:4;8244:39;;;10746:34:258;-1:-1:-1;;;;;10816:15:258;;;10796:18;;;10789:43;8286:1:188;;8244:15;;;;;;10681:18:258;;8244:39:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;8240:78;;;8289:29;-1:-1:-1;;;;;8289:17:188;;8307:7;8316:1;8289:17;:29::i;14478:97:195:-;14543:25;;-1:-1:-1;;;14543:25:195;;14562:5;14543:25;;;154:41:258;-1:-1:-1;;;;;14543:18:195;;;;;127::258;;14543:25:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;13183:136::-;13290:22;;-1:-1:-1;;;13290:22:195;;-1:-1:-1;;;;;4438:32:258;;;13290:22:195;;;4420:51:258;13264:7:195;;13290:16;;;;;;4393:18:258;;13290:22:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;12081:248::-;12268:54;;-1:-1:-1;;;12268:54:195;;;;;13122:25:258;;;13190:14;;13183:22;13163:18;;;13156:50;13249:14;;13242:22;13222:18;;;13215:50;12242:7:195;;-1:-1:-1;;;;;12268:20:195;;;;;13095:18:258;;12268:54:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12261:61;12081:248;-1:-1:-1;;;;;12081:248:195:o;8425:218:188:-;-1:-1:-1;;;;;8503:25:188;;8523:4;8503:25;;;;:74;;;8547:4;-1:-1:-1;;;;;8532:43:188;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8499:137;;;8598:38;;-1:-1:-1;;;8598:38:188;;;;;;;;;;;10772:158:195;10883:40;;-1:-1:-1;;;10883:40:195;;;;;9734:25:258;;;-1:-1:-1;;;;;9833:15:258;;;9813:18;;;9806:43;9885:15;;;9865:18;;;9858:43;10883:15:195;;;;;9707:18:258;;10883:40:195;9532:375:258;13760:476:195;13894:24;13932;13970:25;14009;14048:23;14190:6;-1:-1:-1;;;;;14190:37:195;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14096:133;;;;-1:-1:-1;14096:133:195;;-1:-1:-1;14096:133:195;-1:-1:-1;14096:133:195;;-1:-1:-1;13760:476:195;-1:-1:-1;;13760:476:195:o;403:140:258:-;-1:-1:-1;;;;;487:31:258;;477:42;;467:70;;533:1;530;523:12;548:341;633:6;641;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;749:9;736:23;768:40;802:5;768:40;:::i;:::-;827:5;879:2;864:18;;;;851:32;;-1:-1:-1;;;548:341:258:o;894:127::-;955:10;950:3;946:20;943:1;936:31;986:4;983:1;976:15;1010:4;1007:1;1000:15;1026:248;1093:2;1087:9;1135:4;1123:17;;1170:18;1155:34;;1191:22;;;1152:62;1149:88;;;1217:18;;:::i;:::-;1253:2;1246:22;1026:248;:::o;1279:718::-;1321:5;1374:3;1367:4;1359:6;1355:17;1351:27;1341:55;;1392:1;1389;1382:12;1341:55;1428:6;1415:20;1454:18;1491:2;1487;1484:10;1481:36;;;1497:18;;:::i;:::-;1572:2;1566:9;1540:2;1626:13;;-1:-1:-1;;1622:22:258;;;1646:2;1618:31;1614:40;1602:53;;;1670:18;;;1690:22;;;1667:46;1664:72;;;1716:18;;:::i;:::-;1756:10;1752:2;1745:22;1791:2;1783:6;1776:18;1837:3;1830:4;1825:2;1817:6;1813:15;1809:26;1806:35;1803:55;;;1854:1;1851;1844:12;1803:55;1918:2;1911:4;1903:6;1899:17;1892:4;1884:6;1880:17;1867:54;1965:1;1958:4;1953:2;1945:6;1941:15;1937:26;1930:37;1985:6;1976:15;;;;;;1279:718;;;;:::o;2002:607::-;2097:6;2105;2113;2166:2;2154:9;2145:7;2141:23;2137:32;2134:52;;;2182:1;2179;2172:12;2134:52;2218:9;2205:23;2195:33;;2279:2;2268:9;2264:18;2251:32;2302:18;2343:2;2335:6;2332:14;2329:34;;;2359:1;2356;2349:12;2329:34;2382:49;2423:7;2414:6;2403:9;2399:22;2382:49;:::i;:::-;2372:59;;2484:2;2473:9;2469:18;2456:32;2440:48;;2513:2;2503:8;2500:16;2497:36;;;2529:1;2526;2519:12;2497:36;;2552:51;2595:7;2584:8;2573:9;2569:24;2552:51;:::i;:::-;2542:61;;;2002:607;;;;;:::o;2614:273::-;2690:6;2743:2;2731:9;2722:7;2718:23;2714:32;2711:52;;;2759:1;2756;2749:12;2711:52;2798:9;2785:23;2817:40;2851:5;2817:40;:::i;2892:320::-;2960:6;3013:2;3001:9;2992:7;2988:23;2984:32;2981:52;;;3029:1;3026;3019:12;2981:52;3069:9;3056:23;3102:18;3094:6;3091:30;3088:50;;;3134:1;3131;3124:12;3088:50;3157:49;3198:7;3189:6;3178:9;3174:22;3157:49;:::i;:::-;3147:59;2892:320;-1:-1:-1;;;;2892:320:258:o;3581:673::-;3767:2;3819:21;;;3889:13;;3792:18;;;3911:22;;;3738:4;;3767:2;3990:15;;;;3964:2;3949:18;;;3738:4;4033:195;4047:6;4044:1;4041:13;4033:195;;;4112:13;;-1:-1:-1;;;;;4108:39:258;4096:52;;4203:15;;;;4168:12;;;;4144:1;4062:9;4033:195;;;-1:-1:-1;4245:3:258;;3581:673;-1:-1:-1;;;;;;3581:673:258:o;4482:752::-;4586:6;4594;4602;4610;4663:3;4651:9;4642:7;4638:23;4634:33;4631:53;;;4680:1;4677;4670:12;4631:53;4716:9;4703:23;4693:33;;4776:2;4765:9;4761:18;4748:32;4789:40;4823:5;4789:40;:::i;:::-;4848:5;-1:-1:-1;4904:2:258;4889:18;;4876:32;4927:18;4957:14;;;4954:34;;;4984:1;4981;4974:12;4954:34;5007:49;5048:7;5039:6;5028:9;5024:22;5007:49;:::i;:::-;4997:59;;5109:2;5098:9;5094:18;5081:32;5065:48;;5138:2;5128:8;5125:16;5122:36;;;5154:1;5151;5144:12;5122:36;;5177:51;5220:7;5209:8;5198:9;5194:24;5177:51;:::i;:::-;5167:61;;;4482:752;;;;;;;:::o;5239:421::-;5322:6;5330;5383:2;5371:9;5362:7;5358:23;5354:32;5351:52;;;5399:1;5396;5389:12;5351:52;5438:9;5425:23;5457:40;5491:5;5457:40;:::i;:::-;5516:5;-1:-1:-1;5573:2:258;5558:18;;5545:32;5586:42;5545:32;5586:42;:::i;:::-;5647:7;5637:17;;;5239:421;;;;;:::o;5665:539::-;5751:6;5759;5812:2;5800:9;5791:7;5787:23;5783:32;5780:52;;;5828:1;5825;5818:12;5780:52;5868:9;5855:23;5897:18;5938:2;5930:6;5927:14;5924:34;;;5954:1;5951;5944:12;5924:34;5977:49;6018:7;6009:6;5998:9;5994:22;5977:49;:::i;:::-;5967:59;;6079:2;6068:9;6064:18;6051:32;6035:48;;6108:2;6098:8;6095:16;6092:36;;;6124:1;6121;6114:12;6092:36;;6147:51;6190:7;6179:8;6168:9;6164:24;6147:51;:::i;:::-;6137:61;;;5665:539;;;;;:::o;6209:277::-;6296:6;6349:2;6337:9;6328:7;6324:23;6320:32;6317:52;;;6365:1;6362;6355:12;6317:52;6397:9;6391:16;6416:40;6450:5;6416:40;:::i;6849:127::-;6910:10;6905:3;6901:20;6898:1;6891:31;6941:4;6938:1;6931:15;6965:4;6962:1;6955:15;6981:297;-1:-1:-1;;;;;7117:10:258;;;7105;;;7101:27;;7140:12;;;7137:135;;;7194:10;7189:3;7185:20;7182:1;7175:31;7229:4;7226:1;7219:15;7257:4;7254:1;7247:15;7137:135;;6981:297;;;;:::o;7491:701::-;7688:6;7677:9;7670:25;7651:4;7714:2;7766:6;7759:14;7752:22;7747:2;7736:9;7732:18;7725:50;7811:2;7806;7795:9;7791:18;7784:30;7843:6;7837:13;7886:6;7881:2;7870:9;7866:18;7859:34;7911:1;7921:141;7935:6;7932:1;7929:13;7921:141;;;8031:14;;;8027:23;;8021:30;7996:17;;;8015:3;7992:27;7985:67;7950:10;;7921:141;;;7925:3;8112:1;8106:3;8097:6;8086:9;8082:22;8078:32;8071:43;8182:3;8175:2;8171:7;8166:2;8158:6;8154:15;8150:29;8139:9;8135:45;8131:55;8123:63;;;;7491:701;;;;;;:::o;8480:167::-;8558:13;;8611:10;8600:22;;8590:33;;8580:61;;8637:1;8634;8627:12;8580:61;8480:167;;;:::o;8652:206::-;8721:6;8774:2;8762:9;8753:7;8749:23;8745:32;8742:52;;;8790:1;8787;8780:12;8742:52;8813:39;8842:9;8813:39;:::i;9061:277::-;9128:6;9181:2;9169:9;9160:7;9156:23;9152:32;9149:52;;;9197:1;9194;9187:12;9149:52;9229:9;9223:16;9282:5;9275:13;9268:21;9261:5;9258:32;9248:60;;9304:1;9301;9294:12;9343:184;9413:6;9466:2;9454:9;9445:7;9441:23;9437:32;9434:52;;;9482:1;9479;9472:12;9434:52;-1:-1:-1;9505:16:258;;9343:184;-1:-1:-1;9343:184:258:o;10843:175::-;10921:13;;10974:18;10963:30;;10953:41;;10943:69;;11008:1;11005;10998:12;11023:192;11102:13;;-1:-1:-1;;;;;11144:46:258;;11134:57;;11124:85;;11205:1;11202;11195:12;11220:526;11290:5;11338:4;11326:9;11321:3;11317:19;11313:30;11310:50;;;11356:1;11353;11346:12;11310:50;11389:4;11383:11;11433:4;11425:6;11421:17;11504:6;11492:10;11489:22;11468:18;11456:10;11453:34;11450:62;11447:88;;;11515:18;;:::i;:::-;11551:4;11544:24;11586:6;-1:-1:-1;11586:6:258;11616:40;11646:9;11616:40;:::i;:::-;11608:6;11601:56;11690:49;11735:2;11724:9;11720:18;11690:49;:::i;:::-;11685:2;11677:6;11673:15;11666:74;;11220:526;;;;:::o;11751:1176::-;11962:6;11970;11978;11986;11994;12002;12046:9;12037:7;12033:23;12076:3;12072:2;12068:12;12065:32;;;12093:1;12090;12083:12;12065:32;12122:9;12116:16;12106:26;;12172:2;12161:9;12157:18;12151:25;12141:35;;12216:2;12205:9;12201:18;12195:25;12185:35;;12254:4;12248:2;12244:7;12240:2;12236:16;12232:27;12229:47;;;12272:1;12269;12262:12;12229:47;;12298:17;;:::i;:::-;12338:48;12382:2;12371:9;12367:18;12338:48;:::i;:::-;12331:5;12324:63;12419:49;12463:3;12452:9;12448:19;12419:49;:::i;:::-;12414:2;12407:5;12403:14;12396:73;12501:50;12545:4;12534:9;12530:20;12501:50;:::i;:::-;12496:2;12489:5;12485:14;12478:74;12584:49;12628:3;12617:9;12613:19;12584:49;:::i;:::-;12579:2;12572:5;12568:14;12561:73;12667:49;12711:3;12700:9;12696:19;12667:49;:::i;:::-;12661:3;12650:15;;12643:74;12654:5;-1:-1:-1;12760:71:258;12823:7;12817:3;12802:19;;12760:71;:::i;:::-;12750:81;;12850:71;12913:7;12907:3;12896:9;12892:19;12850:71;:::i;:::-;12840:81;;11751:1176;;;;;;;;:::o;13276:526::-;13382:6;13390;13398;13406;13414;13467:3;13455:9;13446:7;13442:23;13438:33;13435:53;;;13484:1;13481;13474:12;13435:53;13507:40;13537:9;13507:40;:::i;:::-;13497:50;;13566:49;13611:2;13600:9;13596:18;13566:49;:::i;:::-;13556:59;;13634:49;13679:2;13668:9;13664:18;13634:49;:::i;:::-;13624:59;;13702:49;13747:2;13736:9;13732:18;13702:49;:::i;:::-;13692:59;;13791:3;13780:9;13776:19;13770:26;13760:36;;13276:526;;;;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "63908": [
        {
          "start": 266,
          "length": 32
        },
        {
          "start": 1079,
          "length": 32
        }
      ],
      "63912": [
        {
          "start": 500,
          "length": 32
        },
        {
          "start": 613,
          "length": 32
        },
        {
          "start": 759,
          "length": 32
        },
        {
          "start": 814,
          "length": 32
        },
        {
          "start": 892,
          "length": 32
        },
        {
          "start": 944,
          "length": 32
        },
        {
          "start": 999,
          "length": 32
        },
        {
          "start": 1252,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ACCOUNT_FOR_INTEREST()": "19877557",
    "FRAX()": "b0e4556f",
    "assetOf(bytes)": "e170a9bf",
    "assetsUsed(bytes)": "aeffddde",
    "balanceOf(bytes)": "78415365",
    "callAddInterest(address)": "6dd659fd",
    "deposit(uint256,bytes,bytes)": "69445c31",
    "identifier()": "7998a1c4",
    "isDebt()": "89353a09",
    "lendFrax(address,uint256)": "726bb084",
    "redeemFraxShare(address,uint256)": "61b14c98",
    "revokeApproval(address,address)": "d3bfe76a",
    "slippage()": "3e032a3b",
    "withdraw(uint256,address,bytes,bytes)": "c9111bd7",
    "withdrawFrax(address,uint256)": "f815ada4",
    "withdrawableFrom(bytes,bytes)": "fa50e5d2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_accountForInterest\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"frax\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BaseAdaptor__ConstructorHealthFactorTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__ExternalReceiverBlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"BaseAdaptor__PricingNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__Slippage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserDepositsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserWithdrawsNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fToken\",\"type\":\"address\"}],\"name\":\"FTokenAdaptor__FTokenPositionsMustBeTracked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ACCOUNT_FOR_INTEREST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FRAX\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"assetOf\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetsUsed\",\"outputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFToken\",\"name\":\"fToken\",\"type\":\"address\"}],\"name\":\"callAddInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDebt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFToken\",\"name\":\"fToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToDeposit\",\"type\":\"uint256\"}],\"name\":\"lendFrax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFToken\",\"name\":\"fToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToRedeem\",\"type\":\"uint256\"}],\"name\":\"redeemFraxShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"revokeApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippage\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFToken\",\"name\":\"fToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdrawFrax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"withdrawableFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawableFrax\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"crispymangoes, 0xEinCodes\",\"details\":\"This adaptor is specifically for FraxLendPairV2 contracts.      To interact with a different version, inherit from this adaptor      and override the interface helper functions.\",\"kind\":\"dev\",\"methods\":{\"callAddInterest(address)\":{\"details\":\"A strategist might want to do this if a Frax Lend pair has not been interacted      in a while, and the strategist does not plan on interacting with it during a      rebalance.Calling this can increase the share price during the rebalance,      so a strategist should consider moving some assets into reserves.\"},\"deposit(uint256,bytes,bytes)\":{\"details\":\"configurationData is NOT used\",\"params\":{\"adaptorData\":\"adaptor data containing the abi encoded fToken\",\"assets\":\"the amount of assets to lend on FraxLend\"}},\"identifier()\":{\"details\":\"Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult.\"},\"lendFrax(address,uint256)\":{\"details\":\"Uses `_maxAvailable` helper function, see BaseAdaptor.sol\",\"params\":{\"amountToDeposit\":\"the amount of Frax to lend on FraxLend\",\"fToken\":\"the specified FraxLend Pair\"}},\"redeemFraxShare(address,uint256)\":{\"params\":{\"amountToRedeem\":\"the amount of Frax shares to redeem from FraxLend\",\"fToken\":\"the specified FraxLend Pair\"}},\"revokeApproval(address,address)\":{\"params\":{\"asset\":\"the ERC20 asset to revoke `spender`s approval for\",\"spender\":\"the address to revoke approval for\"}},\"withdraw(uint256,address,bytes,bytes)\":{\"details\":\"Important to verify that external receivers are allowed if receiver is not Cellar address.configurationData is NOT used\",\"params\":{\"adaptorData\":\"adaptor data containing the abi encoded fToken\",\"assets\":\"the amount of assets to withdraw from FraxLend\",\"receiver\":\"the address to send withdrawn assets to\"}},\"withdrawFrax(address,uint256)\":{\"details\":\"Used to withdraw an exact amount from Frax Lend.      Use `redeemFraxShare` to withdraw all.\",\"params\":{\"amountToWithdraw\":\"the amount of FRAX to withdraw from FraxLend\",\"fToken\":\"the specified FraxLend Pair\"}},\"withdrawableFrom(bytes,bytes)\":{\"details\":\"Compares FRAX supplied to FRAX borrowed to check for liquidity.      - If FRAX balance is greater than liquidity available, it returns the amount available.\"}},\"title\":\"FraxLend fToken Adaptor\",\"version\":1},\"userdoc\":{\"errors\":{\"BaseAdaptor__ConstructorHealthFactorTooLow()\":[{\"notice\":\"Attempted to set a constructor minimum health factor to a value         below `MINIMUM_CONSTRUCTOR_HEALTH_FACTOR()`.\"}],\"BaseAdaptor__ExternalReceiverBlocked()\":[{\"notice\":\"Attempted to specify an external receiver during a Cellar `callOnAdaptor` call.\"}],\"BaseAdaptor__PricingNotSupported(address)\":[{\"notice\":\"Attempted swap used unsupported output asset.\"}],\"BaseAdaptor__Slippage()\":[{\"notice\":\"Attempted swap has bad slippage.\"}],\"BaseAdaptor__UserDepositsNotAllowed()\":[{\"notice\":\"Attempted to deposit to a position where user deposits were not allowed.\"}],\"BaseAdaptor__UserWithdrawsNotAllowed()\":[{\"notice\":\"Attempted to withdraw from a position where user withdraws were not allowed.\"}],\"FTokenAdaptor__FTokenPositionsMustBeTracked(address)\":[{\"notice\":\"Attempted to interact with an fToken the Cellar is not using.\"}]},\"kind\":\"user\",\"methods\":{\"ACCOUNT_FOR_INTEREST()\":{\"notice\":\"This bool determines how this adaptor accounts for interest.         True: Account for pending interest to be paid when calling `balanceOf` or `withdrawableFrom`.         False: Do not account for pending interest to be paid when calling `balanceOf` or `withdrawableFrom`.\"},\"FRAX()\":{\"notice\":\"The FRAX contract on current network.For mainnet use 0x853d955aCEf822Db058eb8505911ED77F175b99e.\"},\"assetOf(bytes)\":{\"notice\":\"Returns FRAX.\"},\"assetsUsed(bytes)\":{\"notice\":\"When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup.\"},\"balanceOf(bytes)\":{\"notice\":\"Returns the cellar's balance of the FRAX position.\"},\"callAddInterest(address)\":{\"notice\":\"Allows a strategist to call `addInterest` on a Frax Pair they are using.\"},\"deposit(uint256,bytes,bytes)\":{\"notice\":\"Cellar must approve fToken to spend its assets, then call deposit to lend its assets.\"},\"isDebt()\":{\"notice\":\"This adaptor returns collateral, and not debt.\"},\"lendFrax(address,uint256)\":{\"notice\":\"Allows strategists to lend FRAX on FraxLend.\"},\"redeemFraxShare(address,uint256)\":{\"notice\":\"Allows strategists to redeem Frax shares from FraxLend.\"},\"revokeApproval(address,address)\":{\"notice\":\"Allows strategists to zero out an approval for a given `asset`.\"},\"slippage()\":{\"notice\":\"Max possible slippage when making a swap router swap.\"},\"withdraw(uint256,address,bytes,bytes)\":{\"notice\":\"Cellars must withdraw from FraxLend, then transfer assets to receiver.\"},\"withdrawFrax(address,uint256)\":{\"notice\":\"Allows strategists to withdraw FRAX from FraxLend.\"},\"withdrawableFrom(bytes,bytes)\":{\"notice\":\"Returns the amount of FRAX that can be withdrawn.\"}},\"notice\":\"Allows Cellars to lend FRAX to FraxLend pairs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/adaptors/Frax/FTokenAdaptor.sol\":\"FTokenAdaptor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@balancer-labs/=lib/balancer-v2-monorepo/../../node_modules/@balancer-labs/\",\":@balancer/=lib/balancer-v2-monorepo/pkg/\",\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":@uniswapV3C/=lib/v3-core/contracts/\",\":@uniswapV3P/=lib/v3-periphery/contracts/\",\":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/\",\":balancer-v2-monorepo/=lib/balancer-v2-monorepo/\",\":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/\",\":compound-protocol/=lib/compound-protocol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":v3-core.git/=lib/v3-core.git/contracts/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery.git/=lib/v3-periphery.git/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53\",\"dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM\"]},\"src/Registry.sol\":{\"keccak256\":\"0x797eca06ed2adc548ca9bcc2b5565437e50862807f1014fcb90f733c4ecc9e47\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d11adaa81c94efbb8ad46c031888d7a9e3a2fb41e61356f7423b0c1be8a3189\",\"dweb:/ipfs/QmNvQ4qg7p7zphqctgKyQeuAMVXkcA8pTtb2XgNiBKf2jK\"]},\"src/base/Cellar.sol\":{\"keccak256\":\"0xcc435fc48edc29fa9119d9e7bbeea84e0e210368d525656a0f6d2dd3e6186f47\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1ae5e4dfdaa91b2fc59574669951f009f74e70682a2b058fd99c0df3c8b9058\",\"dweb:/ipfs/QmNigVHjunwDjvjQAp9NxgR6vRsGu8fzrjH7EgE4T3bdWs\"]},\"src/base/ERC20.sol\":{\"keccak256\":\"0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4\",\"dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf\"]},\"src/base/ERC4626.sol\":{\"keccak256\":\"0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469\",\"dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE\"]},\"src/base/Multicall.sol\":{\"keccak256\":\"0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c\",\"dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K\"]},\"src/base/SafeTransferLib.sol\":{\"keccak256\":\"0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a\",\"dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3\"]},\"src/interfaces/IMulticall.sol\":{\"keccak256\":\"0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0\",\"dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5\"]},\"src/interfaces/external/Frax/IFToken.sol\":{\"keccak256\":\"0x61fb3b799a3acd76e0afcd6c68a5d2baf0f2ee80b4833d093273888459849137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c48e178796d1f6cfdf475aa41ea21435007db6187735ee27ff2437670d2c7a04\",\"dweb:/ipfs/QmPWFfTnbDP8xYWhzCJDsKDqyUFt6vgJDNdWrp2Hdig6TX\"]},\"src/interfaces/external/IChainlinkAggregator.sol\":{\"keccak256\":\"0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2\",\"dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs\"]},\"src/interfaces/external/IGravity.sol\":{\"keccak256\":\"0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51\",\"dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c\"]},\"src/interfaces/external/IUniswapV2Router02.sol\":{\"keccak256\":\"0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a\",\"dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo\"]},\"src/interfaces/external/IUniswapV3Router.sol\":{\"keccak256\":\"0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd\",\"dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK\"]},\"src/interfaces/external/UniswapV3Pool.sol\":{\"keccak256\":\"0xf6a71bfbc0665b1d0aad7148b685f3b2254e1be2a3672c2c6671b7fc20db26bb\",\"urls\":[\"bzz-raw://393871fdf75656c49a3bb83bc8110a93af2cbd805df9cc6574a058f3cbf100a9\",\"dweb:/ipfs/QmZugnPctGBiWkFjXXtiKy3AQTWphA9tjZmSBVZRMg9urh\"]},\"src/modules/adaptors/BaseAdaptor.sol\":{\"keccak256\":\"0xc3d6ce867d0df59d4f4ea027bcbc8d982a89d782c648753d3ef149e1679afc5c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://98eed0613a68c44fb9df313b345ae0b984934cb677f144a1a5a2d0efe604c4ee\",\"dweb:/ipfs/Qmc6dt8S571ibT3DLGqFYRKKk2tgjADi8qpN6kDgm8N7sd\"]},\"src/modules/adaptors/Frax/FTokenAdaptor.sol\":{\"keccak256\":\"0xafd653170df56113515ca312fe08812d84a1993a76c47e02d364ff1871b5eac0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f882762aea2120932d0616ff33513d224b73883365f18e75c469bd667f40cd36\",\"dweb:/ipfs/QmfJsEcx24waq33VYMpTSja4jrXWUhr5KgU5ANec7D5pQz\"]},\"src/modules/price-router/Extensions/Extension.sol\":{\"keccak256\":\"0xd51d51474759b8417232e02290814bc7a06223ad5e57c93459d90a1101db558d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b5670880f335e48eda45ae95d9faa9a009885613c78634ab66114a2f842f1b1\",\"dweb:/ipfs/QmNddDkfvh36LtqrSVkDYKtxyWLv2Heb3hTrBVcUZJxJRo\"]},\"src/modules/price-router/PriceRouter.sol\":{\"keccak256\":\"0xa2a1aaeef9be7a72077cc30f1f408dae924ee4b7e25d2ee85491622410b821b9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://627e4d92a619543f08f916ec6279252d577adbd120fa2e8c2a8635d70c5a7a66\",\"dweb:/ipfs/QmTu6mJiHBUFFEXHRE6KpxE5J2W72fJWdMuvaSopD1Gk1K\"]},\"src/modules/swap-router/SwapRouter.sol\":{\"keccak256\":\"0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818\",\"dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312\",\"dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r\"]},\"src/utils/Uint32Array.sol\":{\"keccak256\":\"0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944\",\"dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_accountForInterest",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "frax",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__ConstructorHealthFactorTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__ExternalReceiverBlocked"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BaseAdaptor__PricingNotSupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__Slippage"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserDepositsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserWithdrawsNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "fToken",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "FTokenAdaptor__FTokenPositionsMustBeTracked"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ACCOUNT_FOR_INTEREST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FRAX",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetOf",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetsUsed",
          "outputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "assets",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IFToken",
              "name": "fToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "callAddInterest"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "identifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isDebt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IFToken",
              "name": "fToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToDeposit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lendFrax"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFToken",
              "name": "fToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToRedeem",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemFraxShare"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeApproval"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "slippage",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFToken",
              "name": "fToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToWithdraw",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFrax"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableFrom",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "withdrawableFrax",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "callAddInterest(address)": {
            "details": "A strategist might want to do this if a Frax Lend pair has not been interacted      in a while, and the strategist does not plan on interacting with it during a      rebalance.Calling this can increase the share price during the rebalance,      so a strategist should consider moving some assets into reserves."
          },
          "deposit(uint256,bytes,bytes)": {
            "details": "configurationData is NOT used",
            "params": {
              "adaptorData": "adaptor data containing the abi encoded fToken",
              "assets": "the amount of assets to lend on FraxLend"
            }
          },
          "identifier()": {
            "details": "Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult."
          },
          "lendFrax(address,uint256)": {
            "details": "Uses `_maxAvailable` helper function, see BaseAdaptor.sol",
            "params": {
              "amountToDeposit": "the amount of Frax to lend on FraxLend",
              "fToken": "the specified FraxLend Pair"
            }
          },
          "redeemFraxShare(address,uint256)": {
            "params": {
              "amountToRedeem": "the amount of Frax shares to redeem from FraxLend",
              "fToken": "the specified FraxLend Pair"
            }
          },
          "revokeApproval(address,address)": {
            "params": {
              "asset": "the ERC20 asset to revoke `spender`s approval for",
              "spender": "the address to revoke approval for"
            }
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "details": "Important to verify that external receivers are allowed if receiver is not Cellar address.configurationData is NOT used",
            "params": {
              "adaptorData": "adaptor data containing the abi encoded fToken",
              "assets": "the amount of assets to withdraw from FraxLend",
              "receiver": "the address to send withdrawn assets to"
            }
          },
          "withdrawFrax(address,uint256)": {
            "details": "Used to withdraw an exact amount from Frax Lend.      Use `redeemFraxShare` to withdraw all.",
            "params": {
              "amountToWithdraw": "the amount of FRAX to withdraw from FraxLend",
              "fToken": "the specified FraxLend Pair"
            }
          },
          "withdrawableFrom(bytes,bytes)": {
            "details": "Compares FRAX supplied to FRAX borrowed to check for liquidity.      - If FRAX balance is greater than liquidity available, it returns the amount available."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ACCOUNT_FOR_INTEREST()": {
            "notice": "This bool determines how this adaptor accounts for interest.         True: Account for pending interest to be paid when calling `balanceOf` or `withdrawableFrom`.         False: Do not account for pending interest to be paid when calling `balanceOf` or `withdrawableFrom`."
          },
          "FRAX()": {
            "notice": "The FRAX contract on current network.For mainnet use 0x853d955aCEf822Db058eb8505911ED77F175b99e."
          },
          "assetOf(bytes)": {
            "notice": "Returns FRAX."
          },
          "assetsUsed(bytes)": {
            "notice": "When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup."
          },
          "balanceOf(bytes)": {
            "notice": "Returns the cellar's balance of the FRAX position."
          },
          "callAddInterest(address)": {
            "notice": "Allows a strategist to call `addInterest` on a Frax Pair they are using."
          },
          "deposit(uint256,bytes,bytes)": {
            "notice": "Cellar must approve fToken to spend its assets, then call deposit to lend its assets."
          },
          "isDebt()": {
            "notice": "This adaptor returns collateral, and not debt."
          },
          "lendFrax(address,uint256)": {
            "notice": "Allows strategists to lend FRAX on FraxLend."
          },
          "redeemFraxShare(address,uint256)": {
            "notice": "Allows strategists to redeem Frax shares from FraxLend."
          },
          "revokeApproval(address,address)": {
            "notice": "Allows strategists to zero out an approval for a given `asset`."
          },
          "slippage()": {
            "notice": "Max possible slippage when making a swap router swap."
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "notice": "Cellars must withdraw from FraxLend, then transfer assets to receiver."
          },
          "withdrawFrax(address,uint256)": {
            "notice": "Allows strategists to withdraw FRAX from FraxLend."
          },
          "withdrawableFrom(bytes,bytes)": {
            "notice": "Returns the amount of FRAX that can be withdrawn."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@balancer-labs/=lib/balancer-v2-monorepo/../../node_modules/@balancer-labs/",
        ":@balancer/=lib/balancer-v2-monorepo/pkg/",
        ":@chainlink/=lib/chainlink/",
        ":@ds-test/=lib/forge-std/lib/ds-test/src/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":@uniswapV3C/=lib/v3-core/contracts/",
        ":@uniswapV3P/=lib/v3-periphery/contracts/",
        ":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/",
        ":balancer-v2-monorepo/=lib/balancer-v2-monorepo/",
        ":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/",
        ":compound-protocol/=lib/compound-protocol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-core.git/=lib/v3-core.git/contracts/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery.git/=lib/v3-periphery.git/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/adaptors/Frax/FTokenAdaptor.sol": "FTokenAdaptor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "keccak256": "0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7",
        "urls": [
          "bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465",
          "dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2",
        "urls": [
          "bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b",
          "dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028",
        "urls": [
          "bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf",
          "dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb",
        "urls": [
          "bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929",
          "dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b",
        "urls": [
          "bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53",
          "dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/Registry.sol": {
        "keccak256": "0x797eca06ed2adc548ca9bcc2b5565437e50862807f1014fcb90f733c4ecc9e47",
        "urls": [
          "bzz-raw://5d11adaa81c94efbb8ad46c031888d7a9e3a2fb41e61356f7423b0c1be8a3189",
          "dweb:/ipfs/QmNvQ4qg7p7zphqctgKyQeuAMVXkcA8pTtb2XgNiBKf2jK"
        ],
        "license": "Apache-2.0"
      },
      "src/base/Cellar.sol": {
        "keccak256": "0xcc435fc48edc29fa9119d9e7bbeea84e0e210368d525656a0f6d2dd3e6186f47",
        "urls": [
          "bzz-raw://a1ae5e4dfdaa91b2fc59574669951f009f74e70682a2b058fd99c0df3c8b9058",
          "dweb:/ipfs/QmNigVHjunwDjvjQAp9NxgR6vRsGu8fzrjH7EgE4T3bdWs"
        ],
        "license": "Apache-2.0"
      },
      "src/base/ERC20.sol": {
        "keccak256": "0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02",
        "urls": [
          "bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4",
          "dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ERC4626.sol": {
        "keccak256": "0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7",
        "urls": [
          "bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469",
          "dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/Multicall.sol": {
        "keccak256": "0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9",
        "urls": [
          "bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c",
          "dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/SafeTransferLib.sol": {
        "keccak256": "0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324",
        "urls": [
          "bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a",
          "dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IMulticall.sol": {
        "keccak256": "0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e",
        "urls": [
          "bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0",
          "dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/Frax/IFToken.sol": {
        "keccak256": "0x61fb3b799a3acd76e0afcd6c68a5d2baf0f2ee80b4833d093273888459849137",
        "urls": [
          "bzz-raw://c48e178796d1f6cfdf475aa41ea21435007db6187735ee27ff2437670d2c7a04",
          "dweb:/ipfs/QmPWFfTnbDP8xYWhzCJDsKDqyUFt6vgJDNdWrp2Hdig6TX"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/IChainlinkAggregator.sol": {
        "keccak256": "0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d",
        "urls": [
          "bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2",
          "dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IGravity.sol": {
        "keccak256": "0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11",
        "urls": [
          "bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51",
          "dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IUniswapV2Router02.sol": {
        "keccak256": "0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f",
        "urls": [
          "bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a",
          "dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IUniswapV3Router.sol": {
        "keccak256": "0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355",
        "urls": [
          "bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd",
          "dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/UniswapV3Pool.sol": {
        "keccak256": "0xf6a71bfbc0665b1d0aad7148b685f3b2254e1be2a3672c2c6671b7fc20db26bb",
        "urls": [
          "bzz-raw://393871fdf75656c49a3bb83bc8110a93af2cbd805df9cc6574a058f3cbf100a9",
          "dweb:/ipfs/QmZugnPctGBiWkFjXXtiKy3AQTWphA9tjZmSBVZRMg9urh"
        ],
        "license": null
      },
      "src/modules/adaptors/BaseAdaptor.sol": {
        "keccak256": "0xc3d6ce867d0df59d4f4ea027bcbc8d982a89d782c648753d3ef149e1679afc5c",
        "urls": [
          "bzz-raw://98eed0613a68c44fb9df313b345ae0b984934cb677f144a1a5a2d0efe604c4ee",
          "dweb:/ipfs/Qmc6dt8S571ibT3DLGqFYRKKk2tgjADi8qpN6kDgm8N7sd"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/adaptors/Frax/FTokenAdaptor.sol": {
        "keccak256": "0xafd653170df56113515ca312fe08812d84a1993a76c47e02d364ff1871b5eac0",
        "urls": [
          "bzz-raw://f882762aea2120932d0616ff33513d224b73883365f18e75c469bd667f40cd36",
          "dweb:/ipfs/QmfJsEcx24waq33VYMpTSja4jrXWUhr5KgU5ANec7D5pQz"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/price-router/Extensions/Extension.sol": {
        "keccak256": "0xd51d51474759b8417232e02290814bc7a06223ad5e57c93459d90a1101db558d",
        "urls": [
          "bzz-raw://0b5670880f335e48eda45ae95d9faa9a009885613c78634ab66114a2f842f1b1",
          "dweb:/ipfs/QmNddDkfvh36LtqrSVkDYKtxyWLv2Heb3hTrBVcUZJxJRo"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/price-router/PriceRouter.sol": {
        "keccak256": "0xa2a1aaeef9be7a72077cc30f1f408dae924ee4b7e25d2ee85491622410b821b9",
        "urls": [
          "bzz-raw://627e4d92a619543f08f916ec6279252d577adbd120fa2e8c2a8635d70c5a7a66",
          "dweb:/ipfs/QmTu6mJiHBUFFEXHRE6KpxE5J2W72fJWdMuvaSopD1Gk1K"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/swap-router/SwapRouter.sol": {
        "keccak256": "0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80",
        "urls": [
          "bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818",
          "dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f",
        "urls": [
          "bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312",
          "dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Uint32Array.sol": {
        "keccak256": "0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9",
        "urls": [
          "bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944",
          "dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/adaptors/Frax/FTokenAdaptor.sol",
    "id": 64509,
    "exportedSymbols": {
      "BaseAdaptor": [
        61644
      ],
      "Cellar": [
        44434
      ],
      "ERC20": [
        45747
      ],
      "FTokenAdaptor": [
        64508
      ],
      "IFToken": [
        49493
      ],
      "Math": [
        74811
      ],
      "PriceRouter": [
        73035
      ],
      "SafeTransferLib": [
        46498
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:14539:195",
    "nodes": [
      {
        "id": 63881,
        "nodeType": "PragmaDirective",
        "src": "39:23:195",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 63888,
        "nodeType": "ImportDirective",
        "src": "64:118:195",
        "nodes": [],
        "absolutePath": "src/modules/adaptors/BaseAdaptor.sol",
        "file": "src/modules/adaptors/BaseAdaptor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64509,
        "sourceUnit": 61645,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63882,
              "name": "BaseAdaptor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61644,
              "src": "73:11:195",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 63883,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45747,
              "src": "86:5:195",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 63884,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46498,
              "src": "93:15:195",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 63885,
              "name": "Cellar",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44434,
              "src": "110:6:195",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 63886,
              "name": "PriceRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 73035,
              "src": "118:11:195",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 63887,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 74811,
              "src": "131:4:195",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63890,
        "nodeType": "ImportDirective",
        "src": "183:67:195",
        "nodes": [],
        "absolutePath": "src/interfaces/external/Frax/IFToken.sol",
        "file": "src/interfaces/external/Frax/IFToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64509,
        "sourceUnit": 49494,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63889,
              "name": "IFToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49493,
              "src": "192:7:195",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64508,
        "nodeType": "ContractDefinition",
        "src": "581:13996:195",
        "nodes": [
          {
            "id": 63897,
            "nodeType": "UsingForDirective",
            "src": "625:32:195",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 63894,
              "name": "SafeTransferLib",
              "nameLocations": [
                "631:15:195"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46498,
              "src": "631:15:195"
            },
            "typeName": {
              "id": 63896,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 63895,
                "name": "ERC20",
                "nameLocations": [
                  "651:5:195"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45747,
                "src": "651:5:195"
              },
              "referencedDeclaration": 45747,
              "src": "651:5:195",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$45747",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 63900,
            "nodeType": "UsingForDirective",
            "src": "662:23:195",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 63898,
              "name": "Math",
              "nameLocations": [
                "668:4:195"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 74811,
              "src": "668:4:195"
            },
            "typeName": {
              "id": 63899,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "677:7:195",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 63905,
            "nodeType": "ErrorDefinition",
            "src": "1159:66:195",
            "nodes": [],
            "documentation": {
              "id": 63901,
              "nodeType": "StructuredDocumentation",
              "src": "1066:88:195",
              "text": " @notice Attempted to interact with an fToken the Cellar is not using."
            },
            "errorSelector": "e3ce2dd0",
            "name": "FTokenAdaptor__FTokenPositionsMustBeTracked",
            "nameLocation": "1165:43:195",
            "parameters": {
              "id": 63904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63903,
                  "mutability": "mutable",
                  "name": "fToken",
                  "nameLocation": "1217:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 63905,
                  "src": "1209:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63902,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1209:7:195",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1208:16:195"
            }
          },
          {
            "id": 63908,
            "nodeType": "VariableDeclaration",
            "src": "1549:42:195",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 63906,
              "nodeType": "StructuredDocumentation",
              "src": "1231:313:195",
              "text": " @notice This bool determines how this adaptor accounts for interest.\n         True: Account for pending interest to be paid when calling `balanceOf` or `withdrawableFrom`.\n         False: Do not account for pending interest to be paid when calling `balanceOf` or `withdrawableFrom`."
            },
            "functionSelector": "19877557",
            "mutability": "immutable",
            "name": "ACCOUNT_FOR_INTEREST",
            "nameLocation": "1571:20:195",
            "scope": 64508,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 63907,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1549:4:195",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 63912,
            "nodeType": "VariableDeclaration",
            "src": "1742:27:195",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 63909,
              "nodeType": "StructuredDocumentation",
              "src": "1598:139:195",
              "text": " @notice The FRAX contract on current network.\n @notice For mainnet use 0x853d955aCEf822Db058eb8505911ED77F175b99e."
            },
            "functionSelector": "b0e4556f",
            "mutability": "immutable",
            "name": "FRAX",
            "nameLocation": "1765:4:195",
            "scope": 64508,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$45747",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 63911,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 63910,
                "name": "ERC20",
                "nameLocations": [
                  "1742:5:195"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45747,
                "src": "1742:5:195"
              },
              "referencedDeclaration": 45747,
              "src": "1742:5:195",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$45747",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 63930,
            "nodeType": "FunctionDefinition",
            "src": "1776:139:195",
            "nodes": [],
            "body": {
              "id": 63929,
              "nodeType": "Block",
              "src": "1828:87:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 63921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63919,
                      "name": "ACCOUNT_FOR_INTEREST",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63908,
                      "src": "1838:20:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 63920,
                      "name": "_accountForInterest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63914,
                      "src": "1861:19:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1838:42:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63922,
                  "nodeType": "ExpressionStatement",
                  "src": "1838:42:195"
                },
                {
                  "expression": {
                    "id": 63927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63923,
                      "name": "FRAX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63912,
                      "src": "1890:4:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$45747",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 63925,
                          "name": "frax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63916,
                          "src": "1903:4:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 63924,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45747,
                        "src": "1897:5:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 63926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1897:11:195",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$45747",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1890:18:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 63928,
                  "nodeType": "ExpressionStatement",
                  "src": "1890:18:195"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 63917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63914,
                  "mutability": "mutable",
                  "name": "_accountForInterest",
                  "nameLocation": "1793:19:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 63930,
                  "src": "1788:24:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 63913,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:4:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63916,
                  "mutability": "mutable",
                  "name": "frax",
                  "nameLocation": "1822:4:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 63930,
                  "src": "1814:12:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1814:7:195",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1787:40:195"
            },
            "returnParameters": {
              "id": 63918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1828:0:195"
            },
            "scope": 64508,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63945,
            "nodeType": "FunctionDefinition",
            "src": "2334:147:195",
            "nodes": [],
            "body": {
              "id": 63944,
              "nodeType": "Block",
              "src": "2403:78:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "467261784c656e642066546f6b656e2041646170746f72205620302e31",
                            "id": 63940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2441:31:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4866ded692ffaf39119dc18c4adc243ed22759f89d3dd9b3d61c79ed5195534b",
                              "typeString": "literal_string \"FraxLend fToken Adaptor V 0.1\""
                            },
                            "value": "FraxLend fToken Adaptor V 0.1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_4866ded692ffaf39119dc18c4adc243ed22759f89d3dd9b3d61c79ed5195534b",
                              "typeString": "literal_string \"FraxLend fToken Adaptor V 0.1\""
                            }
                          ],
                          "expression": {
                            "id": 63938,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2430:3:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 63939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2434:6:195",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2430:10:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 63941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2430:43:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 63937,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2420:9:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 63942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:54:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 63936,
                  "id": 63943,
                  "nodeType": "Return",
                  "src": "2413:61:195"
                }
              ]
            },
            "baseFunctions": [
              61410
            ],
            "documentation": {
              "id": 63931,
              "nodeType": "StructuredDocumentation",
              "src": "2033:296:195",
              "text": " @dev Identifier unique to this adaptor for a shared registry.\n Normally the identifier would just be the address of this contract, but this\n Identifier is needed during Cellar Delegate Call Operations, so getting the address\n of the adaptor is more difficult."
            },
            "functionSelector": "7998a1c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "identifier",
            "nameLocation": "2343:10:195",
            "overrides": {
              "id": 63933,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2376:8:195"
            },
            "parameters": {
              "id": 63932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2353:2:195"
            },
            "returnParameters": {
              "id": 63936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63935,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63945,
                  "src": "2394:7:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 63934,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2394:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2393:9:195"
            },
            "scope": 64508,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 63994,
            "nodeType": "FunctionDefinition",
            "src": "2901:398:195",
            "nodes": [],
            "body": {
              "id": 63993,
              "nodeType": "Block",
              "src": "2990:309:195",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63958
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63958,
                      "mutability": "mutable",
                      "name": "fToken",
                      "nameLocation": "3048:6:195",
                      "nodeType": "VariableDeclaration",
                      "scope": 63993,
                      "src": "3040:14:195",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFToken_$49493",
                        "typeString": "contract IFToken"
                      },
                      "typeName": {
                        "id": 63957,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63956,
                          "name": "IFToken",
                          "nameLocations": [
                            "3040:7:195"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49493,
                          "src": "3040:7:195"
                        },
                        "referencedDeclaration": 49493,
                        "src": "3040:7:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63965,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 63961,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63950,
                        "src": "3068:11:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 63962,
                            "name": "IFToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49493,
                            "src": "3082:7:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFToken_$49493_$",
                              "typeString": "type(contract IFToken)"
                            }
                          }
                        ],
                        "id": 63963,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3081:9:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFToken_$49493_$",
                          "typeString": "type(contract IFToken)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_IFToken_$49493_$",
                          "typeString": "type(contract IFToken)"
                        }
                      ],
                      "expression": {
                        "id": 63959,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3057:3:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 63960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3061:6:195",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3057:10:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 63964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3057:34:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3040:51:195"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63971,
                            "name": "fToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63958,
                            "src": "3126:6:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFToken_$49493",
                              "typeString": "contract IFToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IFToken_$49493",
                              "typeString": "contract IFToken"
                            }
                          ],
                          "id": 63970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3118:7:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63969,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3118:7:195",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3118:15:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63973,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63948,
                        "src": "3135:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63966,
                        "name": "FRAX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63912,
                        "src": "3101:4:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 63968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3106:11:195",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46497,
                      "src": "3101:16:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$45747_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 63974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3101:41:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63975,
                  "nodeType": "ExpressionStatement",
                  "src": "3101:41:195"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63977,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63958,
                        "src": "3161:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      {
                        "id": 63978,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63948,
                        "src": "3169:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 63981,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3185:4:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                              "typeString": "contract FTokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                              "typeString": "contract FTokenAdaptor"
                            }
                          ],
                          "id": 63980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3177:7:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63979,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3177:7:195",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3177:13:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63976,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64357,
                      "src": "3152:8:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IFToken_$49493_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract IFToken,uint256,address)"
                      }
                    },
                    "id": 63983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3152:39:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63984,
                  "nodeType": "ExpressionStatement",
                  "src": "3152:39:195"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63986,
                        "name": "FRAX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63912,
                        "src": "3270:4:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 63989,
                            "name": "fToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63958,
                            "src": "3284:6:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFToken_$49493",
                              "typeString": "contract IFToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IFToken_$49493",
                              "typeString": "contract IFToken"
                            }
                          ],
                          "id": 63988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3276:7:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63987,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3276:7:195",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3276:15:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63985,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61585,
                      "src": "3246:23:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 63991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3246:46:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63992,
                  "nodeType": "ExpressionStatement",
                  "src": "3246:46:195"
                }
              ]
            },
            "baseFunctions": [
              61454
            ],
            "documentation": {
              "id": 63946,
              "nodeType": "StructuredDocumentation",
              "src": "2607:289:195",
              "text": " @notice Cellar must approve fToken to spend its assets, then call deposit to lend its assets.\n @param assets the amount of assets to lend on FraxLend\n @param adaptorData adaptor data containing the abi encoded fToken\n @dev configurationData is NOT used"
            },
            "functionSelector": "69445c31",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2910:7:195",
            "overrides": {
              "id": 63954,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2981:8:195"
            },
            "parameters": {
              "id": 63953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63948,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "2926:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 63994,
                  "src": "2918:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2918:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63950,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "2947:11:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 63994,
                  "src": "2934:24:195",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 63949,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2934:5:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63952,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63994,
                  "src": "2960:12:195",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 63951,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2960:5:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2917:56:195"
            },
            "returnParameters": {
              "id": 63955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2990:0:195"
            },
            "scope": 64508,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64032,
            "nodeType": "FunctionDefinition",
            "src": "3756:357:195",
            "nodes": [],
            "body": {
              "id": 64031,
              "nodeType": "Block",
              "src": "3864:249:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64008,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63999,
                        "src": "3937:8:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64007,
                      "name": "_externalReceiverCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61611,
                      "src": "3914:22:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 64009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3914:32:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64010,
                  "nodeType": "ExpressionStatement",
                  "src": "3914:32:195"
                },
                {
                  "assignments": [
                    64013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64013,
                      "mutability": "mutable",
                      "name": "fToken",
                      "nameLocation": "4003:6:195",
                      "nodeType": "VariableDeclaration",
                      "scope": 64031,
                      "src": "3995:14:195",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFToken_$49493",
                        "typeString": "contract IFToken"
                      },
                      "typeName": {
                        "id": 64012,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64011,
                          "name": "IFToken",
                          "nameLocations": [
                            "3995:7:195"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49493,
                          "src": "3995:7:195"
                        },
                        "referencedDeclaration": 49493,
                        "src": "3995:7:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64020,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64016,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64001,
                        "src": "4023:11:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 64017,
                            "name": "IFToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49493,
                            "src": "4037:7:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFToken_$49493_$",
                              "typeString": "type(contract IFToken)"
                            }
                          }
                        ],
                        "id": 64018,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4036:9:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFToken_$49493_$",
                          "typeString": "type(contract IFToken)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_IFToken_$49493_$",
                          "typeString": "type(contract IFToken)"
                        }
                      ],
                      "expression": {
                        "id": 64014,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4012:3:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 64015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4016:6:195",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4012:10:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 64019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4012:34:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3995:51:195"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64022,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64013,
                        "src": "4066:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      {
                        "id": 64023,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63997,
                        "src": "4074:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 64024,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63999,
                        "src": "4082:8:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64027,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4100:4:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                              "typeString": "contract FTokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                              "typeString": "contract FTokenAdaptor"
                            }
                          ],
                          "id": 64026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4092:7:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64025,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4092:7:195",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4092:13:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64021,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64379,
                      "src": "4056:9:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IFToken_$49493_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (contract IFToken,uint256,address,address)"
                      }
                    },
                    "id": 64029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4056:50:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64030,
                  "nodeType": "ExpressionStatement",
                  "src": "4056:50:195"
                }
              ]
            },
            "baseFunctions": [
              61466
            ],
            "documentation": {
              "id": 63995,
              "nodeType": "StructuredDocumentation",
              "src": "3305:446:195",
              "text": " @notice Cellars must withdraw from FraxLend, then transfer assets to receiver.\n @dev Important to verify that external receivers are allowed if receiver is not Cellar address.\n @param assets the amount of assets to withdraw from FraxLend\n @param receiver the address to send withdrawn assets to\n @param adaptorData adaptor data containing the abi encoded fToken\n @dev configurationData is NOT used"
            },
            "functionSelector": "c9111bd7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "3765:8:195",
            "overrides": {
              "id": 64005,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3855:8:195"
            },
            "parameters": {
              "id": 64004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63997,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "3782:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64032,
                  "src": "3774:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3774:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63999,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3798:8:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64032,
                  "src": "3790:16:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3790:7:195",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64001,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "3821:11:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64032,
                  "src": "3808:24:195",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64000,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3808:5:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64003,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64032,
                  "src": "3834:12:195",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64002,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3834:5:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3773:74:195"
            },
            "returnParameters": {
              "id": 64006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3864:0:195"
            },
            "scope": 64508,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64096,
            "nodeType": "FunctionDefinition",
            "src": "4376:636:195",
            "nodes": [],
            "body": {
              "id": 64095,
              "nodeType": "Block",
              "src": "4520:492:195",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    64045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64045,
                      "mutability": "mutable",
                      "name": "fToken",
                      "nameLocation": "4538:6:195",
                      "nodeType": "VariableDeclaration",
                      "scope": 64095,
                      "src": "4530:14:195",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFToken_$49493",
                        "typeString": "contract IFToken"
                      },
                      "typeName": {
                        "id": 64044,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64043,
                          "name": "IFToken",
                          "nameLocations": [
                            "4530:7:195"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49493,
                          "src": "4530:7:195"
                        },
                        "referencedDeclaration": 49493,
                        "src": "4530:7:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64052,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64048,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64035,
                        "src": "4558:11:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 64049,
                            "name": "IFToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49493,
                            "src": "4572:7:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFToken_$49493_$",
                              "typeString": "type(contract IFToken)"
                            }
                          }
                        ],
                        "id": 64050,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4571:9:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFToken_$49493_$",
                          "typeString": "type(contract IFToken)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_IFToken_$49493_$",
                          "typeString": "type(contract IFToken)"
                        }
                      ],
                      "expression": {
                        "id": 64046,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4547:3:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 64047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4551:6:195",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4547:10:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 64051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4547:34:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4530:51:195"
                },
                {
                  "assignments": [
                    64054,
                    null,
                    64056,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64054,
                      "mutability": "mutable",
                      "name": "totalFraxSupplied",
                      "nameLocation": "4600:17:195",
                      "nodeType": "VariableDeclaration",
                      "scope": 64095,
                      "src": "4592:25:195",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 64053,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4592:7:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 64056,
                      "mutability": "mutable",
                      "name": "totalFraxBorrowed",
                      "nameLocation": "4629:17:195",
                      "nodeType": "VariableDeclaration",
                      "scope": 64095,
                      "src": "4621:25:195",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 64055,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4621:7:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 64060,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64058,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64045,
                        "src": "4673:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      ],
                      "id": 64057,
                      "name": "_getPairAccounting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64493,
                      "src": "4654:18:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IFToken_$49493_$returns$_t_uint128_$_t_uint128_$_t_uint128_$_t_uint128_$_t_uint256_$",
                        "typeString": "function (contract IFToken) view returns (uint128,uint128,uint128,uint128,uint256)"
                      }
                    },
                    "id": 64059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4654:26:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$_t_uint128_$_t_uint256_$",
                      "typeString": "tuple(uint128,uint128,uint128,uint128,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4591:89:195"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 64063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64061,
                      "name": "totalFraxBorrowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64056,
                      "src": "4694:17:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 64062,
                      "name": "totalFraxSupplied",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64054,
                      "src": "4715:17:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "4694:38:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64066,
                  "nodeType": "IfStatement",
                  "src": "4690:52:195",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 64064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4741:1:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 64042,
                    "id": 64065,
                    "nodeType": "Return",
                    "src": "4734:8:195"
                  }
                },
                {
                  "assignments": [
                    64068
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64068,
                      "mutability": "mutable",
                      "name": "liquidFrax",
                      "nameLocation": "4760:10:195",
                      "nodeType": "VariableDeclaration",
                      "scope": 64095,
                      "src": "4752:18:195",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64067,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4752:7:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64072,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 64071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64069,
                      "name": "totalFraxSupplied",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64054,
                      "src": "4773:17:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 64070,
                      "name": "totalFraxBorrowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64056,
                      "src": "4793:17:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "4773:37:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4752:58:195"
                },
                {
                  "assignments": [
                    64074
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64074,
                      "mutability": "mutable",
                      "name": "fraxBalance",
                      "nameLocation": "4828:11:195",
                      "nodeType": "VariableDeclaration",
                      "scope": 64095,
                      "src": "4820:19:195",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64073,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4820:7:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64085,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64076,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64045,
                        "src": "4857:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64078,
                            "name": "fToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64045,
                            "src": "4876:6:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFToken_$49493",
                              "typeString": "contract IFToken"
                            }
                          },
                          {
                            "expression": {
                              "id": 64079,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4884:3:195",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 64080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4888:6:195",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4884:10:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IFToken_$49493",
                              "typeString": "contract IFToken"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 64077,
                          "name": "_balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64464,
                          "src": "4865:10:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IFToken_$49493_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract IFToken,address) view returns (uint256)"
                          }
                        },
                        "id": 64081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4865:30:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 64082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4897:5:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 64083,
                        "name": "ACCOUNT_FOR_INTEREST",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63908,
                        "src": "4904:20:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 64075,
                      "name": "_toAssetAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64424,
                      "src": "4842:14:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IFToken_$49493_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (contract IFToken,uint256,bool,bool) view returns (uint256)"
                      }
                    },
                    "id": 64084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4842:83:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4820:105:195"
                },
                {
                  "expression": {
                    "id": 64093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64086,
                      "name": "withdrawableFrax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64041,
                      "src": "4935:16:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 64087,
                          "name": "fraxBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64074,
                          "src": "4954:11:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 64088,
                          "name": "liquidFrax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64068,
                          "src": "4968:10:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4954:24:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 64091,
                        "name": "fraxBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64074,
                        "src": "4994:11:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 64092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "4954:51:195",
                      "trueExpression": {
                        "id": 64090,
                        "name": "liquidFrax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64068,
                        "src": "4981:10:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4935:70:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64094,
                  "nodeType": "ExpressionStatement",
                  "src": "4935:70:195"
                }
              ]
            },
            "baseFunctions": [
              61484
            ],
            "documentation": {
              "id": 64033,
              "nodeType": "StructuredDocumentation",
              "src": "4119:252:195",
              "text": " @notice Returns the amount of FRAX that can be withdrawn.\n @dev Compares FRAX supplied to FRAX borrowed to check for liquidity.\n      - If FRAX balance is greater than liquidity available, it returns the amount available."
            },
            "functionSelector": "fa50e5d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawableFrom",
            "nameLocation": "4385:16:195",
            "overrides": {
              "id": 64039,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4476:8:195"
            },
            "parameters": {
              "id": 64038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64035,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "4424:11:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64096,
                  "src": "4411:24:195",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64034,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4411:5:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64037,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64096,
                  "src": "4445:12:195",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64036,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4445:5:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4401:62:195"
            },
            "returnParameters": {
              "id": 64042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64041,
                  "mutability": "mutable",
                  "name": "withdrawableFrax",
                  "nameLocation": "4502:16:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64096,
                  "src": "4494:24:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4494:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4493:26:195"
            },
            "scope": 64508,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64127,
            "nodeType": "FunctionDefinition",
            "src": "5100:252:195",
            "nodes": [],
            "body": {
              "id": 64126,
              "nodeType": "Block",
              "src": "5184:168:195",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    64107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64107,
                      "mutability": "mutable",
                      "name": "fToken",
                      "nameLocation": "5202:6:195",
                      "nodeType": "VariableDeclaration",
                      "scope": 64126,
                      "src": "5194:14:195",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFToken_$49493",
                        "typeString": "contract IFToken"
                      },
                      "typeName": {
                        "id": 64106,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64105,
                          "name": "IFToken",
                          "nameLocations": [
                            "5194:7:195"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49493,
                          "src": "5194:7:195"
                        },
                        "referencedDeclaration": 49493,
                        "src": "5194:7:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64114,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64110,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64099,
                        "src": "5222:11:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 64111,
                            "name": "IFToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49493,
                            "src": "5236:7:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFToken_$49493_$",
                              "typeString": "type(contract IFToken)"
                            }
                          }
                        ],
                        "id": 64112,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5235:9:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFToken_$49493_$",
                          "typeString": "type(contract IFToken)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_contract$_IFToken_$49493_$",
                          "typeString": "type(contract IFToken)"
                        }
                      ],
                      "expression": {
                        "id": 64108,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5211:3:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 64109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5215:6:195",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5211:10:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 64113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5211:34:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5194:51:195"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64116,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64107,
                        "src": "5277:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64118,
                            "name": "fToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64107,
                            "src": "5296:6:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFToken_$49493",
                              "typeString": "contract IFToken"
                            }
                          },
                          {
                            "expression": {
                              "id": 64119,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5304:3:195",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 64120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5308:6:195",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5304:10:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IFToken_$49493",
                              "typeString": "contract IFToken"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 64117,
                          "name": "_balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64464,
                          "src": "5285:10:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IFToken_$49493_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract IFToken,address) view returns (uint256)"
                          }
                        },
                        "id": 64121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5285:30:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 64122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5317:5:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 64123,
                        "name": "ACCOUNT_FOR_INTEREST",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63908,
                        "src": "5324:20:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 64115,
                      "name": "_toAssetAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64424,
                      "src": "5262:14:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IFToken_$49493_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (contract IFToken,uint256,bool,bool) view returns (uint256)"
                      }
                    },
                    "id": 64124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5262:83:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 64104,
                  "id": 64125,
                  "nodeType": "Return",
                  "src": "5255:90:195"
                }
              ]
            },
            "baseFunctions": [
              61474
            ],
            "documentation": {
              "id": 64097,
              "nodeType": "StructuredDocumentation",
              "src": "5018:77:195",
              "text": " @notice Returns the cellar's balance of the FRAX position."
            },
            "functionSelector": "78415365",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5109:9:195",
            "overrides": {
              "id": 64101,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5157:8:195"
            },
            "parameters": {
              "id": 64100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64099,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "5132:11:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64127,
                  "src": "5119:24:195",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64098,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5119:5:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5118:26:195"
            },
            "returnParameters": {
              "id": 64104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64103,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64127,
                  "src": "5175:7:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5175:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5174:9:195"
            },
            "scope": 64508,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64140,
            "nodeType": "FunctionDefinition",
            "src": "5403:96:195",
            "nodes": [],
            "body": {
              "id": 64139,
              "nodeType": "Block",
              "src": "5471:28:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 64137,
                    "name": "FRAX",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63912,
                    "src": "5488:4:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "functionReturnParameters": 64136,
                  "id": 64138,
                  "nodeType": "Return",
                  "src": "5481:11:195"
                }
              ]
            },
            "baseFunctions": [
              61493
            ],
            "documentation": {
              "id": 64128,
              "nodeType": "StructuredDocumentation",
              "src": "5358:40:195",
              "text": " @notice Returns FRAX."
            },
            "functionSelector": "e170a9bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetOf",
            "nameLocation": "5412:7:195",
            "overrides": {
              "id": 64132,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5446:8:195"
            },
            "parameters": {
              "id": 64131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64130,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64140,
                  "src": "5420:12:195",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64129,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5420:5:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5419:14:195"
            },
            "returnParameters": {
              "id": 64136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64140,
                  "src": "5464:5:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$45747",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 64134,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64133,
                      "name": "ERC20",
                      "nameLocations": [
                        "5464:5:195"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45747,
                      "src": "5464:5:195"
                    },
                    "referencedDeclaration": 45747,
                    "src": "5464:5:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$45747",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5463:7:195"
            },
            "scope": 64508,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64150,
            "nodeType": "FunctionDefinition",
            "src": "5583:83:195",
            "nodes": [],
            "body": {
              "id": 64149,
              "nodeType": "Block",
              "src": "5637:29:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 64147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5654:5:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 64146,
                  "id": 64148,
                  "nodeType": "Return",
                  "src": "5647:12:195"
                }
              ]
            },
            "baseFunctions": [
              61527
            ],
            "documentation": {
              "id": 64141,
              "nodeType": "StructuredDocumentation",
              "src": "5505:73:195",
              "text": " @notice This adaptor returns collateral, and not debt."
            },
            "functionSelector": "89353a09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDebt",
            "nameLocation": "5592:6:195",
            "overrides": {
              "id": 64143,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5613:8:195"
            },
            "parameters": {
              "id": 64142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5598:2:195"
            },
            "returnParameters": {
              "id": 64146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64145,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64150,
                  "src": "5631:4:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64144,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5631:4:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5630:6:195"
            },
            "scope": 64508,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64198,
            "nodeType": "FunctionDefinition",
            "src": "6052:389:195",
            "nodes": [],
            "body": {
              "id": 64197,
              "nodeType": "Block",
              "src": "6118:323:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64160,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64154,
                        "src": "6144:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      ],
                      "id": 64159,
                      "name": "_validateFToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64338,
                      "src": "6128:15:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IFToken_$49493_$returns$__$",
                        "typeString": "function (contract IFToken) view"
                      }
                    },
                    "id": 64161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6128:23:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64162,
                  "nodeType": "ExpressionStatement",
                  "src": "6128:23:195"
                },
                {
                  "expression": {
                    "id": 64168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64163,
                      "name": "amountToDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64156,
                      "src": "6161:15:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 64165,
                          "name": "FRAX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63912,
                          "src": "6193:4:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$45747",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 64166,
                          "name": "amountToDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64156,
                          "src": "6199:15:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$45747",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 64164,
                        "name": "_maxAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61557,
                        "src": "6179:13:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$45747_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,uint256) view returns (uint256)"
                        }
                      },
                      "id": 64167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6179:36:195",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6161:54:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64169,
                  "nodeType": "ExpressionStatement",
                  "src": "6161:54:195"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64175,
                            "name": "fToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64154,
                            "src": "6250:6:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFToken_$49493",
                              "typeString": "contract IFToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IFToken_$49493",
                              "typeString": "contract IFToken"
                            }
                          ],
                          "id": 64174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6242:7:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64173,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6242:7:195",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6242:15:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64177,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64156,
                        "src": "6259:15:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64170,
                        "name": "FRAX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63912,
                        "src": "6225:4:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 64172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6230:11:195",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46497,
                      "src": "6225:16:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$45747_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 64178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6225:50:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64179,
                  "nodeType": "ExpressionStatement",
                  "src": "6225:50:195"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64181,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64154,
                        "src": "6294:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      {
                        "id": 64182,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64156,
                        "src": "6302:15:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64185,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6327:4:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                              "typeString": "contract FTokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                              "typeString": "contract FTokenAdaptor"
                            }
                          ],
                          "id": 64184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6319:7:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64183,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6319:7:195",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6319:13:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64180,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64357,
                      "src": "6285:8:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IFToken_$49493_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract IFToken,uint256,address)"
                      }
                    },
                    "id": 64187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6285:48:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64188,
                  "nodeType": "ExpressionStatement",
                  "src": "6285:48:195"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64190,
                        "name": "FRAX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63912,
                        "src": "6412:4:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64193,
                            "name": "fToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64154,
                            "src": "6426:6:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFToken_$49493",
                              "typeString": "contract IFToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IFToken_$49493",
                              "typeString": "contract IFToken"
                            }
                          ],
                          "id": 64192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6418:7:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64191,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6418:7:195",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6418:15:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$45747",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64189,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61585,
                      "src": "6388:23:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$45747_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 64195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6388:46:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64196,
                  "nodeType": "ExpressionStatement",
                  "src": "6388:46:195"
                }
              ]
            },
            "documentation": {
              "id": 64151,
              "nodeType": "StructuredDocumentation",
              "src": "5788:259:195",
              "text": " @notice Allows strategists to lend FRAX on FraxLend.\n @dev Uses `_maxAvailable` helper function, see BaseAdaptor.sol\n @param fToken the specified FraxLend Pair\n @param amountToDeposit the amount of Frax to lend on FraxLend"
            },
            "functionSelector": "726bb084",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lendFrax",
            "nameLocation": "6061:8:195",
            "parameters": {
              "id": 64157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64154,
                  "mutability": "mutable",
                  "name": "fToken",
                  "nameLocation": "6078:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64198,
                  "src": "6070:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFToken_$49493",
                    "typeString": "contract IFToken"
                  },
                  "typeName": {
                    "id": 64153,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64152,
                      "name": "IFToken",
                      "nameLocations": [
                        "6070:7:195"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49493,
                      "src": "6070:7:195"
                    },
                    "referencedDeclaration": 49493,
                    "src": "6070:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64156,
                  "mutability": "mutable",
                  "name": "amountToDeposit",
                  "nameLocation": "6094:15:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64198,
                  "src": "6086:23:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6086:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6069:41:195"
            },
            "returnParameters": {
              "id": 64158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6118:0:195"
            },
            "scope": 64508,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64237,
            "nodeType": "FunctionDefinition",
            "src": "6662:264:195",
            "nodes": [],
            "body": {
              "id": 64236,
              "nodeType": "Block",
              "src": "6734:192:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64208,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64202,
                        "src": "6760:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      ],
                      "id": 64207,
                      "name": "_validateFToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64338,
                      "src": "6744:15:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IFToken_$49493_$returns$__$",
                        "typeString": "function (contract IFToken) view"
                      }
                    },
                    "id": 64209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6744:23:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64210,
                  "nodeType": "ExpressionStatement",
                  "src": "6744:23:195"
                },
                {
                  "expression": {
                    "id": 64221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64211,
                      "name": "amountToRedeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64204,
                      "src": "6777:14:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 64216,
                                  "name": "fToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64202,
                                  "src": "6822:6:195",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFToken_$49493",
                                    "typeString": "contract IFToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IFToken_$49493",
                                    "typeString": "contract IFToken"
                                  }
                                ],
                                "id": 64215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6814:7:195",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 64214,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6814:7:195",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 64217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6814:15:195",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 64213,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45747,
                            "src": "6808:5:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$45747_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 64218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6808:22:195",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$45747",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 64219,
                          "name": "amountToRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64204,
                          "src": "6832:14:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$45747",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 64212,
                        "name": "_maxAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61557,
                        "src": "6794:13:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$45747_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,uint256) view returns (uint256)"
                        }
                      },
                      "id": 64220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6794:53:195",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6777:70:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64222,
                  "nodeType": "ExpressionStatement",
                  "src": "6777:70:195"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64224,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64202,
                        "src": "6866:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      {
                        "id": 64225,
                        "name": "amountToRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64204,
                        "src": "6874:14:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64228,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6898:4:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                              "typeString": "contract FTokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                              "typeString": "contract FTokenAdaptor"
                            }
                          ],
                          "id": 64227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6890:7:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64226,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6890:7:195",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6890:13:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64232,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6913:4:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                              "typeString": "contract FTokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                              "typeString": "contract FTokenAdaptor"
                            }
                          ],
                          "id": 64231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6905:7:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64230,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6905:7:195",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6905:13:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64223,
                      "name": "_redeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64401,
                      "src": "6858:7:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IFToken_$49493_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (contract IFToken,uint256,address,address)"
                      }
                    },
                    "id": 64234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6858:61:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64235,
                  "nodeType": "ExpressionStatement",
                  "src": "6858:61:195"
                }
              ]
            },
            "documentation": {
              "id": 64199,
              "nodeType": "StructuredDocumentation",
              "src": "6447:210:195",
              "text": " @notice Allows strategists to redeem Frax shares from FraxLend.\n @param fToken the specified FraxLend Pair\n @param amountToRedeem the amount of Frax shares to redeem from FraxLend"
            },
            "functionSelector": "61b14c98",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemFraxShare",
            "nameLocation": "6671:15:195",
            "parameters": {
              "id": 64205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64202,
                  "mutability": "mutable",
                  "name": "fToken",
                  "nameLocation": "6695:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64237,
                  "src": "6687:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFToken_$49493",
                    "typeString": "contract IFToken"
                  },
                  "typeName": {
                    "id": 64201,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64200,
                      "name": "IFToken",
                      "nameLocations": [
                        "6687:7:195"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49493,
                      "src": "6687:7:195"
                    },
                    "referencedDeclaration": 49493,
                    "src": "6687:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64204,
                  "mutability": "mutable",
                  "name": "amountToRedeem",
                  "nameLocation": "6711:14:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64237,
                  "src": "6703:22:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6703:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6686:40:195"
            },
            "returnParameters": {
              "id": 64206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6734:0:195"
            },
            "scope": 64508,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64264,
            "nodeType": "FunctionDefinition",
            "src": "7251:186:195",
            "nodes": [],
            "body": {
              "id": 64263,
              "nodeType": "Block",
              "src": "7322:115:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64247,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64241,
                        "src": "7348:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      ],
                      "id": 64246,
                      "name": "_validateFToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64338,
                      "src": "7332:15:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IFToken_$49493_$returns$__$",
                        "typeString": "function (contract IFToken) view"
                      }
                    },
                    "id": 64248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7332:23:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64249,
                  "nodeType": "ExpressionStatement",
                  "src": "7332:23:195"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64251,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64241,
                        "src": "7375:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      {
                        "id": 64252,
                        "name": "amountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64243,
                        "src": "7383:16:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64255,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7409:4:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                              "typeString": "contract FTokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                              "typeString": "contract FTokenAdaptor"
                            }
                          ],
                          "id": 64254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7401:7:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64253,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7401:7:195",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7401:13:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64259,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7424:4:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                              "typeString": "contract FTokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                              "typeString": "contract FTokenAdaptor"
                            }
                          ],
                          "id": 64258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7416:7:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64257,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7416:7:195",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7416:13:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64250,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64379,
                      "src": "7365:9:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IFToken_$49493_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (contract IFToken,uint256,address,address)"
                      }
                    },
                    "id": 64261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7365:65:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64262,
                  "nodeType": "ExpressionStatement",
                  "src": "7365:65:195"
                }
              ]
            },
            "documentation": {
              "id": 64238,
              "nodeType": "StructuredDocumentation",
              "src": "6932:314:195",
              "text": " @notice Allows strategists to withdraw FRAX from FraxLend.\n @dev Used to withdraw an exact amount from Frax Lend.\n      Use `redeemFraxShare` to withdraw all.\n @param fToken the specified FraxLend Pair\n @param amountToWithdraw the amount of FRAX to withdraw from FraxLend"
            },
            "functionSelector": "f815ada4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFrax",
            "nameLocation": "7260:12:195",
            "parameters": {
              "id": 64244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64241,
                  "mutability": "mutable",
                  "name": "fToken",
                  "nameLocation": "7281:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64264,
                  "src": "7273:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFToken_$49493",
                    "typeString": "contract IFToken"
                  },
                  "typeName": {
                    "id": 64240,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64239,
                      "name": "IFToken",
                      "nameLocations": [
                        "7273:7:195"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49493,
                      "src": "7273:7:195"
                    },
                    "referencedDeclaration": 49493,
                    "src": "7273:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64243,
                  "mutability": "mutable",
                  "name": "amountToWithdraw",
                  "nameLocation": "7297:16:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64264,
                  "src": "7289:24:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7289:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7272:42:195"
            },
            "returnParameters": {
              "id": 64245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7322:0:195"
            },
            "scope": 64508,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64280,
            "nodeType": "FunctionDefinition",
            "src": "7904:118:195",
            "nodes": [],
            "body": {
              "id": 64279,
              "nodeType": "Block",
              "src": "7952:70:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64272,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64268,
                        "src": "7978:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      ],
                      "id": 64271,
                      "name": "_validateFToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64338,
                      "src": "7962:15:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IFToken_$49493_$returns$__$",
                        "typeString": "function (contract IFToken) view"
                      }
                    },
                    "id": 64273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7962:23:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64274,
                  "nodeType": "ExpressionStatement",
                  "src": "7962:23:195"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64276,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64268,
                        "src": "8008:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      ],
                      "id": 64275,
                      "name": "_addInterest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64507,
                      "src": "7995:12:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IFToken_$49493_$returns$__$",
                        "typeString": "function (contract IFToken)"
                      }
                    },
                    "id": 64277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7995:20:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64278,
                  "nodeType": "ExpressionStatement",
                  "src": "7995:20:195"
                }
              ]
            },
            "documentation": {
              "id": 64265,
              "nodeType": "StructuredDocumentation",
              "src": "7443:456:195",
              "text": " @notice Allows a strategist to call `addInterest` on a Frax Pair they are using.\n @dev A strategist might want to do this if a Frax Lend pair has not been interacted\n      in a while, and the strategist does not plan on interacting with it during a\n      rebalance.\n @dev Calling this can increase the share price during the rebalance,\n      so a strategist should consider moving some assets into reserves."
            },
            "functionSelector": "6dd659fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callAddInterest",
            "nameLocation": "7913:15:195",
            "parameters": {
              "id": 64269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64268,
                  "mutability": "mutable",
                  "name": "fToken",
                  "nameLocation": "7937:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64280,
                  "src": "7929:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFToken_$49493",
                    "typeString": "contract IFToken"
                  },
                  "typeName": {
                    "id": 64267,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64266,
                      "name": "IFToken",
                      "nameLocations": [
                        "7929:7:195"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49493,
                      "src": "7929:7:195"
                    },
                    "referencedDeclaration": 49493,
                    "src": "7929:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7928:16:195"
            },
            "returnParameters": {
              "id": 64270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7952:0:195"
            },
            "scope": 64508,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64338,
            "nodeType": "FunctionDefinition",
            "src": "8205:414:195",
            "nodes": [],
            "body": {
              "id": 64337,
              "nodeType": "Block",
              "src": "8260:359:195",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    64288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64288,
                      "mutability": "mutable",
                      "name": "positionHash",
                      "nameLocation": "8278:12:195",
                      "nodeType": "VariableDeclaration",
                      "scope": 64337,
                      "src": "8270:20:195",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 64287,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8270:7:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64304,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 64292,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                63945
                              ],
                              "referencedDeclaration": 63945,
                              "src": "8314:10:195",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
                                "typeString": "function () pure returns (bytes32)"
                              }
                            },
                            "id": 64293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8314:12:195",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 64294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8328:5:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 64299,
                                    "name": "fToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 64284,
                                    "src": "8354:6:195",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IFToken_$49493",
                                      "typeString": "contract IFToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IFToken_$49493",
                                      "typeString": "contract IFToken"
                                    }
                                  ],
                                  "id": 64298,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8346:7:195",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 64297,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8346:7:195",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 64300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8346:15:195",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 64295,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "8335:3:195",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 64296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "8339:6:195",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "8335:10:195",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 64301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8335:27:195",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 64290,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8303:3:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 64291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8307:6:195",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8303:10:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 64302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8303:60:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 64289,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8293:9:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 64303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8293:71:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8270:94:195"
                },
                {
                  "assignments": [
                    64306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64306,
                      "mutability": "mutable",
                      "name": "positionId",
                      "nameLocation": "8381:10:195",
                      "nodeType": "VariableDeclaration",
                      "scope": 64337,
                      "src": "8374:17:195",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 64305,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8374:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64318,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64316,
                        "name": "positionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64288,
                        "src": "8455:12:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 64310,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "8409:4:195",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                                      "typeString": "contract FTokenAdaptor"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                                      "typeString": "contract FTokenAdaptor"
                                    }
                                  ],
                                  "id": 64309,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8401:7:195",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 64308,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8401:7:195",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 64311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8401:13:195",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 64307,
                              "name": "Cellar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44434,
                              "src": "8394:6:195",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Cellar_$44434_$",
                                "typeString": "type(contract Cellar)"
                              }
                            },
                            "id": 64312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8394:21:195",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cellar_$44434",
                              "typeString": "contract Cellar"
                            }
                          },
                          "id": 64313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8416:8:195",
                          "memberName": "registry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42070,
                          "src": "8394:30:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Registry_$41024_$",
                            "typeString": "function () view external returns (contract Registry)"
                          }
                        },
                        "id": 64314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8394:32:195",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registry_$41024",
                          "typeString": "contract Registry"
                        }
                      },
                      "id": 64315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8427:27:195",
                      "memberName": "getPositionHashToPositionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40771,
                      "src": "8394:60:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint32_$",
                        "typeString": "function (bytes32) view external returns (uint32)"
                      }
                    },
                    "id": 64317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8394:74:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8374:94:195"
                },
                {
                  "condition": {
                    "id": 64328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "8482:49:195",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 64326,
                          "name": "positionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64306,
                          "src": "8520:10:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 64322,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8498:4:195",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                                    "typeString": "contract FTokenAdaptor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_FTokenAdaptor_$64508",
                                    "typeString": "contract FTokenAdaptor"
                                  }
                                ],
                                "id": 64321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8490:7:195",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 64320,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8490:7:195",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 64323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8490:13:195",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 64319,
                            "name": "Cellar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44434,
                            "src": "8483:6:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Cellar_$44434_$",
                              "typeString": "type(contract Cellar)"
                            }
                          },
                          "id": 64324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8483:21:195",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Cellar_$44434",
                            "typeString": "contract Cellar"
                          }
                        },
                        "id": 64325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8505:14:195",
                        "memberName": "isPositionUsed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41300,
                        "src": "8483:36:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 64327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8483:48:195",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64336,
                  "nodeType": "IfStatement",
                  "src": "8478:134:195",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 64332,
                              "name": "fToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64284,
                              "src": "8604:6:195",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFToken_$49493",
                                "typeString": "contract IFToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IFToken_$49493",
                                "typeString": "contract IFToken"
                              }
                            ],
                            "id": 64331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8596:7:195",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 64330,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8596:7:195",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 64333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8596:15:195",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 64329,
                        "name": "FTokenAdaptor__FTokenPositionsMustBeTracked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63905,
                        "src": "8552:43:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                          "typeString": "function (address) pure"
                        }
                      },
                      "id": 64334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8552:60:195",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 64335,
                    "nodeType": "RevertStatement",
                    "src": "8545:67:195"
                  }
                }
              ]
            },
            "documentation": {
              "id": 64281,
              "nodeType": "StructuredDocumentation",
              "src": "8028:172:195",
              "text": " @notice Validates that a given fToken is set up as a position in the Cellar.\n @dev This function uses `address(this)` as the address of the Cellar."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateFToken",
            "nameLocation": "8214:15:195",
            "parameters": {
              "id": 64285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64284,
                  "mutability": "mutable",
                  "name": "fToken",
                  "nameLocation": "8238:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64338,
                  "src": "8230:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFToken_$49493",
                    "typeString": "contract IFToken"
                  },
                  "typeName": {
                    "id": 64283,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64282,
                      "name": "IFToken",
                      "nameLocations": [
                        "8230:7:195"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49493,
                      "src": "8230:7:195"
                    },
                    "referencedDeclaration": 49493,
                    "src": "8230:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8229:16:195"
            },
            "returnParameters": {
              "id": 64286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8260:0:195"
            },
            "scope": 64508,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 64357,
            "nodeType": "FunctionDefinition",
            "src": "10224:134:195",
            "nodes": [],
            "body": {
              "id": 64356,
              "nodeType": "Block",
              "src": "10309:49:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64352,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64344,
                        "src": "10334:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 64353,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64346,
                        "src": "10342:8:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64349,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64342,
                        "src": "10319:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      "id": 64351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10326:7:195",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49351,
                      "src": "10319:14:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 64354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10319:32:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64355,
                  "nodeType": "ExpressionStatement",
                  "src": "10319:32:195"
                }
              ]
            },
            "documentation": {
              "id": 64339,
              "nodeType": "StructuredDocumentation",
              "src": "9863:356:195",
              "text": " @notice Deposit $FRAX into specified 'v2' FraxLendPair\n @dev ftoken.deposit() calls into the respective version (v2 by default) of FraxLendPair\n @param fToken The specified FraxLendPair\n @param amount The amount of $FRAX Token to transfer to Pair\n @param receiver The address to receive the Asset Shares (fTokens)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "10233:8:195",
            "parameters": {
              "id": 64347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64342,
                  "mutability": "mutable",
                  "name": "fToken",
                  "nameLocation": "10250:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64357,
                  "src": "10242:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFToken_$49493",
                    "typeString": "contract IFToken"
                  },
                  "typeName": {
                    "id": 64341,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64340,
                      "name": "IFToken",
                      "nameLocations": [
                        "10242:7:195"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49493,
                      "src": "10242:7:195"
                    },
                    "referencedDeclaration": 49493,
                    "src": "10242:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64344,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10266:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64357,
                  "src": "10258:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10258:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64346,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "10282:8:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64357,
                  "src": "10274:16:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10274:7:195",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10241:50:195"
            },
            "returnParameters": {
              "id": 64348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10309:0:195"
            },
            "scope": 64508,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 64379,
            "nodeType": "FunctionDefinition",
            "src": "10772:158:195",
            "nodes": [],
            "body": {
              "id": 64378,
              "nodeType": "Block",
              "src": "10873:57:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64373,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64363,
                        "src": "10899:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 64374,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64365,
                        "src": "10907:8:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64375,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64367,
                        "src": "10917:5:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64370,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64361,
                        "src": "10883:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      "id": 64372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10890:8:195",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49472,
                      "src": "10883:15:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address) external"
                      }
                    },
                    "id": 64376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10883:40:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64377,
                  "nodeType": "ExpressionStatement",
                  "src": "10883:40:195"
                }
              ]
            },
            "documentation": {
              "id": 64358,
              "nodeType": "StructuredDocumentation",
              "src": "10364:403:195",
              "text": " @notice Withdraw $FRAX from specified 'v2' FraxLendPair\n @dev ftoken.withdraw() calls into the respective version (v2 by default) of FraxLendPair\n @param fToken The specified FraxLendPair\n @param assets The amount to withdraw\n @param receiver The address to which the Asset Tokens will be transferred\n @param owner The owner of the Asset Shares (fTokens)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "10781:9:195",
            "parameters": {
              "id": 64368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64361,
                  "mutability": "mutable",
                  "name": "fToken",
                  "nameLocation": "10799:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64379,
                  "src": "10791:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFToken_$49493",
                    "typeString": "contract IFToken"
                  },
                  "typeName": {
                    "id": 64360,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64359,
                      "name": "IFToken",
                      "nameLocations": [
                        "10791:7:195"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49493,
                      "src": "10791:7:195"
                    },
                    "referencedDeclaration": 49493,
                    "src": "10791:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64363,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "10815:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64379,
                  "src": "10807:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10807:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64365,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "10831:8:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64379,
                  "src": "10823:16:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10823:7:195",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64367,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10849:5:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64379,
                  "src": "10841:13:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10841:7:195",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10790:65:195"
            },
            "returnParameters": {
              "id": 64369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10873:0:195"
            },
            "scope": 64508,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 64401,
            "nodeType": "FunctionDefinition",
            "src": "11417:154:195",
            "nodes": [],
            "body": {
              "id": 64400,
              "nodeType": "Block",
              "src": "11516:55:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64395,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64385,
                        "src": "11540:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 64396,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64387,
                        "src": "11548:8:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64397,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64389,
                        "src": "11558:5:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64392,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64383,
                        "src": "11526:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      "id": 64394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11533:6:195",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49360,
                      "src": "11526:13:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address) external"
                      }
                    },
                    "id": 64398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11526:38:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64399,
                  "nodeType": "ExpressionStatement",
                  "src": "11526:38:195"
                }
              ]
            },
            "documentation": {
              "id": 64380,
              "nodeType": "StructuredDocumentation",
              "src": "10936:476:195",
              "text": " @notice Caller redeems Asset Shares for Asset Tokens $FRAX from specified 'v2' FraxLendPair\n @dev ftoken.redeem() calls into the respective version (v2 by default) of FraxLendPair\n @param fToken The specified FraxLendPair\n @param shares The number of Asset Shares (fTokens) to burn for Asset Tokens\n @param receiver The address to which the Asset Tokens will be transferred\n @param owner The owner of the Asset Shares (fTokens)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_redeem",
            "nameLocation": "11426:7:195",
            "parameters": {
              "id": 64390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64383,
                  "mutability": "mutable",
                  "name": "fToken",
                  "nameLocation": "11442:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64401,
                  "src": "11434:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFToken_$49493",
                    "typeString": "contract IFToken"
                  },
                  "typeName": {
                    "id": 64382,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64381,
                      "name": "IFToken",
                      "nameLocations": [
                        "11434:7:195"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49493,
                      "src": "11434:7:195"
                    },
                    "referencedDeclaration": 49493,
                    "src": "11434:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64385,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "11458:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64401,
                  "src": "11450:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11450:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64387,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "11474:8:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64401,
                  "src": "11466:16:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11466:7:195",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64389,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11492:5:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64401,
                  "src": "11484:13:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11484:7:195",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11433:65:195"
            },
            "returnParameters": {
              "id": 64391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11516:0:195"
            },
            "scope": 64508,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 64424,
            "nodeType": "FunctionDefinition",
            "src": "12081:248:195",
            "nodes": [],
            "body": {
              "id": 64423,
              "nodeType": "Block",
              "src": "12251:78:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64418,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64407,
                        "src": "12289:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 64419,
                        "name": "roundUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64409,
                        "src": "12297:7:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 64420,
                        "name": "previewInterest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64411,
                        "src": "12306:15:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64416,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64405,
                        "src": "12268:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      "id": 64417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12275:13:195",
                      "memberName": "toAssetAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49452,
                      "src": "12268:20:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_bool_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bool,bool) view external returns (uint256)"
                      }
                    },
                    "id": 64421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12268:54:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 64415,
                  "id": 64422,
                  "nodeType": "Return",
                  "src": "12261:61:195"
                }
              ]
            },
            "documentation": {
              "id": 64402,
              "nodeType": "StructuredDocumentation",
              "src": "11577:499:195",
              "text": " @notice Converts a given number of shares to $FRAX amount from specified 'v2' FraxLendPair\n @dev This is one of the adjusted functions from v1 to v2. ftoken.toAssetAmount() calls into the respective version (v2 by default) of FraxLendPair\n @param fToken The specified FraxLendPair\n @param shares Shares of asset (fToken)\n @param roundUp Whether to round up after division\n @param previewInterest Whether to preview interest accrual before calculation"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_toAssetAmount",
            "nameLocation": "12090:14:195",
            "parameters": {
              "id": 64412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64405,
                  "mutability": "mutable",
                  "name": "fToken",
                  "nameLocation": "12122:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64424,
                  "src": "12114:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFToken_$49493",
                    "typeString": "contract IFToken"
                  },
                  "typeName": {
                    "id": 64404,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64403,
                      "name": "IFToken",
                      "nameLocations": [
                        "12114:7:195"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49493,
                      "src": "12114:7:195"
                    },
                    "referencedDeclaration": 49493,
                    "src": "12114:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64407,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "12146:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64424,
                  "src": "12138:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12138:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64409,
                  "mutability": "mutable",
                  "name": "roundUp",
                  "nameLocation": "12167:7:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64424,
                  "src": "12162:12:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64408,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12162:4:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64411,
                  "mutability": "mutable",
                  "name": "previewInterest",
                  "nameLocation": "12189:15:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64424,
                  "src": "12184:20:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64410,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12184:4:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12104:106:195"
            },
            "returnParameters": {
              "id": 64415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64414,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64424,
                  "src": "12242:7:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12242:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12241:9:195"
            },
            "scope": 64508,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 64447,
            "nodeType": "FunctionDefinition",
            "src": "12852:248:195",
            "nodes": [],
            "body": {
              "id": 64446,
              "nodeType": "Block",
              "src": "13022:78:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64441,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64430,
                        "src": "13060:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 64442,
                        "name": "roundUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64432,
                        "src": "13068:7:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 64443,
                        "name": "previewInterest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64434,
                        "src": "13077:15:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64439,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64428,
                        "src": "13039:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      "id": 64440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13046:13:195",
                      "memberName": "toAssetShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49463,
                      "src": "13039:20:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_bool_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bool,bool) view external returns (uint256)"
                      }
                    },
                    "id": 64444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13039:54:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 64438,
                  "id": 64445,
                  "nodeType": "Return",
                  "src": "13032:61:195"
                }
              ]
            },
            "documentation": {
              "id": 64425,
              "nodeType": "StructuredDocumentation",
              "src": "12335:512:195",
              "text": " @notice Converts a given asset amount to a number of asset shares (fTokens) from specified 'v2' FraxLendPair\n @dev This is one of the adjusted functions from v1 to v2. ftoken.toAssetShares() calls into the respective version (v2 by default) of FraxLendPair\n @param fToken The specified FraxLendPair\n @param amount The amount of asset\n @param roundUp Whether to round up after division\n @param previewInterest Whether to preview interest accrual before calculation"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_toAssetShares",
            "nameLocation": "12861:14:195",
            "parameters": {
              "id": 64435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64428,
                  "mutability": "mutable",
                  "name": "fToken",
                  "nameLocation": "12893:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64447,
                  "src": "12885:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFToken_$49493",
                    "typeString": "contract IFToken"
                  },
                  "typeName": {
                    "id": 64427,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64426,
                      "name": "IFToken",
                      "nameLocations": [
                        "12885:7:195"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49493,
                      "src": "12885:7:195"
                    },
                    "referencedDeclaration": 49493,
                    "src": "12885:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64430,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12917:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64447,
                  "src": "12909:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12909:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64432,
                  "mutability": "mutable",
                  "name": "roundUp",
                  "nameLocation": "12938:7:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64447,
                  "src": "12933:12:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64431,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12933:4:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64434,
                  "mutability": "mutable",
                  "name": "previewInterest",
                  "nameLocation": "12960:15:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64447,
                  "src": "12955:20:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64433,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12955:4:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12875:106:195"
            },
            "returnParameters": {
              "id": 64438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64437,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64447,
                  "src": "13013:7:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13013:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13012:9:195"
            },
            "scope": 64508,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 64464,
            "nodeType": "FunctionDefinition",
            "src": "13183:136:195",
            "nodes": [],
            "body": {
              "id": 64463,
              "nodeType": "Block",
              "src": "13273:46:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64460,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64453,
                        "src": "13307:4:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64458,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64451,
                        "src": "13290:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      "id": 64459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13297:9:195",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49385,
                      "src": "13290:16:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 64461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13290:22:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 64457,
                  "id": 64462,
                  "nodeType": "Return",
                  "src": "13283:29:195"
                }
              ]
            },
            "documentation": {
              "id": 64448,
              "nodeType": "StructuredDocumentation",
              "src": "13106:72:195",
              "text": " @dev Returns the amount of tokens owned by `account`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_balanceOf",
            "nameLocation": "13192:10:195",
            "parameters": {
              "id": 64454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64451,
                  "mutability": "mutable",
                  "name": "fToken",
                  "nameLocation": "13211:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64464,
                  "src": "13203:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFToken_$49493",
                    "typeString": "contract IFToken"
                  },
                  "typeName": {
                    "id": 64450,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64449,
                      "name": "IFToken",
                      "nameLocations": [
                        "13203:7:195"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49493,
                      "src": "13203:7:195"
                    },
                    "referencedDeclaration": 49493,
                    "src": "13203:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64453,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "13227:4:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64464,
                  "src": "13219:12:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13219:7:195",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13202:30:195"
            },
            "returnParameters": {
              "id": 64457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64456,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64464,
                  "src": "13264:7:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13264:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13263:9:195"
            },
            "scope": 64508,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 64493,
            "nodeType": "FunctionDefinition",
            "src": "13760:476:195",
            "nodes": [],
            "body": {
              "id": 64492,
              "nodeType": "Block",
              "src": "14086:150:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 64490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 64481,
                          "name": "totalAssetAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64471,
                          "src": "14097:16:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 64482,
                          "name": "totalAssetShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64473,
                          "src": "14115:16:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 64483,
                          "name": "totalBorrowAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64475,
                          "src": "14133:17:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 64484,
                          "name": "totalBorrowShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64477,
                          "src": "14152:17:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 64485,
                          "name": "totalCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64479,
                          "src": "14171:15:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 64486,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14096:91:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$_t_uint128_$_t_uint256_$",
                        "typeString": "tuple(uint128,uint128,uint128,uint128,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 64487,
                          "name": "fToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64468,
                          "src": "14190:6:195",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFToken_$49493",
                            "typeString": "contract IFToken"
                          }
                        },
                        "id": 64488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14210:17:195",
                        "memberName": "getPairAccounting",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49409,
                        "src": "14190:37:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$_t_uint128_$_t_uint128_$_t_uint256_$",
                          "typeString": "function () view external returns (uint128,uint128,uint128,uint128,uint256)"
                        }
                      },
                      "id": 64489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14190:39:195",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$_t_uint128_$_t_uint256_$",
                        "typeString": "tuple(uint128,uint128,uint128,uint128,uint256)"
                      }
                    },
                    "src": "14096:133:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64491,
                  "nodeType": "ExpressionStatement",
                  "src": "14096:133:195"
                }
              ]
            },
            "documentation": {
              "id": 64465,
              "nodeType": "StructuredDocumentation",
              "src": "13325:430:195",
              "text": " @notice gets all pair level accounting numbers from specified 'v2' FraxLendPair\n @param fToken The specified FraxLendPair\n @return totalAssetAmount Total assets deposited and interest accrued, total claims\n @return totalAssetShares Total fTokens\n @return totalBorrowAmount Total borrows\n @return totalBorrowShares Total borrow shares\n @return totalCollateral Total collateral"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getPairAccounting",
            "nameLocation": "13769:18:195",
            "parameters": {
              "id": 64469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64468,
                  "mutability": "mutable",
                  "name": "fToken",
                  "nameLocation": "13805:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64493,
                  "src": "13797:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFToken_$49493",
                    "typeString": "contract IFToken"
                  },
                  "typeName": {
                    "id": 64467,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64466,
                      "name": "IFToken",
                      "nameLocations": [
                        "13797:7:195"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49493,
                      "src": "13797:7:195"
                    },
                    "referencedDeclaration": 49493,
                    "src": "13797:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13787:30:195"
            },
            "returnParameters": {
              "id": 64480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64471,
                  "mutability": "mutable",
                  "name": "totalAssetAmount",
                  "nameLocation": "13902:16:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64493,
                  "src": "13894:24:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 64470,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "13894:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64473,
                  "mutability": "mutable",
                  "name": "totalAssetShares",
                  "nameLocation": "13940:16:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64493,
                  "src": "13932:24:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 64472,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "13932:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64475,
                  "mutability": "mutable",
                  "name": "totalBorrowAmount",
                  "nameLocation": "13978:17:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64493,
                  "src": "13970:25:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 64474,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "13970:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64477,
                  "mutability": "mutable",
                  "name": "totalBorrowShares",
                  "nameLocation": "14017:17:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64493,
                  "src": "14009:25:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 64476,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "14009:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64479,
                  "mutability": "mutable",
                  "name": "totalCollateral",
                  "nameLocation": "14056:15:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64493,
                  "src": "14048:23:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14048:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13880:201:195"
            },
            "scope": 64508,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 64507,
            "nodeType": "FunctionDefinition",
            "src": "14478:97:195",
            "nodes": [],
            "body": {
              "id": 64506,
              "nodeType": "Block",
              "src": "14533:42:195",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 64503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14562:5:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64500,
                        "name": "fToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64497,
                        "src": "14543:6:195",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFToken_$49493",
                          "typeString": "contract IFToken"
                        }
                      },
                      "id": 64502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14550:11:195",
                      "memberName": "addInterest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49492,
                      "src": "14543:18:195",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_CurrentRateInfo_$49436_memory_ptr_$_t_struct$_VaultAccount_$49441_memory_ptr_$_t_struct$_VaultAccount_$49441_memory_ptr_$",
                        "typeString": "function (bool) external returns (uint256,uint256,uint256,struct IFToken.CurrentRateInfo memory,struct IFToken.VaultAccount memory,struct IFToken.VaultAccount memory)"
                      }
                    },
                    "id": 64504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14543:25:195",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_CurrentRateInfo_$49436_memory_ptr_$_t_struct$_VaultAccount_$49441_memory_ptr_$_t_struct$_VaultAccount_$49441_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,struct IFToken.CurrentRateInfo memory,struct IFToken.VaultAccount memory,struct IFToken.VaultAccount memory)"
                    }
                  },
                  "id": 64505,
                  "nodeType": "ExpressionStatement",
                  "src": "14543:25:195"
                }
              ]
            },
            "documentation": {
              "id": 64494,
              "nodeType": "StructuredDocumentation",
              "src": "14242:231:195",
              "text": " @notice Caller calls `addInterest` on specified 'v2' FraxLendPair\n @dev ftoken.addInterest() calls into the respective version (v2 by default) of FraxLendPair\n @param fToken The specified FraxLendPair"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addInterest",
            "nameLocation": "14487:12:195",
            "parameters": {
              "id": 64498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64497,
                  "mutability": "mutable",
                  "name": "fToken",
                  "nameLocation": "14508:6:195",
                  "nodeType": "VariableDeclaration",
                  "scope": 64507,
                  "src": "14500:14:195",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFToken_$49493",
                    "typeString": "contract IFToken"
                  },
                  "typeName": {
                    "id": 64496,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64495,
                      "name": "IFToken",
                      "nameLocations": [
                        "14500:7:195"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49493,
                      "src": "14500:7:195"
                    },
                    "referencedDeclaration": 49493,
                    "src": "14500:7:195",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFToken_$49493",
                      "typeString": "contract IFToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14499:16:195"
            },
            "returnParameters": {
              "id": 64499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14533:0:195"
            },
            "scope": 64508,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 63892,
              "name": "BaseAdaptor",
              "nameLocations": [
                "607:11:195"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61644,
              "src": "607:11:195"
            },
            "id": 63893,
            "nodeType": "InheritanceSpecifier",
            "src": "607:11:195"
          }
        ],
        "canonicalName": "FTokenAdaptor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 63891,
          "nodeType": "StructuredDocumentation",
          "src": "252:328:195",
          "text": " @title FraxLend fToken Adaptor\n @dev This adaptor is specifically for FraxLendPairV2 contracts.\n      To interact with a different version, inherit from this adaptor\n      and override the interface helper functions.\n @notice Allows Cellars to lend FRAX to FraxLend pairs.\n @author crispymangoes, 0xEinCodes"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64508,
          61644
        ],
        "name": "FTokenAdaptor",
        "nameLocation": "590:13:195",
        "scope": 64509,
        "usedErrors": [
          61379,
          61382,
          61385,
          61388,
          61393,
          61396,
          63905
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 195
}