[
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_booster",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_nativeWrapper",
                "type": "address"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "inputs": [],
        "name": "BaseAdaptor__ConstructorHealthFactorTooLow",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "BaseAdaptor__ExternalReceiverBlocked",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "asset",
                "type": "address"
            }
        ],
        "name": "BaseAdaptor__PricingNotSupported",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "BaseAdaptor__Slippage",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "BaseAdaptor__UserDepositsNotAllowed",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "BaseAdaptor__UserWithdrawsNotAllowed",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "pid",
                "type": "uint256"
            },
            {
                "internalType": "address",
                "name": "baseRewardPool",
                "type": "address"
            },
            {
                "internalType": "contract ERC20",
                "name": "lpt",
                "type": "address"
            },
            {
                "internalType": "contract CurvePool",
                "name": "pool",
                "type": "address"
            },
            {
                "internalType": "bytes4",
                "name": "selector",
                "type": "bytes4"
            }
        ],
        "name": "ConvexAdaptor__ConvexBoosterPositionsDoesNotMatchAdaptorData",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "pid",
                "type": "uint256"
            },
            {
                "internalType": "address",
                "name": "baseRewardPool",
                "type": "address"
            },
            {
                "internalType": "contract ERC20",
                "name": "lpt",
                "type": "address"
            },
            {
                "internalType": "contract CurvePool",
                "name": "_curvePool",
                "type": "address"
            },
            {
                "internalType": "bytes4",
                "name": "_selector",
                "type": "bytes4"
            }
        ],
        "name": "ConvexAdaptor__ConvexBoosterPositionsMustBeTracked",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "CurveHelper___CallerDoesNotUseOracle",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "CurveHelper___CallerMustImplementDecimals",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "CurveHelper___MismatchedLengths",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "CurveHelper___NativeAssetRepeated",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "CurveHelper___PoolHasMoreTokensThanExpected",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "CurveHelper___PoolInReenteredState",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "CurveHelper___Reentrancy",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "CurveHelper___StorageSlotNotInitialized",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "CurveHelper___ZeroTransferAmount",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "CURVE_ETH",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "pool",
                "type": "address"
            },
            {
                "internalType": "contract ERC20",
                "name": "lpToken",
                "type": "address"
            },
            {
                "internalType": "contract ERC20[]",
                "name": "underlyingTokens",
                "type": "address[]"
            },
            {
                "internalType": "uint256[]",
                "name": "orderedUnderlyingTokenAmounts",
                "type": "uint256[]"
            },
            {
                "internalType": "uint256",
                "name": "minLPAmount",
                "type": "uint256"
            },
            {
                "internalType": "bool",
                "name": "useUnderlying",
                "type": "bool"
            }
        ],
        "name": "addLiquidityETHViaProxy",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "lpTokenDeltaBalance",
                "type": "uint256"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bytes",
                "name": "adaptorData",
                "type": "bytes"
            }
        ],
        "name": "assetOf",
        "outputs": [
            {
                "internalType": "contract ERC20",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bytes",
                "name": "adaptorData",
                "type": "bytes"
            }
        ],
        "name": "assetsUsed",
        "outputs": [
            {
                "internalType": "contract ERC20[]",
                "name": "assets",
                "type": "address[]"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bytes",
                "name": "adaptorData",
                "type": "bytes"
            }
        ],
        "name": "balanceOf",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "booster",
        "outputs": [
            {
                "internalType": "contract IBooster",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "assets",
                "type": "uint256"
            },
            {
                "internalType": "bytes",
                "name": "adaptorData",
                "type": "bytes"
            },
            {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
            }
        ],
        "name": "deposit",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_pid",
                "type": "uint256"
            },
            {
                "internalType": "address",
                "name": "_baseRewardPool",
                "type": "address"
            },
            {
                "internalType": "contract ERC20",
                "name": "_lpt",
                "type": "address"
            },
            {
                "internalType": "contract CurvePool",
                "name": "_pool",
                "type": "address"
            },
            {
                "internalType": "bytes4",
                "name": "_selector",
                "type": "bytes4"
            },
            {
                "internalType": "uint256",
                "name": "_amount",
                "type": "uint256"
            }
        ],
        "name": "depositLPTInConvexAndStake",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_baseRewardPool",
                "type": "address"
            },
            {
                "internalType": "bool",
                "name": "_claimExtras",
                "type": "bool"
            }
        ],
        "name": "getRewards",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "identifier",
        "outputs": [
            {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
            }
        ],
        "stateMutability": "pure",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "isDebt",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "pure",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "lockedStoragePosition",
        "outputs": [
            {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "nativeWrapper",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "pool",
                "type": "address"
            },
            {
                "internalType": "contract ERC20",
                "name": "lpToken",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "lpTokenAmount",
                "type": "uint256"
            },
            {
                "internalType": "contract ERC20[]",
                "name": "underlyingTokens",
                "type": "address[]"
            },
            {
                "internalType": "uint256[]",
                "name": "orderedMinimumUnderlyingTokenAmountsOut",
                "type": "uint256[]"
            },
            {
                "internalType": "bool",
                "name": "useUnderlying",
                "type": "bool"
            }
        ],
        "name": "removeLiquidityETHViaProxy",
        "outputs": [
            {
                "internalType": "uint256[]",
                "name": "balanceDelta",
                "type": "uint256[]"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "contract ERC20",
                "name": "asset",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "spender",
                "type": "address"
            }
        ],
        "name": "revokeApproval",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "slippage",
        "outputs": [
            {
                "internalType": "uint32",
                "name": "",
                "type": "uint32"
            }
        ],
        "stateMutability": "pure",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
            },
            {
                "internalType": "address",
                "name": "receiver",
                "type": "address"
            },
            {
                "internalType": "bytes",
                "name": "adaptorData",
                "type": "bytes"
            },
            {
                "internalType": "bytes",
                "name": "configurationData",
                "type": "bytes"
            }
        ],
        "name": "withdraw",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_baseRewardPool",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "_amount",
                "type": "uint256"
            },
            {
                "internalType": "bool",
                "name": "_claim",
                "type": "bool"
            }
        ],
        "name": "withdrawFromBaseRewardPoolAsLPT",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bytes",
                "name": "adaptorData",
                "type": "bytes"
            },
            {
                "internalType": "bytes",
                "name": "configurationData",
                "type": "bytes"
            }
        ],
        "name": "withdrawableFrom",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "stateMutability": "payable",
        "type": "receive"
    }
]
