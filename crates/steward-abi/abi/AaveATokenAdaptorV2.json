{
  "abi": [
    {
      "inputs": [],
      "name": "AaveATokenAdaptor__HealthFactorTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__ExternalReceiverBlocked",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "BaseAdaptor__PricingNotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__Slippage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserDepositsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaseAdaptor__UserWithdrawsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetOf",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "assetsUsed",
      "outputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "tokenToDeposit",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToDeposit",
          "type": "uint256"
        }
      ],
      "name": "depositToAave",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDebt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "revokeApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippage",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "configData",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "tokenToWithdraw",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToWithdraw",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromAave",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "adaptorData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "configData",
          "type": "bytes"
        }
      ],
      "name": "withdrawableFrom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611572806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063aeffddde11610071578063aeffddde1461012e578063c9111bd71461014e578063d3bfe76a14610161578063e170a9bf14610174578063eeb149e71461019f578063fa50e5d2146101b257600080fd5b80633e032a3b146100b9578063487ede04146100ce57806369445c31146100e357806378415365146100f65780637998a1c41461011757806389353a091461011f575b600080fd5b60405161232881526020015b60405180910390f35b6100e16100dc366004611146565b6101c5565b005b6100e16100f1366004611215565b610312565b610109610104366004611282565b610469565b6040519081526020016100c5565b6101096104f2565b604051600081526020016100c5565b61014161013c366004611282565b610550565b6040516100c591906112bf565b6100e161015c36600461130c565b6105f1565b6100e161016f36600461138c565b610899565b610187610182366004611282565b6108b2565b6040516001600160a01b0390911681526020016100c5565b6100e16101ad366004611146565b61092d565b6101096101c03660046113c5565b610a06565b737d2768de32b0b80b7a3454c06bdac94a69ddc7a9604051631a4ca37b60e21b81526001600160a01b0384811660048301526024820184905230604483015291909116906369328dec906064016020604051808303816000875af1158015610231573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102559190611429565b506000737d2768de32b0b80b7a3454c06bdac94a69ddc7a9604051632fe4a15f60e21b81523060048201526001600160a01b03919091169063bf92857c9060240160c060405180830381865afa1580156102b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d79190611442565b955050505050506102ed6710a741a46278000090565b81101561030d57604051633204bb7b60e21b815260040160405180910390fd5b505050565b600082806020019051810190610328919061148c565b90506000816001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e919061148c565b90506103b86001600160a01b038216737d2768de32b0b80b7a3454c06bdac94a69ddc7a987610e71565b737d2768de32b0b80b7a3454c06bdac94a69ddc7a960405163e8eda9df60e01b81526001600160a01b0383811660048301526024820188905230604483015260006064830152919091169063e8eda9df90608401600060405180830381600087803b15801561042657600080fd5b505af115801561043a573d6000803e3d6000fd5b505050506104628161045d737d2768de32b0b80b7a3454c06bdac94a69ddc7a990565b610ef3565b5050505050565b60008082806020019051810190610480919061148c565b6040516370a0823160e01b81523360048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa1580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb9190611429565b9392505050565b60006040516020016105359060208082526019908201527f416176652061546f6b656e2041646170746f72205620312e3000000000000000604082015260600190565b60405160208183030381529060405280519060200120905090565b6040805160028082526060808301845292602083019080368337019050509050610579826108b2565b8160008151811061058c5761058c6114a9565b6001600160a01b039092166020928302919091019091015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2816001815181106105cc576105cc6114a9565b60200260200101906001600160a01b031690816001600160a01b031681525050919050565b6105fa83610f82565b600082806020019051810190610610919061148c565b9050737d2768de32b0b80b7a3454c06bdac94a69ddc7a96001600160a01b03166369328dec826001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610697919061148c565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018890523060448201526064016020604051808303816000875af11580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e9190611429565b50600080737d2768de32b0b80b7a3454c06bdac94a69ddc7a9604051632fe4a15f60e21b81523060048201526001600160a01b03919091169063bf92857c9060240160c060405180830381865afa15801561076d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107919190611442565b95505050509250506000821115610819576000848060200190518101906107b89190611429565b9050806000036107db57604051635f5003c560e11b815260040160405180910390fd5b6710a741a4627800008110156107f657506710a741a4627800005b8082101561081757604051633204bb7b60e21b815260040160405180910390fd5b505b6108908688856001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561085c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610880919061148c565b6001600160a01b03169190611019565b50505050505050565b6108ae6001600160a01b038316826000610e71565b5050565b600080828060200190518101906108c9919061148c565b9050806001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610909573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb919061148c565b6109378282611091565b90506109616001600160a01b038316737d2768de32b0b80b7a3454c06bdac94a69ddc7a983610e71565b737d2768de32b0b80b7a3454c06bdac94a69ddc7a960405163e8eda9df60e01b81526001600160a01b0384811660048301526024820184905230604483015260006064830152919091169063e8eda9df90608401600060405180830381600087803b1580156109cf57600080fd5b505af11580156109e3573d6000803e3d6000fd5b505050506108ae8261045d737d2768de32b0b80b7a3454c06bdac94a69ddc7a990565b60008083806020019051810190610a1d919061148c565b90506000808080737d2768de32b0b80b7a3454c06bdac94a69ddc7a9604051632fe4a15f60e21b81523360048201526001600160a01b03919091169063bf92857c9060240160c060405180830381865afa158015610a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa39190611442565b9550509450509350935082600003610b29576040516370a0823160e01b81523360048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015610af9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1d9190611429565b95505050505050610e6b565b600087806020019051810190610b3f9190611429565b905080600003610b585760009650505050505050610e6b565b6710a741a462780000811015610b7357506710a741a4627800005b6000662386f26fc10000610b8781846114d5565b9250610b9381846114d5565b841015610bab57600098505050505050505050610e6b565b610bc786610bbf87655af3107a40006114e8565b859190611112565b610bd19088611507565b91506000886001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c37919061148c565b905073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc1196001600160a01b03821601610c6f57829950505050505050505050610e6b565b6000336001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd3919061148c565b604051635c9fcd8560e11b8152600260048201526001600160a01b03919091169063b93f9b0a90602401602060405180830381865afa158015610d1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3e919061148c565b905060006001600160a01b03821663a8ea52c873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26040516001600160e01b031960e084901b1681526001600160a01b039182166004820152602481018990529086166044820152606401602060405180830381865afa158015610db9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddd9190611429565b6040516370a0823160e01b81523360048201529091506000906001600160a01b038d16906370a0823190602401602060405180830381865afa158015610e27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4b9190611429565b9050808211610e5a5781610e5c565b805b9c505050505050505050505050505b92915050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610eed5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064015b60405180910390fd5b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa158015610f43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f679190611429565b11156108ae576108ae6001600160a01b038316826000610e71565b6001600160a01b0381163014801590610ff85750306001600160a01b0316634c4602da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff8919061151a565b15611016576040516307de9b5160e21b815260040160405180910390fd5b50565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610eed5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610ee4565b6000600019820361110b576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa1580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111049190611429565b9050610e6b565b5080610e6b565b82820281151584158583048514171661112a57600080fd5b0492915050565b6001600160a01b038116811461101657600080fd5b6000806040838503121561115957600080fd5b823561116481611131565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261119957600080fd5b813567ffffffffffffffff808211156111b4576111b4611172565b604051601f8301601f19908116603f011681019082821181831017156111dc576111dc611172565b816040528381528660208588010111156111f557600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561122a57600080fd5b83359250602084013567ffffffffffffffff8082111561124957600080fd5b61125587838801611188565b9350604086013591508082111561126b57600080fd5b5061127886828701611188565b9150509250925092565b60006020828403121561129457600080fd5b813567ffffffffffffffff8111156112ab57600080fd5b6112b784828501611188565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156113005783516001600160a01b0316835292840192918401916001016112db565b50909695505050505050565b6000806000806080858703121561132257600080fd5b84359350602085013561133481611131565b9250604085013567ffffffffffffffff8082111561135157600080fd5b61135d88838901611188565b9350606087013591508082111561137357600080fd5b5061138087828801611188565b91505092959194509250565b6000806040838503121561139f57600080fd5b82356113aa81611131565b915060208301356113ba81611131565b809150509250929050565b600080604083850312156113d857600080fd5b823567ffffffffffffffff808211156113f057600080fd5b6113fc86838701611188565b9350602085013591508082111561141257600080fd5b5061141f85828601611188565b9150509250929050565b60006020828403121561143b57600080fd5b5051919050565b60008060008060008060c0878903121561145b57600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b60006020828403121561149e57600080fd5b81516104eb81611131565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610e6b57610e6b6114bf565b6000816000190483118215151615611502576115026114bf565b500290565b81810381811115610e6b57610e6b6114bf565b60006020828403121561152c57600080fd5b815180151581146104eb57600080fdfea26469706673582212204fbde9c6705f4da12523bbe6c89e39f4e56750b562e1b441420261a3d87bf8d064736f6c63430008100033",
    "sourceMap": "441:11680:74:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063aeffddde11610071578063aeffddde1461012e578063c9111bd71461014e578063d3bfe76a14610161578063e170a9bf14610174578063eeb149e71461019f578063fa50e5d2146101b257600080fd5b80633e032a3b146100b9578063487ede04146100ce57806369445c31146100e357806378415365146100f65780637998a1c41461011757806389353a091461011f575b600080fd5b60405161232881526020015b60405180910390f35b6100e16100dc366004611146565b6101c5565b005b6100e16100f1366004611215565b610312565b610109610104366004611282565b610469565b6040519081526020016100c5565b6101096104f2565b604051600081526020016100c5565b61014161013c366004611282565b610550565b6040516100c591906112bf565b6100e161015c36600461130c565b6105f1565b6100e161016f36600461138c565b610899565b610187610182366004611282565b6108b2565b6040516001600160a01b0390911681526020016100c5565b6100e16101ad366004611146565b61092d565b6101096101c03660046113c5565b610a06565b737d2768de32b0b80b7a3454c06bdac94a69ddc7a9604051631a4ca37b60e21b81526001600160a01b0384811660048301526024820184905230604483015291909116906369328dec906064016020604051808303816000875af1158015610231573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102559190611429565b506000737d2768de32b0b80b7a3454c06bdac94a69ddc7a9604051632fe4a15f60e21b81523060048201526001600160a01b03919091169063bf92857c9060240160c060405180830381865afa1580156102b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d79190611442565b955050505050506102ed6710a741a46278000090565b81101561030d57604051633204bb7b60e21b815260040160405180910390fd5b505050565b600082806020019051810190610328919061148c565b90506000816001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e919061148c565b90506103b86001600160a01b038216737d2768de32b0b80b7a3454c06bdac94a69ddc7a987610e71565b737d2768de32b0b80b7a3454c06bdac94a69ddc7a960405163e8eda9df60e01b81526001600160a01b0383811660048301526024820188905230604483015260006064830152919091169063e8eda9df90608401600060405180830381600087803b15801561042657600080fd5b505af115801561043a573d6000803e3d6000fd5b505050506104628161045d737d2768de32b0b80b7a3454c06bdac94a69ddc7a990565b610ef3565b5050505050565b60008082806020019051810190610480919061148c565b6040516370a0823160e01b81523360048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa1580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb9190611429565b9392505050565b60006040516020016105359060208082526019908201527f416176652061546f6b656e2041646170746f72205620312e3000000000000000604082015260600190565b60405160208183030381529060405280519060200120905090565b6040805160028082526060808301845292602083019080368337019050509050610579826108b2565b8160008151811061058c5761058c6114a9565b6001600160a01b039092166020928302919091019091015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2816001815181106105cc576105cc6114a9565b60200260200101906001600160a01b031690816001600160a01b031681525050919050565b6105fa83610f82565b600082806020019051810190610610919061148c565b9050737d2768de32b0b80b7a3454c06bdac94a69ddc7a96001600160a01b03166369328dec826001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610697919061148c565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018890523060448201526064016020604051808303816000875af11580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e9190611429565b50600080737d2768de32b0b80b7a3454c06bdac94a69ddc7a9604051632fe4a15f60e21b81523060048201526001600160a01b03919091169063bf92857c9060240160c060405180830381865afa15801561076d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107919190611442565b95505050509250506000821115610819576000848060200190518101906107b89190611429565b9050806000036107db57604051635f5003c560e11b815260040160405180910390fd5b6710a741a4627800008110156107f657506710a741a4627800005b8082101561081757604051633204bb7b60e21b815260040160405180910390fd5b505b6108908688856001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561085c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610880919061148c565b6001600160a01b03169190611019565b50505050505050565b6108ae6001600160a01b038316826000610e71565b5050565b600080828060200190518101906108c9919061148c565b9050806001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610909573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb919061148c565b6109378282611091565b90506109616001600160a01b038316737d2768de32b0b80b7a3454c06bdac94a69ddc7a983610e71565b737d2768de32b0b80b7a3454c06bdac94a69ddc7a960405163e8eda9df60e01b81526001600160a01b0384811660048301526024820184905230604483015260006064830152919091169063e8eda9df90608401600060405180830381600087803b1580156109cf57600080fd5b505af11580156109e3573d6000803e3d6000fd5b505050506108ae8261045d737d2768de32b0b80b7a3454c06bdac94a69ddc7a990565b60008083806020019051810190610a1d919061148c565b90506000808080737d2768de32b0b80b7a3454c06bdac94a69ddc7a9604051632fe4a15f60e21b81523360048201526001600160a01b03919091169063bf92857c9060240160c060405180830381865afa158015610a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa39190611442565b9550509450509350935082600003610b29576040516370a0823160e01b81523360048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015610af9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1d9190611429565b95505050505050610e6b565b600087806020019051810190610b3f9190611429565b905080600003610b585760009650505050505050610e6b565b6710a741a462780000811015610b7357506710a741a4627800005b6000662386f26fc10000610b8781846114d5565b9250610b9381846114d5565b841015610bab57600098505050505050505050610e6b565b610bc786610bbf87655af3107a40006114e8565b859190611112565b610bd19088611507565b91506000886001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c37919061148c565b905073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc1196001600160a01b03821601610c6f57829950505050505050505050610e6b565b6000336001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd3919061148c565b604051635c9fcd8560e11b8152600260048201526001600160a01b03919091169063b93f9b0a90602401602060405180830381865afa158015610d1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3e919061148c565b905060006001600160a01b03821663a8ea52c873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26040516001600160e01b031960e084901b1681526001600160a01b039182166004820152602481018990529086166044820152606401602060405180830381865afa158015610db9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddd9190611429565b6040516370a0823160e01b81523360048201529091506000906001600160a01b038d16906370a0823190602401602060405180830381865afa158015610e27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4b9190611429565b9050808211610e5a5781610e5c565b805b9c505050505050505050505050505b92915050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610eed5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064015b60405180910390fd5b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa158015610f43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f679190611429565b11156108ae576108ae6001600160a01b038316826000610e71565b6001600160a01b0381163014801590610ff85750306001600160a01b0316634c4602da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff8919061151a565b15611016576040516307de9b5160e21b815260040160405180910390fd5b50565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610eed5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610ee4565b6000600019820361110b576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa1580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111049190611429565b9050610e6b565b5080610e6b565b82820281151584158583048514171661112a57600080fd5b0492915050565b6001600160a01b038116811461101657600080fd5b6000806040838503121561115957600080fd5b823561116481611131565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261119957600080fd5b813567ffffffffffffffff808211156111b4576111b4611172565b604051601f8301601f19908116603f011681019082821181831017156111dc576111dc611172565b816040528381528660208588010111156111f557600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561122a57600080fd5b83359250602084013567ffffffffffffffff8082111561124957600080fd5b61125587838801611188565b9350604086013591508082111561126b57600080fd5b5061127886828701611188565b9150509250925092565b60006020828403121561129457600080fd5b813567ffffffffffffffff8111156112ab57600080fd5b6112b784828501611188565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156113005783516001600160a01b0316835292840192918401916001016112db565b50909695505050505050565b6000806000806080858703121561132257600080fd5b84359350602085013561133481611131565b9250604085013567ffffffffffffffff8082111561135157600080fd5b61135d88838901611188565b9350606087013591508082111561137357600080fd5b5061138087828801611188565b91505092959194509250565b6000806040838503121561139f57600080fd5b82356113aa81611131565b915060208301356113ba81611131565b809150509250929050565b600080604083850312156113d857600080fd5b823567ffffffffffffffff808211156113f057600080fd5b6113fc86838701611188565b9350602085013591508082111561141257600080fd5b5061141f85828601611188565b9150509250929050565b60006020828403121561143b57600080fd5b5051919050565b60008060008060008060c0878903121561145b57600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b60006020828403121561149e57600080fd5b81516104eb81611131565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610e6b57610e6b6114bf565b6000816000190483118215151615611502576115026114bf565b500290565b81810381811115610e6b57610e6b6114bf565b60006020828403121561152c57600080fd5b815180151581146104eb57600080fdfea26469706673582212204fbde9c6705f4da12523bbe6c89e39f4e56750b562e1b441420261a3d87bf8d064736f6c63430008100033",
    "sourceMap": "441:11680:74:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:78:78;;;2269:5;158:42:98;;146:2;131:18;2203:78:78;;;;;;;;11715:404:74;;;;;;:::i;:::-;;:::i;:::-;;3421:491;;;;;;:::i;:::-;;:::i;9489:202::-;;;;;;:::i;:::-;;:::i;:::-;;;2634:25:98;;;2622:2;2607:18;9489:202:74;2488:177:98;2170:135:74;;;:::i;10576:83::-;;;10624:4;2992:41:98;;2980:2;2965:18;10576:83:74;2852:187:98;10283:209:74;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4478:1212::-;;;;;;:::i;:::-;;:::i;8378:107:78:-;;;;;;:::i;:::-;;:::i;9775:218:74:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5078:32:98;;;5060:51;;5048:2;5033:18;9775:218:74;4899::98;11058:423:74;;;;;;:::i;:::-;;:::i;6633:2766::-;;;;;;:::i;:::-;;:::i;11715:404::-;2458:42;11807:74;;-1:-1:-1;;;11807:74:74;;-1:-1:-1;;;;;5924:15:98;;;11807:74:74;;;5906:34:98;5956:18;;;5949:34;;;11875:4:74;5999:18:98;;;5992:43;11807:15:74;;;;;;;5841:18:98;;11807:74:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11964:20:74;2458:42;11988:40;;-1:-1:-1;;;11988:40:74;;12022:4;11988:40;;;5060:51:98;-1:-1:-1;;;;;11988:25:74;;;;;;;5033:18:98;;11988:40:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11953:75;;;;;;;12057:7;2935:6;;2869:79;12057:7;12042:12;:22;12038:74;;;12073:39;;-1:-1:-1;;;12073:39:74;;;;;;;;;;;12038:74;11797:322;11715:404;;:::o;3421:491::-;3555:17;3597:11;3586:34;;;;;;;;;;;;:::i;:::-;3555:66;;3631:11;3651:6;-1:-1:-1;;;;;3651:31:74;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3631:54;-1:-1:-1;3695:42:74;-1:-1:-1;;;;;3695:17:74;;2458:42;3730:6;3695:17;:42::i;:::-;2458;3747:56;;-1:-1:-1;;;3747:56:74;;-1:-1:-1;;;;;7768:15:98;;;3747:56:74;;;7750:34:98;7800:18;;;7793:34;;;3794:4:74;7843:18:98;;;7836:43;3801:1:74;7895:18:98;;;7888:47;3747:14:74;;;;;;;7684:19:98;;3747:56:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3858:47;3882:5;3897:6;2458:42;;2389:119;3897:6;3858:23;:47::i;:::-;3510:402;;3421:491;;;:::o;9489:202::-;9564:7;9583:13;9610:11;9599:34;;;;;;;;;;;;:::i;:::-;9650;;-1:-1:-1;;;9650:34:74;;9673:10;9650:34;;;5060:51:98;9583:50:74;;-1:-1:-1;;;;;;9650:22:74;;;;;5033:18:98;;9650:34:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9643:41;9489:202;-1:-1:-1;;;9489:202:74:o;2170:135::-;2222:7;2258:39;;;;;;8148:2:98;8130:21;;;8187:2;8167:18;;;8160:30;8226:27;8221:2;8206:18;;8199:55;8286:2;8271:18;;7946:349;2258:39:74;;;;;;;;;;;;;2248:50;;;;;;2241:57;;2170:135;:::o;10283:209::-;10401:14;;;10413:1;10401:14;;;10359:21;10401:14;;;;;10359:21;10401:14;;;;;;;;;;-1:-1:-1;10401:14:74;10392:23;;10437:20;10445:11;10437:7;:20::i;:::-;10425:6;10432:1;10425:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10425:32:74;;;:9;;;;;;;;;;;:32;2653:42;10467:6;10474:1;10467:9;;;;;;;;:::i;:::-;;;;;;:18;-1:-1:-1;;;;;10467:18:74;;;-1:-1:-1;;;;;10467:18:74;;;;;10283:209;;;:::o;4478:1212::-;4685:32;4708:8;4685:22;:32::i;:::-;4766:16;4807:11;4796:34;;;;;;;;;;;;:::i;:::-;4766:65;-1:-1:-1;2458:42:74;-1:-1:-1;;;;;4841:15:74;;4857:5;-1:-1:-1;;;;;4857:30:74;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4841:72;;-1:-1:-1;;;;;;4841:72:74;;;;;;;-1:-1:-1;;;;;5924:15:98;;;4841:72:74;;;5906:34:98;5956:18;;;5949:34;;;4907:4:74;5999:18:98;;;5992:43;5841:18;;4841:72:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4927:20:74;;2458:42;4979:40;;-1:-1:-1;;;4979:40:74;;5013:4;4979:40;;;5060:51:98;-1:-1:-1;;;;;4979:25:74;;;;;;;5033:18:98;;4979:40:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4924:95;;;;;;;;5048:1;5033:12;:16;5029:534;;;5114:23;5151:10;5140:33;;;;;;;;;;;;:::i;:::-;5114:59;;5191:15;5210:1;5191:20;5187:104;;5238:38;;-1:-1:-1;;;5238:38:74;;;;;;;;;;;5187:104;2935:6;5404:15;:25;5400:56;;;-1:-1:-1;2935:6:74;5400:56;5489:15;5474:12;:30;5470:82;;;5513:39;;-1:-1:-1;;;5513:39:74;;;;;;;;;;;5470:82;5051:512;5029:534;5613:70;5666:8;5676:6;5619:5;-1:-1:-1;;;;;5619:30:74;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5613:52:74;;:70;:52;:70::i;:::-;4635:1055;;;4478:1212;;;;:::o;8378:107:78:-;8449:29;-1:-1:-1;;;;;8449:17:78;;8467:7;8476:1;8449:17;:29::i;:::-;8378:107;;:::o;9775:218:74:-;9848:5;9865:16;9906:11;9895:34;;;;;;;;;;;;:::i;:::-;9865:65;;9953:5;-1:-1:-1;;;;;9953:30:74;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11058:423::-;11163:46;11177:14;11193:15;11163:13;:46::i;:::-;11145:64;-1:-1:-1;11219:60:74;-1:-1:-1;;;;;11219:26:74;;2458:42;11145:64;11219:26;:60::i;:::-;2458:42;11289:74;;-1:-1:-1;;;11289:74:74;;-1:-1:-1;;;;;7768:15:98;;;11289:74:74;;;7750:34:98;7800:18;;;7793:34;;;11354:4:74;7843:18:98;;;7836:43;11361:1:74;7895:18:98;;;7888:47;11289:14:74;;;;;;;7684:19:98;;11289:74:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11418:56;11442:14;11466:6;2458:42;;2389:119;6633:2766;6762:7;6781:16;6822:11;6811:34;;;;;;;;;;;;:::i;:::-;6781:65;-1:-1:-1;6871:26:74;;;;2458:42;7055:37;;-1:-1:-1;;;7055:37:74;;7081:10;7055:37;;;5060:51:98;-1:-1:-1;;;;;7055:25:74;;;;;;;5033:18:98;;7055:37:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6857:235;;;;;;;;;;7193:12;7209:1;7193:17;7189:73;;7219:43;;-1:-1:-1;;;7219:43:74;;7251:10;7219:43;;;5060:51:98;-1:-1:-1;;;;;7219:31:74;;;;;5033:18:98;;7219:43:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7212:50;;;;;;;;;7189:73;7336:23;7373:10;7362:33;;;;;;;;;;;;:::i;:::-;7336:59;;7544:15;7563:1;7544:20;7540:34;;7573:1;7566:8;;;;;;;;;;7540:34;2935:6;7680:15;:25;7676:56;;;-1:-1:-1;2935:6:74;7676:56;7743:28;7891:7;7954:26;7891:7;7954:26;;:::i;:::-;;-1:-1:-1;8104:25:74;8122:7;7954:26;8104:25;:::i;:::-;8088:12;:42;8084:56;;;8139:1;8132:8;;;;;;;;;;;;8084:56;8303:78;8330:12;8345:34;:27;8375:4;8345:34;:::i;:::-;8303:15;;:78;:26;:78::i;:::-;8270:111;;:18;:111;:::i;:::-;8235:146;;8710:16;8735:5;-1:-1:-1;;;;;8735:30:74;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8710:58;-1:-1:-1;;;;;;;;8782:20:74;;;8778:53;;8811:20;8804:27;;;;;;;;;;;;;8778:53;8929:23;8974:10;-1:-1:-1;;;;;8967:27:74;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;;-1:-1:-1;;;8967:70:74;;2104:1:78;8967:70:74;;;2634:25:98;-1:-1:-1;;;;;8967:40:74;;;;;;;2607:18:98;;8967:70:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8929:109;-1:-1:-1;9048:20:74;-1:-1:-1;;;;;9071:20:74;;;2653:42;9071:62;;-1:-1:-1;;;;;;9071:62:74;;;;;;;-1:-1:-1;;;;;5924:15:98;;;9071:62:74;;;5906:34:98;5956:18;;;5949:34;;;6019:15;;;5999:18;;;5992:43;5841:18;;9071:62:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9161:43;;-1:-1:-1;;;9161:43:74;;9193:10;9161:43;;;5060:51:98;9048:85:74;;-1:-1:-1;9143:15:74;;-1:-1:-1;;;;;9161:31:74;;;;;5033:18:98;;9161:43:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9143:61;;9360:7;9345:12;:22;:47;;9380:12;9345:47;;;9370:7;9345:47;9338:54;;;;;;;;;;;;;;6633:2766;;;;;:::o;4327:1454:48:-;4438:12;4565:4;4559:11;-1:-1:-1;;;4688:17:48;4681:93;4821:2;4817:1;4798:17;4794:25;4787:37;4901:6;4896:2;4877:17;4873:26;4866:42;5703:2;5700:1;5696:2;5677:17;5674:1;5667:5;5660;5655:51;5224:16;5217:24;5211:2;5193:16;5190:24;5186:1;5182;5176:8;5173:15;5169:46;5166:76;4966:754;4955:765;;;5748:7;5740:34;;;;-1:-1:-1;;;5740:34:48;;9893:2:98;5740:34:48;;;9875:21:98;9932:2;9912:18;;;9905:30;-1:-1:-1;;;9951:18:98;;;9944:44;10005:18;;5740:34:48;;;;;;;;;4428:1353;4327:1454;;;:::o;7665:167:78:-;7751:39;;-1:-1:-1;;;7751:39:78;;7775:4;7751:39;;;10246:34:98;-1:-1:-1;;;;;10316:15:98;;;10296:18;;;10289:43;7793:1:78;;7751:15;;;;;;10181:18:98;;7751:39:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;7747:78;;;7796:29;-1:-1:-1;;;;;7796:17:78;;7814:7;7823:1;7796:17;:29::i;7932:218::-;-1:-1:-1;;;;;8010:25:78;;8030:4;8010:25;;;;:74;;;8054:4;-1:-1:-1;;;;;8039:43:78;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8006:137;;;8105:38;;-1:-1:-1;;;8105:38:78;;;;;;;;;;;8006:137;7932:218;:::o;2865:1456:48:-;2977:12;3104:4;3098:11;-1:-1:-1;;;3227:17:48;3220:93;3360:2;3356:1;3337:17;3333:25;3326:37;3440:6;3435:2;3416:17;3412:26;3405:42;4242:2;4239:1;4235:2;4216:17;4213:1;4206:5;4199;4194:51;3763:16;3756:24;3750:2;3732:16;3729:24;3725:1;3721;3715:8;3712:15;3708:46;3705:76;3505:754;3494:765;;;4287:7;4279:35;;;;-1:-1:-1;;;4279:35:48;;10827:2:98;4279:35:48;;;10809:21:98;10866:2;10846:18;;;10839:30;-1:-1:-1;;;10885:18:98;;;10878:45;10940:18;;4279:35:48;10625:339:98;7323:207:78;7406:7;-1:-1:-1;;7429:6:78;:27;7425:98;;7465:30;;-1:-1:-1;;;7465:30:78;;7489:4;7465:30;;;5060:51:98;-1:-1:-1;;;;;7465:15:78;;;;;5033:18:98;;7465:30:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7458:37;;;;7425:98;-1:-1:-1;7517:6:78;7510:13;;1357:535:96;1563:9;;;1694:19;;1687:27;1719:9;;1733;;;1730:16;;1716:31;1683:65;1673:121;;1778:1;1775;1768:12;1673:121;1857:19;;1357:535;-1:-1:-1;;1357:535:96:o;211:138:98:-;-1:-1:-1;;;;;293:31:98;;283:42;;273:70;;339:1;336;329:12;354:337;437:6;445;498:2;486:9;477:7;473:23;469:32;466:52;;;514:1;511;504:12;466:52;553:9;540:23;572:38;604:5;572:38;:::i;:::-;629:5;681:2;666:18;;;;653:32;;-1:-1:-1;;;354:337:98:o;696:127::-;757:10;752:3;748:20;745:1;738:31;788:4;785:1;778:15;812:4;809:1;802:15;828:718;870:5;923:3;916:4;908:6;904:17;900:27;890:55;;941:1;938;931:12;890:55;977:6;964:20;1003:18;1040:2;1036;1033:10;1030:36;;;1046:18;;:::i;:::-;1121:2;1115:9;1089:2;1175:13;;-1:-1:-1;;1171:22:98;;;1195:2;1167:31;1163:40;1151:53;;;1219:18;;;1239:22;;;1216:46;1213:72;;;1265:18;;:::i;:::-;1305:10;1301:2;1294:22;1340:2;1332:6;1325:18;1386:3;1379:4;1374:2;1366:6;1362:15;1358:26;1355:35;1352:55;;;1403:1;1400;1393:12;1352:55;1467:2;1460:4;1452:6;1448:17;1441:4;1433:6;1429:17;1416:54;1514:1;1507:4;1502:2;1494:6;1490:15;1486:26;1479:37;1534:6;1525:15;;;;;;828:718;;;;:::o;1551:607::-;1646:6;1654;1662;1715:2;1703:9;1694:7;1690:23;1686:32;1683:52;;;1731:1;1728;1721:12;1683:52;1767:9;1754:23;1744:33;;1828:2;1817:9;1813:18;1800:32;1851:18;1892:2;1884:6;1881:14;1878:34;;;1908:1;1905;1898:12;1878:34;1931:49;1972:7;1963:6;1952:9;1948:22;1931:49;:::i;:::-;1921:59;;2033:2;2022:9;2018:18;2005:32;1989:48;;2062:2;2052:8;2049:16;2046:36;;;2078:1;2075;2068:12;2046:36;;2101:51;2144:7;2133:8;2122:9;2118:24;2101:51;:::i;:::-;2091:61;;;1551:607;;;;;:::o;2163:320::-;2231:6;2284:2;2272:9;2263:7;2259:23;2255:32;2252:52;;;2300:1;2297;2290:12;2252:52;2340:9;2327:23;2373:18;2365:6;2362:30;2359:50;;;2405:1;2402;2395:12;2359:50;2428:49;2469:7;2460:6;2449:9;2445:22;2428:49;:::i;:::-;2418:59;2163:320;-1:-1:-1;;;;2163:320:98:o;3044:673::-;3230:2;3282:21;;;3352:13;;3255:18;;;3374:22;;;3201:4;;3230:2;3453:15;;;;3427:2;3412:18;;;3201:4;3496:195;3510:6;3507:1;3504:13;3496:195;;;3575:13;;-1:-1:-1;;;;;3571:39:98;3559:52;;3666:15;;;;3631:12;;;;3607:1;3525:9;3496:195;;;-1:-1:-1;3708:3:98;;3044:673;-1:-1:-1;;;;;;3044:673:98:o;3722:750::-;3826:6;3834;3842;3850;3903:3;3891:9;3882:7;3878:23;3874:33;3871:53;;;3920:1;3917;3910:12;3871:53;3956:9;3943:23;3933:33;;4016:2;4005:9;4001:18;3988:32;4029:38;4061:5;4029:38;:::i;:::-;4086:5;-1:-1:-1;4142:2:98;4127:18;;4114:32;4165:18;4195:14;;;4192:34;;;4222:1;4219;4212:12;4192:34;4245:49;4286:7;4277:6;4266:9;4262:22;4245:49;:::i;:::-;4235:59;;4347:2;4336:9;4332:18;4319:32;4303:48;;4376:2;4366:8;4363:16;4360:36;;;4392:1;4389;4382:12;4360:36;;4415:51;4458:7;4447:8;4436:9;4432:24;4415:51;:::i;:::-;4405:61;;;3722:750;;;;;;;:::o;4477:417::-;4560:6;4568;4621:2;4609:9;4600:7;4596:23;4592:32;4589:52;;;4637:1;4634;4627:12;4589:52;4676:9;4663:23;4695:38;4727:5;4695:38;:::i;:::-;4752:5;-1:-1:-1;4809:2:98;4794:18;;4781:32;4822:40;4781:32;4822:40;:::i;:::-;4881:7;4871:17;;;4477:417;;;;;:::o;5122:539::-;5208:6;5216;5269:2;5257:9;5248:7;5244:23;5240:32;5237:52;;;5285:1;5282;5275:12;5237:52;5325:9;5312:23;5354:18;5395:2;5387:6;5384:14;5381:34;;;5411:1;5408;5401:12;5381:34;5434:49;5475:7;5466:6;5455:9;5451:22;5434:49;:::i;:::-;5424:59;;5536:2;5525:9;5521:18;5508:32;5492:48;;5565:2;5555:8;5552:16;5549:36;;;5581:1;5578;5571:12;5549:36;;5604:51;5647:7;5636:8;5625:9;5621:24;5604:51;:::i;:::-;5594:61;;;5122:539;;;;;:::o;6046:184::-;6116:6;6169:2;6157:9;6148:7;6144:23;6140:32;6137:52;;;6185:1;6182;6175:12;6137:52;-1:-1:-1;6208:16:98;;6046:184;-1:-1:-1;6046:184:98:o;6443:492::-;6558:6;6566;6574;6582;6590;6598;6651:3;6639:9;6630:7;6626:23;6622:33;6619:53;;;6668:1;6665;6658:12;6619:53;6697:9;6691:16;6681:26;;6747:2;6736:9;6732:18;6726:25;6716:35;;6791:2;6780:9;6776:18;6770:25;6760:35;;6835:2;6824:9;6820:18;6814:25;6804:35;;6879:3;6868:9;6864:19;6858:26;6848:36;;6924:3;6913:9;6909:19;6903:26;6893:36;;6443:492;;;;;;;;:::o;6940:266::-;7018:6;7071:2;7059:9;7050:7;7046:23;7042:32;7039:52;;;7087:1;7084;7077:12;7039:52;7119:9;7113:16;7138:38;7170:5;7138:38;:::i;8300:127::-;8361:10;8356:3;8352:20;8349:1;8342:31;8392:4;8389:1;8382:15;8416:4;8413:1;8406:15;8432:127;8493:10;8488:3;8484:20;8481:1;8474:31;8524:4;8521:1;8514:15;8548:4;8545:1;8538:15;8564:125;8629:9;;;8650:10;;;8647:36;;;8663:18;;:::i;8694:168::-;8734:7;8800:1;8796;8792:6;8788:14;8785:1;8782:21;8777:1;8770:9;8763:17;8759:45;8756:71;;;8807:18;;:::i;:::-;-1:-1:-1;8847:9:98;;8694:168::o;8867:128::-;8934:9;;;8955:11;;;8952:37;;;8969:18;;:::i;10343:277::-;10410:6;10463:2;10451:9;10442:7;10438:23;10434:32;10431:52;;;10479:1;10476;10469:12;10431:52;10511:9;10505:16;10564:5;10557:13;10550:21;10543:5;10540:32;10530:60;;10586:1;10583;10576:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "assetOf(bytes)": "e170a9bf",
    "assetsUsed(bytes)": "aeffddde",
    "balanceOf(bytes)": "78415365",
    "deposit(uint256,bytes,bytes)": "69445c31",
    "depositToAave(address,uint256)": "eeb149e7",
    "identifier()": "7998a1c4",
    "isDebt()": "89353a09",
    "revokeApproval(address,address)": "d3bfe76a",
    "slippage()": "3e032a3b",
    "withdraw(uint256,address,bytes,bytes)": "c9111bd7",
    "withdrawFromAave(address,uint256)": "487ede04",
    "withdrawableFrom(bytes,bytes)": "fa50e5d2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AaveATokenAdaptor__HealthFactorTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__ExternalReceiverBlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"BaseAdaptor__PricingNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__Slippage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserDepositsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaseAdaptor__UserWithdrawsNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetOf\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"assetsUsed\",\"outputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"tokenToDeposit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToDeposit\",\"type\":\"uint256\"}],\"name\":\"depositToAave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDebt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"revokeApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippage\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"configData\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"tokenToWithdraw\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdrawFromAave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"adaptorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"configData\",\"type\":\"bytes\"}],\"name\":\"withdrawableFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"crispymangoes\",\"kind\":\"dev\",\"methods\":{\"assetsUsed(bytes)\":{\"details\":\"WETH is used when determining the withdrawableBalance.\"},\"deposit(uint256,bytes,bytes)\":{\"details\":\"configurationData is NOT used because this action will only increase the health factor\",\"params\":{\"adaptorData\":\"adaptor data containining the abi encoded aToken\",\"assets\":\"the amount of assets to lend on Aave\"}},\"depositToAave(address,uint256)\":{\"details\":\"Uses `_maxAvailable` helper function, see BaseAdaptor.sol\",\"params\":{\"amountToDeposit\":\"the amount of `tokenToDeposit` to lend on Aave.\",\"tokenToDeposit\":\"the token to lend on Aave\"}},\"identifier()\":{\"details\":\"Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult.\"},\"revokeApproval(address,address)\":{\"params\":{\"asset\":\"the ERC20 asset to revoke `spender`s approval for\",\"spender\":\"the address to revoke approval for\"}},\"withdraw(uint256,address,bytes,bytes)\":{\"details\":\"Important to verify that external receivers are allowed if receiver is not Cellar address.\",\"params\":{\"adaptorData\":\"adaptor data containining the abi encoded aToken\",\"assets\":\"the amount of assets to withdraw from Aave\",\"configData\":\"abi encoded minimum health factor, if zero user withdraws are not allowed.\",\"receiver\":\"the address to send withdrawn assets to\"}},\"withdrawFromAave(address,uint256)\":{\"params\":{\"amountToWithdraw\":\"the amount of `tokenToWithdraw` to withdraw from Aave\",\"tokenToWithdraw\":\"the token to withdraw from Aave.\"}},\"withdrawableFrom(bytes,bytes)\":{\"details\":\"Applies a `cushion` value to the health factor checks and calculation.      The goal of this is to minimize scenarios where users are withdrawing a very small amount of      assets from Aave. This function returns zero if      -minimum health factor is NOT set.      -the current health factor is less than the minimum health factor + 2x `cushion`      Otherwise this function calculates the withdrawable amount using      minimum health factor + `cushion` for its calcualtions.It is possible for the math below to lose a small amount of precision since it is only      maintaining 18 decimals during the calculation, but this is desired since      doing so lowers the withdrawable from amount which in turn raises the health factor.\"}},\"title\":\"Aave aToken Adaptor\",\"version\":1},\"userdoc\":{\"errors\":{\"AaveATokenAdaptor__HealthFactorTooLow()\":[{\"notice\":\"Attempted withdraw would lower Cellar health factor too low.\"}],\"BaseAdaptor__ExternalReceiverBlocked()\":[{\"notice\":\"Attempted to specify an external receiver during a Cellar `callOnAdaptor` call.\"}],\"BaseAdaptor__PricingNotSupported(address)\":[{\"notice\":\"Attempted swap used unsupported output asset.\"}],\"BaseAdaptor__Slippage()\":[{\"notice\":\"Attempted swap has bad slippage.\"}],\"BaseAdaptor__UserDepositsNotAllowed()\":[{\"notice\":\"Attempted to deposit to a position where user deposits were not allowed.\"}],\"BaseAdaptor__UserWithdrawsNotAllowed()\":[{\"notice\":\"Attempted to withdraw from a position where user withdraws were not allowed.\"}]},\"kind\":\"user\",\"methods\":{\"assetOf(bytes)\":{\"notice\":\"Returns the positions aToken underlying asset.\"},\"assetsUsed(bytes)\":{\"notice\":\"When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup.\"},\"balanceOf(bytes)\":{\"notice\":\"Returns the cellars balance of the positions aToken.\"},\"deposit(uint256,bytes,bytes)\":{\"notice\":\"Cellar must approve Pool to spend its assets, then call deposit to lend its assets.\"},\"depositToAave(address,uint256)\":{\"notice\":\"Allows strategists to lend assets on Aave.\"},\"isDebt()\":{\"notice\":\"This adaptor returns collateral, and not debt.\"},\"revokeApproval(address,address)\":{\"notice\":\"Allows strategists to zero out an approval for a given `asset`.\"},\"slippage()\":{\"notice\":\"Max possible slippage when making a swap router swap.\"},\"withdraw(uint256,address,bytes,bytes)\":{\"notice\":\"Cellars must withdraw from Aave, check if a minimum health factor is specified       then transfer assets to receiver.\"},\"withdrawFromAave(address,uint256)\":{\"notice\":\"Allows strategists to withdraw assets from Aave.\"},\"withdrawableFrom(bytes,bytes)\":{\"notice\":\"Uses configurartion data minimum health factor to calculate withdrawable assets from Aave.\"}},\"notice\":\"Allows Cellars to interact with Aave aToken positions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/adaptors/Aave/AaveATokenAdaptor.sol\":\"AaveATokenAdaptor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":@uniswapV3C/=lib/v3-core.git/contracts/\",\":@uniswapV3P/=lib/v3-periphery.git/contracts/\",\":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":v3-core.git/=lib/v3-core.git/contracts/\",\":v3-periphery.git/=lib/v3-periphery.git/contracts/\"]},\"sources\":{\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"src/Registry.sol\":{\"keccak256\":\"0x72690631323f459be3da7dd7c4644a7678a509ff6fd9a76fc6f77124ba96bcb3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://237231d6746fbf8d95ec0fc07ee1ddc0978ae77ef12fe00f445e9f22232d1108\",\"dweb:/ipfs/QmbSKScTxX8nxNnjogci32r3fRexDfFG4sH4myE85AewQp\"]},\"src/base/Cellar.sol\":{\"keccak256\":\"0x851d6f03d13fcd1e4e55d40ab04908677ef1ec92dbcaf3c02ee492602c368d67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0eff90da37039eb4fb743024373d46ce6ccc198b5cb5c61c628f7a160d94fd0b\",\"dweb:/ipfs/QmUoLuGxVU5UqKNUB75BxMvYnpTxxcq8ZiUskrTTx8WbJA\"]},\"src/base/ERC20.sol\":{\"keccak256\":\"0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4\",\"dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf\"]},\"src/base/ERC4626.sol\":{\"keccak256\":\"0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469\",\"dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE\"]},\"src/base/Multicall.sol\":{\"keccak256\":\"0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c\",\"dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K\"]},\"src/base/SafeTransferLib.sol\":{\"keccak256\":\"0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a\",\"dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3\"]},\"src/interfaces/IMulticall.sol\":{\"keccak256\":\"0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0\",\"dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5\"]},\"src/interfaces/external/DataTypes.sol\":{\"keccak256\":\"0xb9862fe603ae5bd1468248ee9a24670a58be807b561bc5302e9fdab38414b92d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5a8d012c8875407b61a657e38b08fc56d80c347802d3676a9dfb1e8fa28e69e2\",\"dweb:/ipfs/QmVRSCrCYw9h5FVscBqKy9WAy1UesDmLtXdUbykLus4Kmq\"]},\"src/interfaces/external/IAaveToken.sol\":{\"keccak256\":\"0x77cd64637e4c0fd379b2d4d826bcd9f64fc706a291ce77d023f693d1eb8e45d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e87630603401ff3374cb610b765e46a3a235ef294fab212cf3116a35db7c4d58\",\"dweb:/ipfs/Qma8awSuYptmpBsWUMz9NZBogVRtVQwXF5cvfsVWpNKhc3\"]},\"src/interfaces/external/IChainlinkAggregator.sol\":{\"keccak256\":\"0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2\",\"dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs\"]},\"src/interfaces/external/ICurvePool.sol\":{\"keccak256\":\"0x9ae71865252aeca89fd6c74013eded1d8029eccc46e3604291be16e97b89a5da\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f504248ab846844bcd771226f7b2984455ddcc746357924fce50a41b65eec9e2\",\"dweb:/ipfs/QmQVe1VZUgxUab9ocsbrX42Ust3hs83BU3bpA1j6Cx1xo6\"]},\"src/interfaces/external/IGravity.sol\":{\"keccak256\":\"0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51\",\"dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c\"]},\"src/interfaces/external/IPool.sol\":{\"keccak256\":\"0xa9b859a87dc19dba76b522ef79d4b00e8fd143ab7bae579cfb13044accd6c88b\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://a08d7e505ac23dcbb3d95044d3f6c3272fdd4a45e8ea01922f54d6281d4ee92c\",\"dweb:/ipfs/QmdN7gzzHvXxgnYdPtnZk8wkRBSGJMGGaWN7BZDy35NG4Q\"]},\"src/interfaces/external/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x99b710acbe9eca030c28301f731bd42912b1c5b20ba01281bd740b9f52e4d13d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e7f2305e9570b50eada9211baa61906381f6edd8a4a92954d5739e6048ea0a7a\",\"dweb:/ipfs/QmPmgrLRS7VuuLuEsX4wWgf9cipvDgL6DV3bK3PPU4zU2H\"]},\"src/interfaces/external/IUniswapV2Router02.sol\":{\"keccak256\":\"0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a\",\"dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo\"]},\"src/interfaces/external/IUniswapV3Router.sol\":{\"keccak256\":\"0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd\",\"dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK\"]},\"src/modules/adaptors/Aave/AaveATokenAdaptor.sol\":{\"keccak256\":\"0xa95d99f9bd184bf0fa61f6eb332ef489764d4bc03229d8025c1702155db7e0c0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c898e657fbd527543e42890ca080eef5f8aab482f7d0d06deef2b506a6a25525\",\"dweb:/ipfs/QmfEgZXpH9cdbTTcDBVXYdyKACHKioPnd668vcwC8hRLpY\"]},\"src/modules/adaptors/BaseAdaptor.sol\":{\"keccak256\":\"0xb45700da63110e41cbb1879c3d261763644bc851effa798721cf7eca3e039f9a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7810084abb53310d5d50f5ca55557e9dcdc8fef6c987e55d82a7748aad467e27\",\"dweb:/ipfs/QmaieqMfgwWJvFy8q3jVrx8Fifo6M9UZM8cBjpmyNFPc5j\"]},\"src/modules/price-router/PriceRouter.sol\":{\"keccak256\":\"0x3d0fb1c107cfbd5b72660b548a9749dfd0d07d9a0b5abdf554d593ee00569550\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f90a60a3097007a1dcd2871db79b0df74cf2a18de5126fc2bd2896f2715e93af\",\"dweb:/ipfs/QmTDqnNN9Rv29MYHCAzZsKzsDbTBMYYQi17VEwhmbE6KYC\"]},\"src/modules/swap-router/SwapRouter.sol\":{\"keccak256\":\"0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818\",\"dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr\"]},\"src/utils/Math.sol\":{\"keccak256\":\"0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312\",\"dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r\"]},\"src/utils/Uint32Array.sol\":{\"keccak256\":\"0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944\",\"dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AaveATokenAdaptor__HealthFactorTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__ExternalReceiverBlocked"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BaseAdaptor__PricingNotSupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__Slippage"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserDepositsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BaseAdaptor__UserWithdrawsNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetOf",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetsUsed",
          "outputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "assets",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "tokenToDeposit",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToDeposit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositToAave"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "identifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isDebt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeApproval"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "slippage",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "configData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "tokenToWithdraw",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountToWithdraw",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromAave"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "adaptorData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "configData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableFrom",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "assetsUsed(bytes)": {
            "details": "WETH is used when determining the withdrawableBalance."
          },
          "deposit(uint256,bytes,bytes)": {
            "details": "configurationData is NOT used because this action will only increase the health factor",
            "params": {
              "adaptorData": "adaptor data containining the abi encoded aToken",
              "assets": "the amount of assets to lend on Aave"
            }
          },
          "depositToAave(address,uint256)": {
            "details": "Uses `_maxAvailable` helper function, see BaseAdaptor.sol",
            "params": {
              "amountToDeposit": "the amount of `tokenToDeposit` to lend on Aave.",
              "tokenToDeposit": "the token to lend on Aave"
            }
          },
          "identifier()": {
            "details": "Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult."
          },
          "revokeApproval(address,address)": {
            "params": {
              "asset": "the ERC20 asset to revoke `spender`s approval for",
              "spender": "the address to revoke approval for"
            }
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "details": "Important to verify that external receivers are allowed if receiver is not Cellar address.",
            "params": {
              "adaptorData": "adaptor data containining the abi encoded aToken",
              "assets": "the amount of assets to withdraw from Aave",
              "configData": "abi encoded minimum health factor, if zero user withdraws are not allowed.",
              "receiver": "the address to send withdrawn assets to"
            }
          },
          "withdrawFromAave(address,uint256)": {
            "params": {
              "amountToWithdraw": "the amount of `tokenToWithdraw` to withdraw from Aave",
              "tokenToWithdraw": "the token to withdraw from Aave."
            }
          },
          "withdrawableFrom(bytes,bytes)": {
            "details": "Applies a `cushion` value to the health factor checks and calculation.      The goal of this is to minimize scenarios where users are withdrawing a very small amount of      assets from Aave. This function returns zero if      -minimum health factor is NOT set.      -the current health factor is less than the minimum health factor + 2x `cushion`      Otherwise this function calculates the withdrawable amount using      minimum health factor + `cushion` for its calcualtions.It is possible for the math below to lose a small amount of precision since it is only      maintaining 18 decimals during the calculation, but this is desired since      doing so lowers the withdrawable from amount which in turn raises the health factor."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "assetOf(bytes)": {
            "notice": "Returns the positions aToken underlying asset."
          },
          "assetsUsed(bytes)": {
            "notice": "When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup."
          },
          "balanceOf(bytes)": {
            "notice": "Returns the cellars balance of the positions aToken."
          },
          "deposit(uint256,bytes,bytes)": {
            "notice": "Cellar must approve Pool to spend its assets, then call deposit to lend its assets."
          },
          "depositToAave(address,uint256)": {
            "notice": "Allows strategists to lend assets on Aave."
          },
          "isDebt()": {
            "notice": "This adaptor returns collateral, and not debt."
          },
          "revokeApproval(address,address)": {
            "notice": "Allows strategists to zero out an approval for a given `asset`."
          },
          "slippage()": {
            "notice": "Max possible slippage when making a swap router swap."
          },
          "withdraw(uint256,address,bytes,bytes)": {
            "notice": "Cellars must withdraw from Aave, check if a minimum health factor is specified       then transfer assets to receiver."
          },
          "withdrawFromAave(address,uint256)": {
            "notice": "Allows strategists to withdraw assets from Aave."
          },
          "withdrawableFrom(bytes,bytes)": {
            "notice": "Uses configurartion data minimum health factor to calculate withdrawable assets from Aave."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=lib/chainlink/",
        ":@ds-test/=lib/forge-std/lib/ds-test/src/",
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":@uniswapV3C/=lib/v3-core.git/contracts/",
        ":@uniswapV3P/=lib/v3-periphery.git/contracts/",
        ":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-core.git/=lib/v3-core.git/contracts/",
        ":v3-periphery.git/=lib/v3-periphery.git/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/adaptors/Aave/AaveATokenAdaptor.sol": "AaveATokenAdaptor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "keccak256": "0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7",
        "urls": [
          "bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465",
          "dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2",
        "urls": [
          "bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b",
          "dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol": {
        "keccak256": "0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340",
        "urls": [
          "bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e",
          "dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028",
        "urls": [
          "bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf",
          "dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb",
        "urls": [
          "bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929",
          "dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Registry.sol": {
        "keccak256": "0x72690631323f459be3da7dd7c4644a7678a509ff6fd9a76fc6f77124ba96bcb3",
        "urls": [
          "bzz-raw://237231d6746fbf8d95ec0fc07ee1ddc0978ae77ef12fe00f445e9f22232d1108",
          "dweb:/ipfs/QmbSKScTxX8nxNnjogci32r3fRexDfFG4sH4myE85AewQp"
        ],
        "license": "Apache-2.0"
      },
      "src/base/Cellar.sol": {
        "keccak256": "0x851d6f03d13fcd1e4e55d40ab04908677ef1ec92dbcaf3c02ee492602c368d67",
        "urls": [
          "bzz-raw://0eff90da37039eb4fb743024373d46ce6ccc198b5cb5c61c628f7a160d94fd0b",
          "dweb:/ipfs/QmUoLuGxVU5UqKNUB75BxMvYnpTxxcq8ZiUskrTTx8WbJA"
        ],
        "license": "Apache-2.0"
      },
      "src/base/ERC20.sol": {
        "keccak256": "0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02",
        "urls": [
          "bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4",
          "dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ERC4626.sol": {
        "keccak256": "0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7",
        "urls": [
          "bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469",
          "dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/Multicall.sol": {
        "keccak256": "0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9",
        "urls": [
          "bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c",
          "dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/SafeTransferLib.sol": {
        "keccak256": "0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324",
        "urls": [
          "bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a",
          "dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IMulticall.sol": {
        "keccak256": "0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e",
        "urls": [
          "bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0",
          "dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/DataTypes.sol": {
        "keccak256": "0xb9862fe603ae5bd1468248ee9a24670a58be807b561bc5302e9fdab38414b92d",
        "urls": [
          "bzz-raw://5a8d012c8875407b61a657e38b08fc56d80c347802d3676a9dfb1e8fa28e69e2",
          "dweb:/ipfs/QmVRSCrCYw9h5FVscBqKy9WAy1UesDmLtXdUbykLus4Kmq"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/external/IAaveToken.sol": {
        "keccak256": "0x77cd64637e4c0fd379b2d4d826bcd9f64fc706a291ce77d023f693d1eb8e45d8",
        "urls": [
          "bzz-raw://e87630603401ff3374cb610b765e46a3a235ef294fab212cf3116a35db7c4d58",
          "dweb:/ipfs/Qma8awSuYptmpBsWUMz9NZBogVRtVQwXF5cvfsVWpNKhc3"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/IChainlinkAggregator.sol": {
        "keccak256": "0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d",
        "urls": [
          "bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2",
          "dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/ICurvePool.sol": {
        "keccak256": "0x9ae71865252aeca89fd6c74013eded1d8029eccc46e3604291be16e97b89a5da",
        "urls": [
          "bzz-raw://f504248ab846844bcd771226f7b2984455ddcc746357924fce50a41b65eec9e2",
          "dweb:/ipfs/QmQVe1VZUgxUab9ocsbrX42Ust3hs83BU3bpA1j6Cx1xo6"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IGravity.sol": {
        "keccak256": "0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11",
        "urls": [
          "bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51",
          "dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IPool.sol": {
        "keccak256": "0xa9b859a87dc19dba76b522ef79d4b00e8fd143ab7bae579cfb13044accd6c88b",
        "urls": [
          "bzz-raw://a08d7e505ac23dcbb3d95044d3f6c3272fdd4a45e8ea01922f54d6281d4ee92c",
          "dweb:/ipfs/QmdN7gzzHvXxgnYdPtnZk8wkRBSGJMGGaWN7BZDy35NG4Q"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/external/IPoolAddressesProvider.sol": {
        "keccak256": "0x99b710acbe9eca030c28301f731bd42912b1c5b20ba01281bd740b9f52e4d13d",
        "urls": [
          "bzz-raw://e7f2305e9570b50eada9211baa61906381f6edd8a4a92954d5739e6048ea0a7a",
          "dweb:/ipfs/QmPmgrLRS7VuuLuEsX4wWgf9cipvDgL6DV3bK3PPU4zU2H"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/external/IUniswapV2Router02.sol": {
        "keccak256": "0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f",
        "urls": [
          "bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a",
          "dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/external/IUniswapV3Router.sol": {
        "keccak256": "0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355",
        "urls": [
          "bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd",
          "dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/modules/adaptors/Aave/AaveATokenAdaptor.sol": {
        "keccak256": "0xa95d99f9bd184bf0fa61f6eb332ef489764d4bc03229d8025c1702155db7e0c0",
        "urls": [
          "bzz-raw://c898e657fbd527543e42890ca080eef5f8aab482f7d0d06deef2b506a6a25525",
          "dweb:/ipfs/QmfEgZXpH9cdbTTcDBVXYdyKACHKioPnd668vcwC8hRLpY"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/adaptors/BaseAdaptor.sol": {
        "keccak256": "0xb45700da63110e41cbb1879c3d261763644bc851effa798721cf7eca3e039f9a",
        "urls": [
          "bzz-raw://7810084abb53310d5d50f5ca55557e9dcdc8fef6c987e55d82a7748aad467e27",
          "dweb:/ipfs/QmaieqMfgwWJvFy8q3jVrx8Fifo6M9UZM8cBjpmyNFPc5j"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/price-router/PriceRouter.sol": {
        "keccak256": "0x3d0fb1c107cfbd5b72660b548a9749dfd0d07d9a0b5abdf554d593ee00569550",
        "urls": [
          "bzz-raw://f90a60a3097007a1dcd2871db79b0df74cf2a18de5126fc2bd2896f2715e93af",
          "dweb:/ipfs/QmTDqnNN9Rv29MYHCAzZsKzsDbTBMYYQi17VEwhmbE6KYC"
        ],
        "license": "Apache-2.0"
      },
      "src/modules/swap-router/SwapRouter.sol": {
        "keccak256": "0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80",
        "urls": [
          "bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818",
          "dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Math.sol": {
        "keccak256": "0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f",
        "urls": [
          "bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312",
          "dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r"
        ],
        "license": "Apache-2.0"
      },
      "src/utils/Uint32Array.sol": {
        "keccak256": "0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9",
        "urls": [
          "bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944",
          "dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/adaptors/Aave/AaveATokenAdaptor.sol",
    "id": 42188,
    "exportedSymbols": {
      "AaveATokenAdaptor": [
        42187
      ],
      "BaseAdaptor": [
        43962
      ],
      "Cellar": [
        33437
      ],
      "ERC20": [
        34556
      ],
      "IAaveToken": [
        35801
      ],
      "IPool": [
        37792
      ],
      "Math": [
        54508
      ],
      "PriceRouter": [
        52732
      ],
      "SafeTransferLib": [
        35307
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:12083:74",
    "nodes": [
      {
        "id": 41562,
        "nodeType": "PragmaDirective",
        "src": "39:23:74",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 41569,
        "nodeType": "ImportDirective",
        "src": "64:118:74",
        "nodes": [],
        "absolutePath": "src/modules/adaptors/BaseAdaptor.sol",
        "file": "src/modules/adaptors/BaseAdaptor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42188,
        "sourceUnit": 43963,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41563,
              "name": "BaseAdaptor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43962,
              "src": "73:11:74",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41564,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34556,
              "src": "86:5:74",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41565,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35307,
              "src": "93:15:74",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41566,
              "name": "Cellar",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33437,
              "src": "110:6:74",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41567,
              "name": "PriceRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52732,
              "src": "118:11:74",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41568,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54508,
              "src": "131:4:74",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41571,
        "nodeType": "ImportDirective",
        "src": "183:58:74",
        "nodes": [],
        "absolutePath": "src/interfaces/external/IPool.sol",
        "file": "src/interfaces/external/IPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42188,
        "sourceUnit": 37793,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41570,
              "name": "IPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37792,
              "src": "192:5:74",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41573,
        "nodeType": "ImportDirective",
        "src": "242:68:74",
        "nodes": [],
        "absolutePath": "src/interfaces/external/IAaveToken.sol",
        "file": "src/interfaces/external/IAaveToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42188,
        "sourceUnit": 35802,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41572,
              "name": "IAaveToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35801,
              "src": "251:10:74",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42187,
        "nodeType": "ContractDefinition",
        "src": "441:11680:74",
        "nodes": [
          {
            "id": 41580,
            "nodeType": "UsingForDirective",
            "src": "489:32:74",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 41577,
              "name": "SafeTransferLib",
              "nameLocations": [
                "495:15:74"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35307,
              "src": "495:15:74"
            },
            "typeName": {
              "id": 41579,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41578,
                "name": "ERC20",
                "nameLocations": [
                  "515:5:74"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34556,
                "src": "515:5:74"
              },
              "referencedDeclaration": 34556,
              "src": "515:5:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$34556",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 41583,
            "nodeType": "UsingForDirective",
            "src": "526:23:74",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 41581,
              "name": "Math",
              "nameLocations": [
                "532:4:74"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54508,
              "src": "532:4:74"
            },
            "typeName": {
              "id": 41582,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "541:7:74",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 41586,
            "nodeType": "ErrorDefinition",
            "src": "1705:46:74",
            "nodes": [],
            "documentation": {
              "id": 41584,
              "nodeType": "StructuredDocumentation",
              "src": "1615:85:74",
              "text": "@notice Attempted withdraw would lower Cellar health factor too low."
            },
            "errorSelector": "c812edec",
            "name": "AaveATokenAdaptor__HealthFactorTooLow",
            "nameLocation": "1711:37:74",
            "parameters": {
              "id": 41585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1748:2:74"
            }
          },
          {
            "id": 41601,
            "nodeType": "FunctionDefinition",
            "src": "2170:135:74",
            "nodes": [],
            "body": {
              "id": 41600,
              "nodeType": "Block",
              "src": "2231:74:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "416176652061546f6b656e2041646170746f72205620312e30",
                            "id": 41596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2269:27:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7b942eeee7b60b7eac192e5e99dff62d07a674a69dbffeb3638b7ff6535c8c10",
                              "typeString": "literal_string \"Aave aToken Adaptor V 1.0\""
                            },
                            "value": "Aave aToken Adaptor V 1.0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7b942eeee7b60b7eac192e5e99dff62d07a674a69dbffeb3638b7ff6535c8c10",
                              "typeString": "literal_string \"Aave aToken Adaptor V 1.0\""
                            }
                          ],
                          "expression": {
                            "id": 41594,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2258:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 41595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2262:6:74",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2258:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 41597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2258:39:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 41593,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2248:9:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 41598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2248:50:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 41592,
                  "id": 41599,
                  "nodeType": "Return",
                  "src": "2241:57:74"
                }
              ]
            },
            "baseFunctions": [
              43752
            ],
            "documentation": {
              "id": 41587,
              "nodeType": "StructuredDocumentation",
              "src": "1869:296:74",
              "text": " @dev Identifier unique to this adaptor for a shared registry.\n Normally the identifier would just be the address of this contract, but this\n Identifier is needed during Cellar Delegate Call Operations, so getting the address\n of the adaptor is more difficult."
            },
            "functionSelector": "7998a1c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "identifier",
            "nameLocation": "2179:10:74",
            "overrides": {
              "id": 41589,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2204:8:74"
            },
            "parameters": {
              "id": 41588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2189:2:74"
            },
            "returnParameters": {
              "id": 41592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41591,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41601,
                  "src": "2222:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 41590,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2222:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2221:9:74"
            },
            "scope": 42187,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41613,
            "nodeType": "FunctionDefinition",
            "src": "2389:119:74",
            "nodes": [],
            "body": {
              "id": 41612,
              "nodeType": "Block",
              "src": "2435:73:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307837643237363864453332623062383062376133343534633036426441633934413639444463374139",
                        "id": 41609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2458:42:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41608,
                      "name": "IPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37792,
                      "src": "2452:5:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IPool_$37792_$",
                        "typeString": "type(contract IPool)"
                      }
                    },
                    "id": 41610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2452:49:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPool_$37792",
                      "typeString": "contract IPool"
                    }
                  },
                  "functionReturnParameters": 41607,
                  "id": 41611,
                  "nodeType": "Return",
                  "src": "2445:56:74"
                }
              ]
            },
            "documentation": {
              "id": 41602,
              "nodeType": "StructuredDocumentation",
              "src": "2311:73:74",
              "text": " @notice The Aave V2 Pool contract on Ethereum Mainnet."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pool",
            "nameLocation": "2398:4:74",
            "parameters": {
              "id": 41603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2402:2:74"
            },
            "returnParameters": {
              "id": 41607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41606,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41613,
                  "src": "2428:5:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPool_$37792",
                    "typeString": "contract IPool"
                  },
                  "typeName": {
                    "id": 41605,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41604,
                      "name": "IPool",
                      "nameLocations": [
                        "2428:5:74"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37792,
                      "src": "2428:5:74"
                    },
                    "referencedDeclaration": 37792,
                    "src": "2428:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPool_$37792",
                      "typeString": "contract IPool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2427:7:74"
            },
            "scope": 42187,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41625,
            "nodeType": "FunctionDefinition",
            "src": "2584:119:74",
            "nodes": [],
            "body": {
              "id": 41624,
              "nodeType": "Block",
              "src": "2630:73:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                        "id": 41621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2653:42:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41620,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34556,
                      "src": "2647:5:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 41622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2647:49:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "functionReturnParameters": 41619,
                  "id": 41623,
                  "nodeType": "Return",
                  "src": "2640:56:74"
                }
              ]
            },
            "documentation": {
              "id": 41614,
              "nodeType": "StructuredDocumentation",
              "src": "2514:65:74",
              "text": " @notice The WETH contract on Ethereum Mainnet."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "WETH",
            "nameLocation": "2593:4:74",
            "parameters": {
              "id": 41615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2597:2:74"
            },
            "returnParameters": {
              "id": 41619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41618,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41625,
                  "src": "2623:5:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$34556",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 41617,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41616,
                      "name": "ERC20",
                      "nameLocations": [
                        "2623:5:74"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34556,
                      "src": "2623:5:74"
                    },
                    "referencedDeclaration": 34556,
                    "src": "2623:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2622:7:74"
            },
            "scope": 42187,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41634,
            "nodeType": "FunctionDefinition",
            "src": "2869:79:74",
            "nodes": [],
            "body": {
              "id": 41633,
              "nodeType": "Block",
              "src": "2918:30:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "312e32653138",
                    "id": 41631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2935:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1200000000000000000_by_1",
                      "typeString": "int_const 1200000000000000000"
                    },
                    "value": "1.2e18"
                  },
                  "functionReturnParameters": 41630,
                  "id": 41632,
                  "nodeType": "Return",
                  "src": "2928:13:74"
                }
              ]
            },
            "documentation": {
              "id": 41626,
              "nodeType": "StructuredDocumentation",
              "src": "2709:155:74",
              "text": " @notice Minimum Health Factor enforced after every aToken withdraw.\n @notice Overwrites strategist set minimums if they are lower."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "HFMIN",
            "nameLocation": "2878:5:74",
            "parameters": {
              "id": 41627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2883:2:74"
            },
            "returnParameters": {
              "id": 41630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41634,
                  "src": "2909:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2909:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2908:9:74"
            },
            "scope": 42187,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41703,
            "nodeType": "FunctionDefinition",
            "src": "3421:491:74",
            "nodes": [],
            "body": {
              "id": 41702,
              "nodeType": "Block",
              "src": "3510:402:74",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41647,
                      "mutability": "mutable",
                      "name": "aToken",
                      "nameLocation": "3566:6:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41702,
                      "src": "3555:17:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveToken_$35801",
                        "typeString": "contract IAaveToken"
                      },
                      "typeName": {
                        "id": 41646,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41645,
                          "name": "IAaveToken",
                          "nameLocations": [
                            "3555:10:74"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35801,
                          "src": "3555:10:74"
                        },
                        "referencedDeclaration": 35801,
                        "src": "3555:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveToken_$35801",
                          "typeString": "contract IAaveToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41657,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41651,
                            "name": "adaptorData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41639,
                            "src": "3597:11:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 41653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3611:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 41652,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3611:7:74",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 41654,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3610:9:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          ],
                          "expression": {
                            "id": 41649,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3586:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 41650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3590:6:74",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "3586:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 41655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3586:34:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 41648,
                      "name": "IAaveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35801,
                      "src": "3575:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IAaveToken_$35801_$",
                        "typeString": "type(contract IAaveToken)"
                      }
                    },
                    "id": 41656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3575:46:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveToken_$35801",
                      "typeString": "contract IAaveToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3555:66:74"
                },
                {
                  "assignments": [
                    41660
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41660,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "3637:5:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41702,
                      "src": "3631:11:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 41659,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41658,
                          "name": "ERC20",
                          "nameLocations": [
                            "3631:5:74"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34556,
                          "src": "3631:5:74"
                        },
                        "referencedDeclaration": 34556,
                        "src": "3631:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41666,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 41662,
                            "name": "aToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41647,
                            "src": "3651:6:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveToken_$35801",
                              "typeString": "contract IAaveToken"
                            }
                          },
                          "id": 41663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3658:24:74",
                          "memberName": "UNDERLYING_ASSET_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35800,
                          "src": "3651:31:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 41664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3651:33:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41661,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34556,
                      "src": "3645:5:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 41665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3645:40:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3631:54:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 41672,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41613,
                              "src": "3721:4:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPool_$37792_$",
                                "typeString": "function () pure returns (contract IPool)"
                              }
                            },
                            "id": 41673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3721:6:74",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPool_$37792",
                              "typeString": "contract IPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPool_$37792",
                              "typeString": "contract IPool"
                            }
                          ],
                          "id": 41671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3713:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41670,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3713:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3713:15:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41675,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41637,
                        "src": "3730:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 41667,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41660,
                        "src": "3695:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 41669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3701:11:74",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35306,
                      "src": "3695:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$34556_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 41676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3695:42:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41677,
                  "nodeType": "ExpressionStatement",
                  "src": "3695:42:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41683,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41660,
                            "src": "3770:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 41682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3762:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41681,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3762:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3762:14:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41685,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41637,
                        "src": "3778:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41688,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3794:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveATokenAdaptor_$42187",
                              "typeString": "contract AaveATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveATokenAdaptor_$42187",
                              "typeString": "contract AaveATokenAdaptor"
                            }
                          ],
                          "id": 41687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3786:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41686,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3786:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3786:13:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 41690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3801:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 41678,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41613,
                          "src": "3747:4:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPool_$37792_$",
                            "typeString": "function () pure returns (contract IPool)"
                          }
                        },
                        "id": 41679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3747:6:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$37792",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 41680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3754:7:74",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37791,
                      "src": "3747:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,address,uint16) external"
                      }
                    },
                    "id": 41691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3747:56:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41692,
                  "nodeType": "ExpressionStatement",
                  "src": "3747:56:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41694,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41660,
                        "src": "3882:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 41697,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41613,
                              "src": "3897:4:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPool_$37792_$",
                                "typeString": "function () pure returns (contract IPool)"
                              }
                            },
                            "id": 41698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3897:6:74",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPool_$37792",
                              "typeString": "contract IPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPool_$37792",
                              "typeString": "contract IPool"
                            }
                          ],
                          "id": 41696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3889:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41695,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3889:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3889:15:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41693,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43918,
                      "src": "3858:23:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 41700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3858:47:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41701,
                  "nodeType": "ExpressionStatement",
                  "src": "3858:47:74"
                }
              ]
            },
            "baseFunctions": [
              43787
            ],
            "documentation": {
              "id": 41635,
              "nodeType": "StructuredDocumentation",
              "src": "3074:342:74",
              "text": " @notice Cellar must approve Pool to spend its assets, then call deposit to lend its assets.\n @param assets the amount of assets to lend on Aave\n @param adaptorData adaptor data containining the abi encoded aToken\n @dev configurationData is NOT used because this action will only increase the health factor"
            },
            "functionSelector": "69445c31",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "3430:7:74",
            "overrides": {
              "id": 41643,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3501:8:74"
            },
            "parameters": {
              "id": 41642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41637,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "3446:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 41703,
                  "src": "3438:14:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3438:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41639,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "3467:11:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 41703,
                  "src": "3454:24:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 41638,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3454:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41641,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41703,
                  "src": "3480:12:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 41640,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3480:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3437:56:74"
            },
            "returnParameters": {
              "id": 41644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3510:0:74"
            },
            "scope": 42187,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41810,
            "nodeType": "FunctionDefinition",
            "src": "4478:1212:74",
            "nodes": [],
            "body": {
              "id": 41809,
              "nodeType": "Block",
              "src": "4635:1055:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41717,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41708,
                        "src": "4708:8:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41716,
                      "name": "_externalReceiverCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43944,
                      "src": "4685:22:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 41718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4685:32:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41719,
                  "nodeType": "ExpressionStatement",
                  "src": "4685:32:74"
                },
                {
                  "assignments": [
                    41722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41722,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "4777:5:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41809,
                      "src": "4766:16:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveToken_$35801",
                        "typeString": "contract IAaveToken"
                      },
                      "typeName": {
                        "id": 41721,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41720,
                          "name": "IAaveToken",
                          "nameLocations": [
                            "4766:10:74"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35801,
                          "src": "4766:10:74"
                        },
                        "referencedDeclaration": 35801,
                        "src": "4766:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveToken_$35801",
                          "typeString": "contract IAaveToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41732,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41726,
                            "name": "adaptorData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41710,
                            "src": "4807:11:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 41728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4821:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 41727,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4821:7:74",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 41729,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4820:9:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          ],
                          "expression": {
                            "id": 41724,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4796:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 41725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4800:6:74",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "4796:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 41730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4796:34:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 41723,
                      "name": "IAaveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35801,
                      "src": "4785:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IAaveToken_$35801_$",
                        "typeString": "type(contract IAaveToken)"
                      }
                    },
                    "id": 41731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4785:46:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveToken_$35801",
                      "typeString": "contract IAaveToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4766:65:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 41736,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41722,
                            "src": "4857:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveToken_$35801",
                              "typeString": "contract IAaveToken"
                            }
                          },
                          "id": 41737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4863:24:74",
                          "memberName": "UNDERLYING_ASSET_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35800,
                          "src": "4857:30:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 41738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4857:32:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41739,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41706,
                        "src": "4891:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41742,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4907:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveATokenAdaptor_$42187",
                              "typeString": "contract AaveATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveATokenAdaptor_$42187",
                              "typeString": "contract AaveATokenAdaptor"
                            }
                          ],
                          "id": 41741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4899:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41740,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4899:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4899:13:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 41733,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41613,
                          "src": "4841:4:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPool_$37792_$",
                            "typeString": "function () pure returns (contract IPool)"
                          }
                        },
                        "id": 41734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4841:6:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$37792",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 41735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4848:8:74",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37392,
                      "src": "4841:15:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 41744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4841:72:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41745,
                  "nodeType": "ExpressionStatement",
                  "src": "4841:72:74"
                },
                {
                  "assignments": [
                    null,
                    41747,
                    null,
                    null,
                    null,
                    41749
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 41747,
                      "mutability": "mutable",
                      "name": "totalDebtETH",
                      "nameLocation": "4935:12:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41809,
                      "src": "4927:20:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41746,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4927:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 41749,
                      "mutability": "mutable",
                      "name": "healthFactor",
                      "nameLocation": "4963:12:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41809,
                      "src": "4955:20:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41748,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4955:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41758,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41755,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5013:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveATokenAdaptor_$42187",
                              "typeString": "contract AaveATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveATokenAdaptor_$42187",
                              "typeString": "contract AaveATokenAdaptor"
                            }
                          ],
                          "id": 41754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5005:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41753,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5005:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5005:13:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 41750,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41613,
                          "src": "4979:4:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPool_$37792_$",
                            "typeString": "function () pure returns (contract IPool)"
                          }
                        },
                        "id": 41751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4979:6:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$37792",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 41752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4986:18:74",
                      "memberName": "getUserAccountData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37545,
                      "src": "4979:25:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 41757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4979:40:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4924:95:74"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41759,
                      "name": "totalDebtETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41747,
                      "src": "5033:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 41760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5048:1:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5033:16:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41798,
                  "nodeType": "IfStatement",
                  "src": "5029:534:74",
                  "trueBody": {
                    "id": 41797,
                    "nodeType": "Block",
                    "src": "5051:512:74",
                    "statements": [
                      {
                        "assignments": [
                          41763
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 41763,
                            "mutability": "mutable",
                            "name": "minHealthFactor",
                            "nameLocation": "5122:15:74",
                            "nodeType": "VariableDeclaration",
                            "scope": 41797,
                            "src": "5114:23:74",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 41762,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5114:7:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 41771,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 41766,
                              "name": "configData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41712,
                              "src": "5151:10:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 41768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5164:7:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 41767,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5164:7:74",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 41769,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5163:9:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "expression": {
                              "id": 41764,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5140:3:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 41765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5144:6:74",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5140:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 41770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5140:33:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5114:59:74"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41772,
                            "name": "minHealthFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41763,
                            "src": "5191:15:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 41773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5210:1:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5191:20:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41779,
                        "nodeType": "IfStatement",
                        "src": "5187:104:74",
                        "trueBody": {
                          "id": 41778,
                          "nodeType": "Block",
                          "src": "5213:78:74",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 41775,
                                  "name": "BaseAdaptor__UserWithdrawsNotAllowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43730,
                                  "src": "5238:36:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 41776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5238:38:74",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 41777,
                              "nodeType": "RevertStatement",
                              "src": "5231:45:74"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41780,
                            "name": "minHealthFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41763,
                            "src": "5404:15:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 41781,
                              "name": "HFMIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41634,
                              "src": "5422:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                "typeString": "function () pure returns (uint256)"
                              }
                            },
                            "id": 41782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5422:7:74",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5404:25:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41789,
                        "nodeType": "IfStatement",
                        "src": "5400:56:74",
                        "trueBody": {
                          "expression": {
                            "id": 41787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 41784,
                              "name": "minHealthFactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41763,
                              "src": "5431:15:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 41785,
                                "name": "HFMIN",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41634,
                                "src": "5449:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                  "typeString": "function () pure returns (uint256)"
                                }
                              },
                              "id": 41786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5449:7:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5431:25:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 41788,
                          "nodeType": "ExpressionStatement",
                          "src": "5431:25:74"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41790,
                            "name": "healthFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41749,
                            "src": "5474:12:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 41791,
                            "name": "minHealthFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41763,
                            "src": "5489:15:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5474:30:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41796,
                        "nodeType": "IfStatement",
                        "src": "5470:82:74",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 41793,
                              "name": "AaveATokenAdaptor__HealthFactorTooLow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41586,
                              "src": "5513:37:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 41794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5513:39:74",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 41795,
                          "nodeType": "RevertStatement",
                          "src": "5506:46:74"
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41805,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41708,
                        "src": "5666:8:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41806,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41706,
                        "src": "5676:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 41800,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41722,
                                "src": "5619:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAaveToken_$35801",
                                  "typeString": "contract IAaveToken"
                                }
                              },
                              "id": 41801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5625:24:74",
                              "memberName": "UNDERLYING_ASSET_ADDRESS",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35800,
                              "src": "5619:30:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 41802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5619:32:74",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 41799,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34556,
                          "src": "5613:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 41803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5613:39:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 41804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5653:12:74",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35286,
                      "src": "5613:52:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$34556_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 41807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5613:70:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41808,
                  "nodeType": "ExpressionStatement",
                  "src": "5613:70:74"
                }
              ]
            },
            "baseFunctions": [
              43799
            ],
            "documentation": {
              "id": 41704,
              "nodeType": "StructuredDocumentation",
              "src": "3918:555:74",
              "text": "@notice Cellars must withdraw from Aave, check if a minimum health factor is specified\n       then transfer assets to receiver.\n @dev Important to verify that external receivers are allowed if receiver is not Cellar address.\n @param assets the amount of assets to withdraw from Aave\n @param receiver the address to send withdrawn assets to\n @param adaptorData adaptor data containining the abi encoded aToken\n @param configData abi encoded minimum health factor, if zero user withdraws are not allowed."
            },
            "functionSelector": "c9111bd7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "4487:8:74",
            "overrides": {
              "id": 41714,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4626:8:74"
            },
            "parameters": {
              "id": 41713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41706,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "4513:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 41810,
                  "src": "4505:14:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4505:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41708,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "4537:8:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 41810,
                  "src": "4529:16:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4529:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41710,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "4568:11:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 41810,
                  "src": "4555:24:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 41709,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4555:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41712,
                  "mutability": "mutable",
                  "name": "configData",
                  "nameLocation": "4602:10:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 41810,
                  "src": "4589:23:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 41711,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4589:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4495:123:74"
            },
            "returnParameters": {
              "id": 41715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4635:0:74"
            },
            "scope": 42187,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41987,
            "nodeType": "FunctionDefinition",
            "src": "6633:2766:74",
            "nodes": [],
            "body": {
              "id": 41986,
              "nodeType": "Block",
              "src": "6771:2628:74",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41823,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "6792:5:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41986,
                      "src": "6781:16:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveToken_$35801",
                        "typeString": "contract IAaveToken"
                      },
                      "typeName": {
                        "id": 41822,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41821,
                          "name": "IAaveToken",
                          "nameLocations": [
                            "6781:10:74"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35801,
                          "src": "6781:10:74"
                        },
                        "referencedDeclaration": 35801,
                        "src": "6781:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveToken_$35801",
                          "typeString": "contract IAaveToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41833,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41827,
                            "name": "adaptorData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41813,
                            "src": "6822:11:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 41829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6836:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 41828,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6836:7:74",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 41830,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6835:9:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          ],
                          "expression": {
                            "id": 41825,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6811:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 41826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6815:6:74",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "6811:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 41831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6811:34:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 41824,
                      "name": "IAaveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35801,
                      "src": "6800:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IAaveToken_$35801_$",
                        "typeString": "type(contract IAaveToken)"
                      }
                    },
                    "id": 41832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6800:46:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveToken_$35801",
                      "typeString": "contract IAaveToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6781:65:74"
                },
                {
                  "assignments": [
                    41835,
                    41837,
                    null,
                    41839,
                    null,
                    41841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41835,
                      "mutability": "mutable",
                      "name": "totalCollateralETH",
                      "nameLocation": "6879:18:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41986,
                      "src": "6871:26:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41834,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6871:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41837,
                      "mutability": "mutable",
                      "name": "totalDebtETH",
                      "nameLocation": "6919:12:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41986,
                      "src": "6911:20:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41836,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6911:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 41839,
                      "mutability": "mutable",
                      "name": "currentLiquidationThreshold",
                      "nameLocation": "6967:27:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41986,
                      "src": "6959:35:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41838,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6959:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 41841,
                      "mutability": "mutable",
                      "name": "healthFactor",
                      "nameLocation": "7030:12:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41986,
                      "src": "7022:20:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41840,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7022:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41848,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41845,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7081:3:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 41846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7085:6:74",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7081:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 41842,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41613,
                          "src": "7055:4:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPool_$37792_$",
                            "typeString": "function () pure returns (contract IPool)"
                          }
                        },
                        "id": 41843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7055:6:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$37792",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 41844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7062:18:74",
                      "memberName": "getUserAccountData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37545,
                      "src": "7055:25:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 41847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7055:37:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6857:235:74"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41849,
                      "name": "totalDebtETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41837,
                      "src": "7193:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 41850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7209:1:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7193:17:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41863,
                  "nodeType": "IfStatement",
                  "src": "7189:73:74",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 41859,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7251:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 41860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7255:6:74",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7251:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 41855,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41823,
                                  "src": "7233:5:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAaveToken_$35801",
                                    "typeString": "contract IAaveToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAaveToken_$35801",
                                    "typeString": "contract IAaveToken"
                                  }
                                ],
                                "id": 41854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7225:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 41853,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7225:7:74",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 41856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7225:14:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 41852,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34556,
                            "src": "7219:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 41857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7219:21:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$34556",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 41858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7241:9:74",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34199,
                        "src": "7219:31:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 41861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7219:43:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 41820,
                    "id": 41862,
                    "nodeType": "Return",
                    "src": "7212:50:74"
                  }
                },
                {
                  "assignments": [
                    41865
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41865,
                      "mutability": "mutable",
                      "name": "minHealthFactor",
                      "nameLocation": "7344:15:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41986,
                      "src": "7336:23:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41864,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7336:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41873,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41868,
                        "name": "configData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41815,
                        "src": "7373:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 41870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7386:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 41869,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7386:7:74",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 41871,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7385:9:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 41866,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7362:3:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 41867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7366:6:74",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7362:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 41872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7362:33:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7336:59:74"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41874,
                      "name": "minHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41865,
                      "src": "7544:15:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 41875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7563:1:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7544:20:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41879,
                  "nodeType": "IfStatement",
                  "src": "7540:34:74",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 41877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7573:1:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 41820,
                    "id": 41878,
                    "nodeType": "Return",
                    "src": "7566:8:74"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41880,
                      "name": "minHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41865,
                      "src": "7680:15:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 41881,
                        "name": "HFMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41634,
                        "src": "7698:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                          "typeString": "function () pure returns (uint256)"
                        }
                      },
                      "id": 41882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7698:7:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7680:25:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41889,
                  "nodeType": "IfStatement",
                  "src": "7676:56:74",
                  "trueBody": {
                    "expression": {
                      "id": 41887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 41884,
                        "name": "minHealthFactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41865,
                        "src": "7707:15:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 41885,
                          "name": "HFMIN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41634,
                          "src": "7725:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                            "typeString": "function () pure returns (uint256)"
                          }
                        },
                        "id": 41886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7725:7:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7707:25:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41888,
                    "nodeType": "ExpressionStatement",
                    "src": "7707:25:74"
                  }
                },
                {
                  "assignments": [
                    41891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41891,
                      "mutability": "mutable",
                      "name": "maxBorrowableWithMin",
                      "nameLocation": "7751:20:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41986,
                      "src": "7743:28:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41890,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7743:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41892,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7743:28:74"
                },
                {
                  "assignments": [
                    41894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41894,
                      "mutability": "mutable",
                      "name": "cushion",
                      "nameLocation": "7881:7:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41986,
                      "src": "7873:15:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41893,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7873:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41896,
                  "initialValue": {
                    "hexValue": "302e3031653138",
                    "id": 41895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7891:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "0.01e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7873:25:74"
                },
                {
                  "expression": {
                    "id": 41899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41897,
                      "name": "minHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41865,
                      "src": "7954:15:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 41898,
                      "name": "cushion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41894,
                      "src": "7973:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7954:26:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41900,
                  "nodeType": "ExpressionStatement",
                  "src": "7954:26:74"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41901,
                      "name": "healthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41841,
                      "src": "8088:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41902,
                            "name": "minHealthFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41865,
                            "src": "8104:15:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 41903,
                            "name": "cushion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41894,
                            "src": "8122:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8104:25:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 41905,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8103:27:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8088:42:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41909,
                  "nodeType": "IfStatement",
                  "src": "8084:56:74",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 41907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8139:1:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 41820,
                    "id": 41908,
                    "nodeType": "Return",
                    "src": "8132:8:74"
                  }
                },
                {
                  "expression": {
                    "id": 41921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41910,
                      "name": "maxBorrowableWithMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41891,
                      "src": "8235:20:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 41911,
                        "name": "totalCollateralETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41835,
                        "src": "8270:18:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 41914,
                            "name": "totalDebtETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41837,
                            "src": "8330:12:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 41917,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 41915,
                                  "name": "currentLiquidationThreshold",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41839,
                                  "src": "8345:27:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31653134",
                                  "id": 41916,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8375:4:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100000000000000_by_1",
                                    "typeString": "int_const 100000000000000"
                                  },
                                  "value": "1e14"
                                },
                                "src": "8345:34:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 41918,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8344:36:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 41912,
                            "name": "minHealthFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41865,
                            "src": "8303:15:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 41913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8319:10:74",
                          "memberName": "mulDivDown",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54494,
                          "src": "8303:26:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 41919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8303:78:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8270:111:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8235:146:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41922,
                  "nodeType": "ExpressionStatement",
                  "src": "8235:146:74"
                },
                {
                  "assignments": [
                    41926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41926,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "8716:10:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41986,
                      "src": "8710:16:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 41925,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41924,
                          "name": "ERC20",
                          "nameLocations": [
                            "8710:5:74"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34556,
                          "src": "8710:5:74"
                        },
                        "referencedDeclaration": 34556,
                        "src": "8710:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev The 1e14 comes from totalDebtETH is given in 18 decimals, so we need to divide by 1e18, but",
                  "id": 41932,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 41928,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41823,
                            "src": "8735:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveToken_$35801",
                              "typeString": "contract IAaveToken"
                            }
                          },
                          "id": 41929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8741:24:74",
                          "memberName": "UNDERLYING_ASSET_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35800,
                          "src": "8735:30:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 41930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8735:32:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41927,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34556,
                      "src": "8729:5:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 41931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8729:39:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8710:58:74"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    },
                    "id": 41936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41933,
                      "name": "underlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41926,
                      "src": "8782:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 41934,
                        "name": "WETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41625,
                        "src": "8796:4:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ERC20_$34556_$",
                          "typeString": "function () pure returns (contract ERC20)"
                        }
                      },
                      "id": 41935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8796:6:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "8782:20:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41939,
                  "nodeType": "IfStatement",
                  "src": "8778:53:74",
                  "trueBody": {
                    "expression": {
                      "id": 41937,
                      "name": "maxBorrowableWithMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41891,
                      "src": "8811:20:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 41820,
                    "id": 41938,
                    "nodeType": "Return",
                    "src": "8804:27:74"
                  }
                },
                {
                  "assignments": [
                    41942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41942,
                      "mutability": "mutable",
                      "name": "priceRouter",
                      "nameLocation": "8941:11:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41986,
                      "src": "8929:23:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceRouter_$52732",
                        "typeString": "contract PriceRouter"
                      },
                      "typeName": {
                        "id": 41941,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41940,
                          "name": "PriceRouter",
                          "nameLocations": [
                            "8929:11:74"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52732,
                          "src": "8929:11:74"
                        },
                        "referencedDeclaration": 52732,
                        "src": "8929:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceRouter_$52732",
                          "typeString": "contract PriceRouter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41955,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 41951,
                              "name": "PRICE_ROUTER_REGISTRY_SLOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43768,
                              "src": "9008:26:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                "typeString": "function () pure returns (uint256)"
                              }
                            },
                            "id": 41952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9008:28:74",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 41945,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8974:3:74",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 41946,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8978:6:74",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8974:10:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 41944,
                                  "name": "Cellar",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33437,
                                  "src": "8967:6:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Cellar_$33437_$",
                                    "typeString": "type(contract Cellar)"
                                  }
                                },
                                "id": 41947,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8967:18:74",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Cellar_$33437",
                                  "typeString": "contract Cellar"
                                }
                              },
                              "id": 41948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8986:8:74",
                              "memberName": "registry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31073,
                              "src": "8967:27:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Registry_$30033_$",
                                "typeString": "function () view external returns (contract Registry)"
                              }
                            },
                            "id": 41949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8967:29:74",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Registry_$30033",
                              "typeString": "contract Registry"
                            }
                          },
                          "id": 41950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8997:10:74",
                          "memberName": "getAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29189,
                          "src": "8967:40:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 41953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8967:70:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41943,
                      "name": "PriceRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52732,
                      "src": "8955:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PriceRouter_$52732_$",
                        "typeString": "type(contract PriceRouter)"
                      }
                    },
                    "id": 41954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8955:83:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceRouter_$52732",
                      "typeString": "contract PriceRouter"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8929:109:74"
                },
                {
                  "assignments": [
                    41957
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41957,
                      "mutability": "mutable",
                      "name": "withdrawable",
                      "nameLocation": "9056:12:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41986,
                      "src": "9048:20:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41956,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9048:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41965,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 41960,
                          "name": "WETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41625,
                          "src": "9092:4:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ERC20_$34556_$",
                            "typeString": "function () pure returns (contract ERC20)"
                          }
                        },
                        "id": 41961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9092:6:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 41962,
                        "name": "maxBorrowableWithMin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41891,
                        "src": "9100:20:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 41963,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41926,
                        "src": "9122:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "expression": {
                        "id": 41958,
                        "name": "priceRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41942,
                        "src": "9071:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceRouter_$52732",
                          "typeString": "contract PriceRouter"
                        }
                      },
                      "id": 41959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9083:8:74",
                      "memberName": "getValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50080,
                      "src": "9071:20:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$34556_$_t_uint256_$_t_contract$_ERC20_$34556_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint256,contract ERC20) view external returns (uint256)"
                      }
                    },
                    "id": 41964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9071:62:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9048:85:74"
                },
                {
                  "assignments": [
                    41967
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41967,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "9151:7:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 41986,
                      "src": "9143:15:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41966,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9143:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41978,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41975,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9193:3:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 41976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9197:6:74",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9193:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 41971,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41823,
                                "src": "9175:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAaveToken_$35801",
                                  "typeString": "contract IAaveToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IAaveToken_$35801",
                                  "typeString": "contract IAaveToken"
                                }
                              ],
                              "id": 41970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9167:7:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 41969,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9167:7:74",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 41972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9167:14:74",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 41968,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34556,
                          "src": "9161:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 41973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9161:21:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 41974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9183:9:74",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34199,
                      "src": "9161:31:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 41977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9161:43:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9143:61:74"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 41979,
                        "name": "withdrawable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41957,
                        "src": "9345:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 41980,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41967,
                        "src": "9360:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9345:22:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 41983,
                      "name": "withdrawable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41957,
                      "src": "9380:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9345:47:74",
                    "trueExpression": {
                      "id": 41982,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41967,
                      "src": "9370:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 41820,
                  "id": 41985,
                  "nodeType": "Return",
                  "src": "9338:54:74"
                }
              ]
            },
            "baseFunctions": [
              43817
            ],
            "documentation": {
              "id": 41811,
              "nodeType": "StructuredDocumentation",
              "src": "5696:932:74",
              "text": " @notice Uses configurartion data minimum health factor to calculate withdrawable assets from Aave.\n @dev Applies a `cushion` value to the health factor checks and calculation.\n      The goal of this is to minimize scenarios where users are withdrawing a very small amount of\n      assets from Aave. This function returns zero if\n      -minimum health factor is NOT set.\n      -the current health factor is less than the minimum health factor + 2x `cushion`\n      Otherwise this function calculates the withdrawable amount using\n      minimum health factor + `cushion` for its calcualtions.\n @dev It is possible for the math below to lose a small amount of precision since it is only\n      maintaining 18 decimals during the calculation, but this is desired since\n      doing so lowers the withdrawable from amount which in turn raises the health factor."
            },
            "functionSelector": "fa50e5d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawableFrom",
            "nameLocation": "6642:16:74",
            "overrides": {
              "id": 41817,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6744:8:74"
            },
            "parameters": {
              "id": 41816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41813,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "6681:11:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 41987,
                  "src": "6668:24:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 41812,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6668:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41815,
                  "mutability": "mutable",
                  "name": "configData",
                  "nameLocation": "6715:10:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 41987,
                  "src": "6702:23:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 41814,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6702:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6658:73:74"
            },
            "returnParameters": {
              "id": 41820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41819,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41987,
                  "src": "6762:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6762:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6761:9:74"
            },
            "scope": 42187,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42015,
            "nodeType": "FunctionDefinition",
            "src": "9489:202:74",
            "nodes": [],
            "body": {
              "id": 42014,
              "nodeType": "Block",
              "src": "9573:118:74",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41997
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41997,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "9591:5:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 42014,
                      "src": "9583:13:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 41996,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9583:7:74",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42005,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42000,
                        "name": "adaptorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41990,
                        "src": "9610:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 42002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9624:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 42001,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9624:7:74",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 42003,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9623:9:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 41998,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "9599:3:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 41999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "9603:6:74",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "9599:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 42004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9599:34:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9583:50:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 42010,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9673:3:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 42011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9677:6:74",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9673:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 42007,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41997,
                            "src": "9656:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42006,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34556,
                          "src": "9650:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 42008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9650:12:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 42009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9663:9:74",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34199,
                      "src": "9650:22:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 42012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9650:34:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 41995,
                  "id": 42013,
                  "nodeType": "Return",
                  "src": "9643:41:74"
                }
              ]
            },
            "baseFunctions": [
              43807
            ],
            "documentation": {
              "id": 41988,
              "nodeType": "StructuredDocumentation",
              "src": "9405:79:74",
              "text": " @notice Returns the cellars balance of the positions aToken."
            },
            "functionSelector": "78415365",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "9498:9:74",
            "overrides": {
              "id": 41992,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9546:8:74"
            },
            "parameters": {
              "id": 41991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41990,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "9521:11:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 42015,
                  "src": "9508:24:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 41989,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9508:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9507:26:74"
            },
            "returnParameters": {
              "id": 41995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41994,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42015,
                  "src": "9564:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9564:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9563:9:74"
            },
            "scope": 42187,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42045,
            "nodeType": "FunctionDefinition",
            "src": "9775:218:74",
            "nodes": [],
            "body": {
              "id": 42044,
              "nodeType": "Block",
              "src": "9855:138:74",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42027,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "9876:5:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 42044,
                      "src": "9865:16:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveToken_$35801",
                        "typeString": "contract IAaveToken"
                      },
                      "typeName": {
                        "id": 42026,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42025,
                          "name": "IAaveToken",
                          "nameLocations": [
                            "9865:10:74"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35801,
                          "src": "9865:10:74"
                        },
                        "referencedDeclaration": 35801,
                        "src": "9865:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveToken_$35801",
                          "typeString": "contract IAaveToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42037,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42031,
                            "name": "adaptorData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42018,
                            "src": "9906:11:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 42033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9920:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 42032,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9920:7:74",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 42034,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9919:9:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          ],
                          "expression": {
                            "id": 42029,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9895:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 42030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9899:6:74",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "9895:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 42035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9895:34:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 42028,
                      "name": "IAaveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35801,
                      "src": "9884:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IAaveToken_$35801_$",
                        "typeString": "type(contract IAaveToken)"
                      }
                    },
                    "id": 42036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9884:46:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveToken_$35801",
                      "typeString": "contract IAaveToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9865:65:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 42039,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42027,
                            "src": "9953:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAaveToken_$35801",
                              "typeString": "contract IAaveToken"
                            }
                          },
                          "id": 42040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9959:24:74",
                          "memberName": "UNDERLYING_ASSET_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35800,
                          "src": "9953:30:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 42041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9953:32:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42038,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34556,
                      "src": "9947:5:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$34556_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 42042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9947:39:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "functionReturnParameters": 42024,
                  "id": 42043,
                  "nodeType": "Return",
                  "src": "9940:46:74"
                }
              ]
            },
            "baseFunctions": [
              43826
            ],
            "documentation": {
              "id": 42016,
              "nodeType": "StructuredDocumentation",
              "src": "9697:73:74",
              "text": " @notice Returns the positions aToken underlying asset."
            },
            "functionSelector": "e170a9bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetOf",
            "nameLocation": "9784:7:74",
            "overrides": {
              "id": 42020,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9830:8:74"
            },
            "parameters": {
              "id": 42019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42018,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "9805:11:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 42045,
                  "src": "9792:24:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42017,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9792:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9791:26:74"
            },
            "returnParameters": {
              "id": 42024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42023,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42045,
                  "src": "9848:5:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$34556",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 42022,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42021,
                      "name": "ERC20",
                      "nameLocations": [
                        "9848:5:74"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34556,
                      "src": "9848:5:74"
                    },
                    "referencedDeclaration": 34556,
                    "src": "9848:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9847:7:74"
            },
            "scope": 42187,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42081,
            "nodeType": "FunctionDefinition",
            "src": "10283:209:74",
            "nodes": [],
            "body": {
              "id": 42080,
              "nodeType": "Block",
              "src": "10382:110:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 42063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42056,
                      "name": "assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42054,
                      "src": "10392:6:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                        "typeString": "contract ERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 42061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10413:1:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 42060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "10401:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract ERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 42058,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 42057,
                              "name": "ERC20",
                              "nameLocations": [
                                "10405:5:74"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 34556,
                              "src": "10405:5:74"
                            },
                            "referencedDeclaration": 34556,
                            "src": "10405:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 42059,
                          "nodeType": "ArrayTypeName",
                          "src": "10405:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_storage_ptr",
                            "typeString": "contract ERC20[]"
                          }
                        }
                      },
                      "id": 42062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10401:14:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                        "typeString": "contract ERC20[] memory"
                      }
                    },
                    "src": "10392:23:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                      "typeString": "contract ERC20[] memory"
                    }
                  },
                  "id": 42064,
                  "nodeType": "ExpressionStatement",
                  "src": "10392:23:74"
                },
                {
                  "expression": {
                    "id": 42071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 42065,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42054,
                        "src": "10425:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 42067,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 42066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10432:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10425:9:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 42069,
                          "name": "adaptorData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42048,
                          "src": "10445:11:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 42068,
                        "name": "assetOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          42045
                        ],
                        "referencedDeclaration": 42045,
                        "src": "10437:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_contract$_ERC20_$34556_$",
                          "typeString": "function (bytes memory) view returns (contract ERC20)"
                        }
                      },
                      "id": 42070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10437:20:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "10425:32:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 42072,
                  "nodeType": "ExpressionStatement",
                  "src": "10425:32:74"
                },
                {
                  "expression": {
                    "id": 42078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 42073,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42054,
                        "src": "10467:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 42075,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 42074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10474:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10467:9:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 42076,
                        "name": "WETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41625,
                        "src": "10479:4:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_ERC20_$34556_$",
                          "typeString": "function () pure returns (contract ERC20)"
                        }
                      },
                      "id": 42077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10479:6:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "10467:18:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 42079,
                  "nodeType": "ExpressionStatement",
                  "src": "10467:18:74"
                }
              ]
            },
            "baseFunctions": [
              43854
            ],
            "documentation": {
              "id": 42046,
              "nodeType": "StructuredDocumentation",
              "src": "9999:279:74",
              "text": " @notice When positions are added to the Registry, this function can be used in order to figure out\n         what assets this adaptor needs to price, and confirm pricing is properly setup.\n @dev WETH is used when determining the withdrawableBalance."
            },
            "functionSelector": "aeffddde",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetsUsed",
            "nameLocation": "10292:10:74",
            "overrides": {
              "id": 42050,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10341:8:74"
            },
            "parameters": {
              "id": 42049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42048,
                  "mutability": "mutable",
                  "name": "adaptorData",
                  "nameLocation": "10316:11:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 42081,
                  "src": "10303:24:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42047,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10303:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10302:26:74"
            },
            "returnParameters": {
              "id": 42055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42054,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "10374:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 42081,
                  "src": "10359:21:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_memory_ptr",
                    "typeString": "contract ERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42052,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42051,
                        "name": "ERC20",
                        "nameLocations": [
                          "10359:5:74"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 34556,
                        "src": "10359:5:74"
                      },
                      "referencedDeclaration": 34556,
                      "src": "10359:5:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34556",
                        "typeString": "contract ERC20"
                      }
                    },
                    "id": 42053,
                    "nodeType": "ArrayTypeName",
                    "src": "10359:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$34556_$dyn_storage_ptr",
                      "typeString": "contract ERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10358:23:74"
            },
            "scope": 42187,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42091,
            "nodeType": "FunctionDefinition",
            "src": "10576:83:74",
            "nodes": [],
            "body": {
              "id": 42090,
              "nodeType": "Block",
              "src": "10630:29:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 42088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10647:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 42087,
                  "id": 42089,
                  "nodeType": "Return",
                  "src": "10640:12:74"
                }
              ]
            },
            "baseFunctions": [
              43860
            ],
            "documentation": {
              "id": 42082,
              "nodeType": "StructuredDocumentation",
              "src": "10498:73:74",
              "text": " @notice This adaptor returns collateral, and not debt."
            },
            "functionSelector": "89353a09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDebt",
            "nameLocation": "10585:6:74",
            "overrides": {
              "id": 42084,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10606:8:74"
            },
            "parameters": {
              "id": 42083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10591:2:74"
            },
            "returnParameters": {
              "id": 42087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42086,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42091,
                  "src": "10624:4:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42085,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10624:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10623:6:74"
            },
            "scope": 42187,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42143,
            "nodeType": "FunctionDefinition",
            "src": "11058:423:74",
            "nodes": [],
            "body": {
              "id": 42142,
              "nodeType": "Block",
              "src": "11135:346:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 42105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42100,
                      "name": "amountToDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42097,
                      "src": "11145:15:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 42102,
                          "name": "tokenToDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42095,
                          "src": "11177:14:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$34556",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 42103,
                          "name": "amountToDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42097,
                          "src": "11193:15:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$34556",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 42101,
                        "name": "_maxAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43890,
                        "src": "11163:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$34556_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,uint256) view returns (uint256)"
                        }
                      },
                      "id": 42104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11163:46:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11145:64:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42106,
                  "nodeType": "ExpressionStatement",
                  "src": "11145:64:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 42112,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41613,
                              "src": "11254:4:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPool_$37792_$",
                                "typeString": "function () pure returns (contract IPool)"
                              }
                            },
                            "id": 42113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11254:6:74",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPool_$37792",
                              "typeString": "contract IPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPool_$37792",
                              "typeString": "contract IPool"
                            }
                          ],
                          "id": 42111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11246:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42110,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11246:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11246:15:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42115,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42097,
                        "src": "11263:15:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 42107,
                        "name": "tokenToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42095,
                        "src": "11219:14:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 42109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11234:11:74",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35306,
                      "src": "11219:26:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$34556_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 42116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11219:60:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42117,
                  "nodeType": "ExpressionStatement",
                  "src": "11219:60:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42123,
                            "name": "tokenToDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42095,
                            "src": "11312:14:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 42122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11304:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42121,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11304:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11304:23:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42125,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42097,
                        "src": "11329:15:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42128,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11354:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveATokenAdaptor_$42187",
                              "typeString": "contract AaveATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveATokenAdaptor_$42187",
                              "typeString": "contract AaveATokenAdaptor"
                            }
                          ],
                          "id": 42127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11346:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11346:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11346:13:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11361:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 42118,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41613,
                          "src": "11289:4:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPool_$37792_$",
                            "typeString": "function () pure returns (contract IPool)"
                          }
                        },
                        "id": 42119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11289:6:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$37792",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 42120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11296:7:74",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37791,
                      "src": "11289:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,address,uint16) external"
                      }
                    },
                    "id": 42131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11289:74:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42132,
                  "nodeType": "ExpressionStatement",
                  "src": "11289:74:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42134,
                        "name": "tokenToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42095,
                        "src": "11442:14:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 42137,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41613,
                              "src": "11466:4:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPool_$37792_$",
                                "typeString": "function () pure returns (contract IPool)"
                              }
                            },
                            "id": 42138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11466:6:74",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPool_$37792",
                              "typeString": "contract IPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPool_$37792",
                              "typeString": "contract IPool"
                            }
                          ],
                          "id": 42136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11458:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42135,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11458:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11458:15:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$34556",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42133,
                      "name": "_revokeExternalApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43918,
                      "src": "11418:23:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address)"
                      }
                    },
                    "id": 42140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11418:56:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42141,
                  "nodeType": "ExpressionStatement",
                  "src": "11418:56:74"
                }
              ]
            },
            "documentation": {
              "id": 42092,
              "nodeType": "StructuredDocumentation",
              "src": "10781:272:74",
              "text": " @notice Allows strategists to lend assets on Aave.\n @dev Uses `_maxAvailable` helper function, see BaseAdaptor.sol\n @param tokenToDeposit the token to lend on Aave\n @param amountToDeposit the amount of `tokenToDeposit` to lend on Aave."
            },
            "functionSelector": "eeb149e7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToAave",
            "nameLocation": "11067:13:74",
            "parameters": {
              "id": 42098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42095,
                  "mutability": "mutable",
                  "name": "tokenToDeposit",
                  "nameLocation": "11087:14:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 42143,
                  "src": "11081:20:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$34556",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 42094,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42093,
                      "name": "ERC20",
                      "nameLocations": [
                        "11081:5:74"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34556,
                      "src": "11081:5:74"
                    },
                    "referencedDeclaration": 34556,
                    "src": "11081:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42097,
                  "mutability": "mutable",
                  "name": "amountToDeposit",
                  "nameLocation": "11111:15:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 42143,
                  "src": "11103:23:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11103:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11080:47:74"
            },
            "returnParameters": {
              "id": 42099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11135:0:74"
            },
            "scope": 42187,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42186,
            "nodeType": "FunctionDefinition",
            "src": "11715:404:74",
            "nodes": [],
            "body": {
              "id": 42185,
              "nodeType": "Block",
              "src": "11797:322:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42157,
                            "name": "tokenToWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42147,
                            "src": "11831:15:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$34556",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 42156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11823:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42155,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11823:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11823:24:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42159,
                        "name": "amountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42149,
                        "src": "11849:16:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42162,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11875:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveATokenAdaptor_$42187",
                              "typeString": "contract AaveATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveATokenAdaptor_$42187",
                              "typeString": "contract AaveATokenAdaptor"
                            }
                          ],
                          "id": 42161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11867:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42160,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11867:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11867:13:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 42152,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41613,
                          "src": "11807:4:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPool_$37792_$",
                            "typeString": "function () pure returns (contract IPool)"
                          }
                        },
                        "id": 42153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11807:6:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$37792",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 42154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11814:8:74",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37392,
                      "src": "11807:15:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 42164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11807:74:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42165,
                  "nodeType": "ExpressionStatement",
                  "src": "11807:74:74"
                },
                {
                  "assignments": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    42167
                  ],
                  "declarations": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 42167,
                      "mutability": "mutable",
                      "name": "healthFactor",
                      "nameLocation": "11972:12:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 42185,
                      "src": "11964:20:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42166,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11964:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42176,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42173,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12022:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AaveATokenAdaptor_$42187",
                              "typeString": "contract AaveATokenAdaptor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AaveATokenAdaptor_$42187",
                              "typeString": "contract AaveATokenAdaptor"
                            }
                          ],
                          "id": 42172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12014:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42171,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12014:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12014:13:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 42168,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41613,
                          "src": "11988:4:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IPool_$37792_$",
                            "typeString": "function () pure returns (contract IPool)"
                          }
                        },
                        "id": 42169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11988:6:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$37792",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 42170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11995:18:74",
                      "memberName": "getUserAccountData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37545,
                      "src": "11988:25:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11988:40:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11953:75:74"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42177,
                      "name": "healthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42167,
                      "src": "12042:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 42178,
                        "name": "HFMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41634,
                        "src": "12057:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                          "typeString": "function () pure returns (uint256)"
                        }
                      },
                      "id": 42179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12057:7:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12042:22:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42184,
                  "nodeType": "IfStatement",
                  "src": "12038:74:74",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 42181,
                        "name": "AaveATokenAdaptor__HealthFactorTooLow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41586,
                        "src": "12073:37:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 42182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12073:39:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 42183,
                    "nodeType": "RevertStatement",
                    "src": "12066:46:74"
                  }
                }
              ]
            },
            "documentation": {
              "id": 42144,
              "nodeType": "StructuredDocumentation",
              "src": "11487:223:74",
              "text": " @notice Allows strategists to withdraw assets from Aave.\n @param tokenToWithdraw the token to withdraw from Aave.\n @param amountToWithdraw the amount of `tokenToWithdraw` to withdraw from Aave"
            },
            "functionSelector": "487ede04",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFromAave",
            "nameLocation": "11724:16:74",
            "parameters": {
              "id": 42150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42147,
                  "mutability": "mutable",
                  "name": "tokenToWithdraw",
                  "nameLocation": "11747:15:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 42186,
                  "src": "11741:21:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$34556",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 42146,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42145,
                      "name": "ERC20",
                      "nameLocations": [
                        "11741:5:74"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34556,
                      "src": "11741:5:74"
                    },
                    "referencedDeclaration": 34556,
                    "src": "11741:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$34556",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42149,
                  "mutability": "mutable",
                  "name": "amountToWithdraw",
                  "nameLocation": "11772:16:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 42186,
                  "src": "11764:24:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11764:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11740:49:74"
            },
            "returnParameters": {
              "id": 42151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11797:0:74"
            },
            "scope": 42187,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41575,
              "name": "BaseAdaptor",
              "nameLocations": [
                "471:11:74"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43962,
              "src": "471:11:74"
            },
            "id": 41576,
            "nodeType": "InheritanceSpecifier",
            "src": "471:11:74"
          }
        ],
        "canonicalName": "AaveATokenAdaptor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 41574,
          "nodeType": "StructuredDocumentation",
          "src": "312:128:74",
          "text": " @title Aave aToken Adaptor\n @notice Allows Cellars to interact with Aave aToken positions.\n @author crispymangoes"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42187,
          43962
        ],
        "name": "AaveATokenAdaptor",
        "nameLocation": "450:17:74",
        "scope": 42188,
        "usedErrors": [
          41586,
          43724,
          43727,
          43730,
          43733,
          43738
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 74
}