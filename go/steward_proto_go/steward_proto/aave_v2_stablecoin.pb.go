//
// This is Steward's Strategy Provider API for the AaveV2StablecoinCellar.sol Cellar contract which can be found in this repo:
// https://github.com/PeggyJV/cellar-contracts
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.1
// source: aave_v2_stablecoin.proto

package steward_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a function call to the Aave V2 Stablecoin cellar
type AaveV2Stablecoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The function you wish to execute on the target cellar
	//
	// Types that are assignable to Function:
	//
	//	*AaveV2Stablecoin_Accrue_
	//	*AaveV2Stablecoin_ClaimAndUnstake_
	//	*AaveV2Stablecoin_EnterPosition_
	//	*AaveV2Stablecoin_EnterPositionWithAssets_
	//	*AaveV2Stablecoin_ExitPosition_
	//	*AaveV2Stablecoin_ExitPositionWithAssets_
	//	*AaveV2Stablecoin_Rebalance_
	//	*AaveV2Stablecoin_Reinvest_
	//	*AaveV2Stablecoin_SetAccrualPeriod_
	//	*AaveV2Stablecoin_SetDepositLimit_
	//	*AaveV2Stablecoin_SetLiquidityLimit_
	//	*AaveV2Stablecoin_SendFees_
	Function isAaveV2Stablecoin_Function `protobuf_oneof:"function"`
}

func (x *AaveV2Stablecoin) Reset() {
	*x = AaveV2Stablecoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2Stablecoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2Stablecoin) ProtoMessage() {}

func (x *AaveV2Stablecoin) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2Stablecoin.ProtoReflect.Descriptor instead.
func (*AaveV2Stablecoin) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{0}
}

func (m *AaveV2Stablecoin) GetFunction() isAaveV2Stablecoin_Function {
	if m != nil {
		return m.Function
	}
	return nil
}

func (x *AaveV2Stablecoin) GetAccrue() *AaveV2Stablecoin_Accrue {
	if x, ok := x.GetFunction().(*AaveV2Stablecoin_Accrue_); ok {
		return x.Accrue
	}
	return nil
}

func (x *AaveV2Stablecoin) GetClaimAndUnstake() *AaveV2Stablecoin_ClaimAndUnstake {
	if x, ok := x.GetFunction().(*AaveV2Stablecoin_ClaimAndUnstake_); ok {
		return x.ClaimAndUnstake
	}
	return nil
}

func (x *AaveV2Stablecoin) GetEnterPosition() *AaveV2Stablecoin_EnterPosition {
	if x, ok := x.GetFunction().(*AaveV2Stablecoin_EnterPosition_); ok {
		return x.EnterPosition
	}
	return nil
}

func (x *AaveV2Stablecoin) GetEnterPositionWithAssets() *AaveV2Stablecoin_EnterPositionWithAssets {
	if x, ok := x.GetFunction().(*AaveV2Stablecoin_EnterPositionWithAssets_); ok {
		return x.EnterPositionWithAssets
	}
	return nil
}

func (x *AaveV2Stablecoin) GetExitPosition() *AaveV2Stablecoin_ExitPosition {
	if x, ok := x.GetFunction().(*AaveV2Stablecoin_ExitPosition_); ok {
		return x.ExitPosition
	}
	return nil
}

func (x *AaveV2Stablecoin) GetExitPositionWithAssets() *AaveV2Stablecoin_ExitPositionWithAssets {
	if x, ok := x.GetFunction().(*AaveV2Stablecoin_ExitPositionWithAssets_); ok {
		return x.ExitPositionWithAssets
	}
	return nil
}

func (x *AaveV2Stablecoin) GetRebalance() *AaveV2Stablecoin_Rebalance {
	if x, ok := x.GetFunction().(*AaveV2Stablecoin_Rebalance_); ok {
		return x.Rebalance
	}
	return nil
}

func (x *AaveV2Stablecoin) GetReinvest() *AaveV2Stablecoin_Reinvest {
	if x, ok := x.GetFunction().(*AaveV2Stablecoin_Reinvest_); ok {
		return x.Reinvest
	}
	return nil
}

func (x *AaveV2Stablecoin) GetSetAccrualPeriod() *AaveV2Stablecoin_SetAccrualPeriod {
	if x, ok := x.GetFunction().(*AaveV2Stablecoin_SetAccrualPeriod_); ok {
		return x.SetAccrualPeriod
	}
	return nil
}

func (x *AaveV2Stablecoin) GetSetDepositLimit() *AaveV2Stablecoin_SetDepositLimit {
	if x, ok := x.GetFunction().(*AaveV2Stablecoin_SetDepositLimit_); ok {
		return x.SetDepositLimit
	}
	return nil
}

func (x *AaveV2Stablecoin) GetSetLiquidityLimit() *AaveV2Stablecoin_SetLiquidityLimit {
	if x, ok := x.GetFunction().(*AaveV2Stablecoin_SetLiquidityLimit_); ok {
		return x.SetLiquidityLimit
	}
	return nil
}

func (x *AaveV2Stablecoin) GetSendFees() *AaveV2Stablecoin_SendFees {
	if x, ok := x.GetFunction().(*AaveV2Stablecoin_SendFees_); ok {
		return x.SendFees
	}
	return nil
}

type isAaveV2Stablecoin_Function interface {
	isAaveV2Stablecoin_Function()
}

type AaveV2Stablecoin_Accrue_ struct {
	// Represents function `accruePlatformFees()`
	Accrue *AaveV2Stablecoin_Accrue `protobuf:"bytes,1,opt,name=accrue,proto3,oneof"`
}

type AaveV2Stablecoin_ClaimAndUnstake_ struct {
	// Represents function `claimAndUnstake()`
	ClaimAndUnstake *AaveV2Stablecoin_ClaimAndUnstake `protobuf:"bytes,2,opt,name=claim_and_unstake,json=claimAndUnstake,proto3,oneof"`
}

type AaveV2Stablecoin_EnterPosition_ struct {
	// Represents function `enterPosition()`
	EnterPosition *AaveV2Stablecoin_EnterPosition `protobuf:"bytes,3,opt,name=enter_position,json=enterPosition,proto3,oneof"`
}

type AaveV2Stablecoin_EnterPositionWithAssets_ struct {
	// Represents function `enterPosition(uint256 assets)`
	EnterPositionWithAssets *AaveV2Stablecoin_EnterPositionWithAssets `protobuf:"bytes,4,opt,name=enter_position_with_assets,json=enterPositionWithAssets,proto3,oneof"`
}

type AaveV2Stablecoin_ExitPosition_ struct {
	// Represents function `exitPosition()`
	ExitPosition *AaveV2Stablecoin_ExitPosition `protobuf:"bytes,5,opt,name=exit_position,json=exitPosition,proto3,oneof"`
}

type AaveV2Stablecoin_ExitPositionWithAssets_ struct {
	// Represents function `exitPosition(uint256 assets)`
	ExitPositionWithAssets *AaveV2Stablecoin_ExitPositionWithAssets `protobuf:"bytes,6,opt,name=exit_position_with_assets,json=exitPositionWithAssets,proto3,oneof"`
}

type AaveV2Stablecoin_Rebalance_ struct {
	// Represents function `rebalance(address newLendingToken, uint256 minNewLendingTokenAmount)`
	Rebalance *AaveV2Stablecoin_Rebalance `protobuf:"bytes,7,opt,name=rebalance,proto3,oneof"`
}

type AaveV2Stablecoin_Reinvest_ struct {
	// Represents function `reinvest(uint256 minAssetsOut)`
	Reinvest *AaveV2Stablecoin_Reinvest `protobuf:"bytes,8,opt,name=reinvest,proto3,oneof"`
}

type AaveV2Stablecoin_SetAccrualPeriod_ struct {
	// Represents function `setAccrualPeriod(uint32 newAccrualPeriod)`
	SetAccrualPeriod *AaveV2Stablecoin_SetAccrualPeriod `protobuf:"bytes,9,opt,name=set_accrual_period,json=setAccrualPeriod,proto3,oneof"`
}

type AaveV2Stablecoin_SetDepositLimit_ struct {
	// Represents function `setDepositLimit(uint256 limit)`
	SetDepositLimit *AaveV2Stablecoin_SetDepositLimit `protobuf:"bytes,10,opt,name=set_deposit_limit,json=setDepositLimit,proto3,oneof"`
}

type AaveV2Stablecoin_SetLiquidityLimit_ struct {
	// Represents function `setLiquidityLimit(uint256 limit)`
	SetLiquidityLimit *AaveV2Stablecoin_SetLiquidityLimit `protobuf:"bytes,11,opt,name=set_liquidity_limit,json=setLiquidityLimit,proto3,oneof"`
}

type AaveV2Stablecoin_SendFees_ struct {
	// Represents function `transferFees()`
	SendFees *AaveV2Stablecoin_SendFees `protobuf:"bytes,12,opt,name=send_fees,json=sendFees,proto3,oneof"`
}

func (*AaveV2Stablecoin_Accrue_) isAaveV2Stablecoin_Function() {}

func (*AaveV2Stablecoin_ClaimAndUnstake_) isAaveV2Stablecoin_Function() {}

func (*AaveV2Stablecoin_EnterPosition_) isAaveV2Stablecoin_Function() {}

func (*AaveV2Stablecoin_EnterPositionWithAssets_) isAaveV2Stablecoin_Function() {}

func (*AaveV2Stablecoin_ExitPosition_) isAaveV2Stablecoin_Function() {}

func (*AaveV2Stablecoin_ExitPositionWithAssets_) isAaveV2Stablecoin_Function() {}

func (*AaveV2Stablecoin_Rebalance_) isAaveV2Stablecoin_Function() {}

func (*AaveV2Stablecoin_Reinvest_) isAaveV2Stablecoin_Function() {}

func (*AaveV2Stablecoin_SetAccrualPeriod_) isAaveV2Stablecoin_Function() {}

func (*AaveV2Stablecoin_SetDepositLimit_) isAaveV2Stablecoin_Function() {}

func (*AaveV2Stablecoin_SetLiquidityLimit_) isAaveV2Stablecoin_Function() {}

func (*AaveV2Stablecoin_SendFees_) isAaveV2Stablecoin_Function() {}

// Represents a function call initiated by governance
type AaveV2StablecoinGovernance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The function to call on the target cellar
	//
	// Types that are assignable to Function:
	//
	//	*AaveV2StablecoinGovernance_SetFeesDistributor_
	//	*AaveV2StablecoinGovernance_InitiateShutdown_
	//	*AaveV2StablecoinGovernance_LiftShutdown_
	//	*AaveV2StablecoinGovernance_SetTrust_
	//	*AaveV2StablecoinGovernance_Sweep_
	Function isAaveV2StablecoinGovernance_Function `protobuf_oneof:"function"`
}

func (x *AaveV2StablecoinGovernance) Reset() {
	*x = AaveV2StablecoinGovernance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2StablecoinGovernance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2StablecoinGovernance) ProtoMessage() {}

func (x *AaveV2StablecoinGovernance) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2StablecoinGovernance.ProtoReflect.Descriptor instead.
func (*AaveV2StablecoinGovernance) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{1}
}

func (m *AaveV2StablecoinGovernance) GetFunction() isAaveV2StablecoinGovernance_Function {
	if m != nil {
		return m.Function
	}
	return nil
}

func (x *AaveV2StablecoinGovernance) GetSetFeesDistributor() *AaveV2StablecoinGovernance_SetFeesDistributor {
	if x, ok := x.GetFunction().(*AaveV2StablecoinGovernance_SetFeesDistributor_); ok {
		return x.SetFeesDistributor
	}
	return nil
}

func (x *AaveV2StablecoinGovernance) GetInitiateShutdown() *AaveV2StablecoinGovernance_InitiateShutdown {
	if x, ok := x.GetFunction().(*AaveV2StablecoinGovernance_InitiateShutdown_); ok {
		return x.InitiateShutdown
	}
	return nil
}

func (x *AaveV2StablecoinGovernance) GetLiftShutdown() *AaveV2StablecoinGovernance_LiftShutdown {
	if x, ok := x.GetFunction().(*AaveV2StablecoinGovernance_LiftShutdown_); ok {
		return x.LiftShutdown
	}
	return nil
}

func (x *AaveV2StablecoinGovernance) GetSetTrust() *AaveV2StablecoinGovernance_SetTrust {
	if x, ok := x.GetFunction().(*AaveV2StablecoinGovernance_SetTrust_); ok {
		return x.SetTrust
	}
	return nil
}

func (x *AaveV2StablecoinGovernance) GetSweep() *AaveV2StablecoinGovernance_Sweep {
	if x, ok := x.GetFunction().(*AaveV2StablecoinGovernance_Sweep_); ok {
		return x.Sweep
	}
	return nil
}

type isAaveV2StablecoinGovernance_Function interface {
	isAaveV2StablecoinGovernance_Function()
}

type AaveV2StablecoinGovernance_SetFeesDistributor_ struct {
	// Represents function `setFeesDistributor(bytes32)`
	SetFeesDistributor *AaveV2StablecoinGovernance_SetFeesDistributor `protobuf:"bytes,1,opt,name=set_fees_distributor,json=setFeesDistributor,proto3,oneof"`
}

type AaveV2StablecoinGovernance_InitiateShutdown_ struct {
	// Represents function `initiateShutdown(bool)`
	InitiateShutdown *AaveV2StablecoinGovernance_InitiateShutdown `protobuf:"bytes,2,opt,name=initiate_shutdown,json=initiateShutdown,proto3,oneof"`
}

type AaveV2StablecoinGovernance_LiftShutdown_ struct {
	// Represents function `liftShutdown()`
	LiftShutdown *AaveV2StablecoinGovernance_LiftShutdown `protobuf:"bytes,3,opt,name=lift_shutdown,json=liftShutdown,proto3,oneof"`
}

type AaveV2StablecoinGovernance_SetTrust_ struct {
	// Represents function `setTrust(address, bool)`
	SetTrust *AaveV2StablecoinGovernance_SetTrust `protobuf:"bytes,4,opt,name=set_trust,json=setTrust,proto3,oneof"`
}

type AaveV2StablecoinGovernance_Sweep_ struct {
	// Represents function `sweep(address, address)`
	Sweep *AaveV2StablecoinGovernance_Sweep `protobuf:"bytes,5,opt,name=sweep,proto3,oneof"`
}

func (*AaveV2StablecoinGovernance_SetFeesDistributor_) isAaveV2StablecoinGovernance_Function() {}

func (*AaveV2StablecoinGovernance_InitiateShutdown_) isAaveV2StablecoinGovernance_Function() {}

func (*AaveV2StablecoinGovernance_LiftShutdown_) isAaveV2StablecoinGovernance_Function() {}

func (*AaveV2StablecoinGovernance_SetTrust_) isAaveV2StablecoinGovernance_Function() {}

func (*AaveV2StablecoinGovernance_Sweep_) isAaveV2StablecoinGovernance_Function() {}

// Accrue yield, platform fees, and performance fees..
//
// Represents function `accrue()`
type AaveV2Stablecoin_Accrue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AaveV2Stablecoin_Accrue) Reset() {
	*x = AaveV2Stablecoin_Accrue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2Stablecoin_Accrue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2Stablecoin_Accrue) ProtoMessage() {}

func (x *AaveV2Stablecoin_Accrue) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2Stablecoin_Accrue.ProtoReflect.Descriptor instead.
func (*AaveV2Stablecoin_Accrue) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{0, 0}
}

// Claim rewards from Aave and begin cooldown period to unstake them.
//
// Represents function `claimAndUnstake()`
type AaveV2Stablecoin_ClaimAndUnstake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AaveV2Stablecoin_ClaimAndUnstake) Reset() {
	*x = AaveV2Stablecoin_ClaimAndUnstake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2Stablecoin_ClaimAndUnstake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2Stablecoin_ClaimAndUnstake) ProtoMessage() {}

func (x *AaveV2Stablecoin_ClaimAndUnstake) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2Stablecoin_ClaimAndUnstake.ProtoReflect.Descriptor instead.
func (*AaveV2Stablecoin_ClaimAndUnstake) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{0, 1}
}

// Pushes total assets into the current Aave lending position.
//
// Represents function `enterPosition()`
type AaveV2Stablecoin_EnterPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AaveV2Stablecoin_EnterPosition) Reset() {
	*x = AaveV2Stablecoin_EnterPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2Stablecoin_EnterPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2Stablecoin_EnterPosition) ProtoMessage() {}

func (x *AaveV2Stablecoin_EnterPosition) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2Stablecoin_EnterPosition.ProtoReflect.Descriptor instead.
func (*AaveV2Stablecoin_EnterPosition) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{0, 2}
}

// Pushes assets into the current Aave lending position.
//
// Represents function `enterPosition(uint256 assets)`
type AaveV2Stablecoin_EnterPositionWithAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// amount of assets to enter into the current position
	Assets string `protobuf:"bytes,1,opt,name=assets,proto3" json:"assets,omitempty"`
}

func (x *AaveV2Stablecoin_EnterPositionWithAssets) Reset() {
	*x = AaveV2Stablecoin_EnterPositionWithAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2Stablecoin_EnterPositionWithAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2Stablecoin_EnterPositionWithAssets) ProtoMessage() {}

func (x *AaveV2Stablecoin_EnterPositionWithAssets) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2Stablecoin_EnterPositionWithAssets.ProtoReflect.Descriptor instead.
func (*AaveV2Stablecoin_EnterPositionWithAssets) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{0, 3}
}

func (x *AaveV2Stablecoin_EnterPositionWithAssets) GetAssets() string {
	if x != nil {
		return x.Assets
	}
	return ""
}

// Pulls total assets from the current Aave lending position.
//
// Represents function `enterPosition()`
type AaveV2Stablecoin_ExitPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AaveV2Stablecoin_ExitPosition) Reset() {
	*x = AaveV2Stablecoin_ExitPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2Stablecoin_ExitPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2Stablecoin_ExitPosition) ProtoMessage() {}

func (x *AaveV2Stablecoin_ExitPosition) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2Stablecoin_ExitPosition.ProtoReflect.Descriptor instead.
func (*AaveV2Stablecoin_ExitPosition) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{0, 4}
}

// Pulls assets from the current Aave lending position.
//
// Represents function `exitPosition(uint256 assets)`
type AaveV2Stablecoin_ExitPositionWithAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// amount of assets to exit from the current position
	Assets string `protobuf:"bytes,1,opt,name=assets,proto3" json:"assets,omitempty"`
}

func (x *AaveV2Stablecoin_ExitPositionWithAssets) Reset() {
	*x = AaveV2Stablecoin_ExitPositionWithAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2Stablecoin_ExitPositionWithAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2Stablecoin_ExitPositionWithAssets) ProtoMessage() {}

func (x *AaveV2Stablecoin_ExitPositionWithAssets) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2Stablecoin_ExitPositionWithAssets.ProtoReflect.Descriptor instead.
func (*AaveV2Stablecoin_ExitPositionWithAssets) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{0, 5}
}

func (x *AaveV2Stablecoin_ExitPositionWithAssets) GetAssets() string {
	if x != nil {
		return x.Assets
	}
	return ""
}

// Rebalances current assets into a new asset position.
//
// Represents function `rebalance(address newLendingToken, uint256 minNewLendingTokenAmount)`
//
// This function is based on the Curve Pool Registry exchange_multiple() function:
// https://github.com/curvefi/curve-pool-registry/blob/16a8664952cf61d7fed06acca79ad5ac696f4b20/contracts/Swaps.vy#L461-L489
type AaveV2Stablecoin_Rebalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// array of [initial token, pool, token, pool, token, ...] that specifies the swap route on Curve.
	Route []string `protobuf:"bytes,1,rep,name=route,proto3" json:"route,omitempty"`
	// An array of up to 4 swap params. Attempting more than four swaps will fail.
	SwapParams []*AaveV2Stablecoin_Rebalance_SwapParams `protobuf:"bytes,2,rep,name=swap_params,json=swapParams,proto3" json:"swap_params,omitempty"`
	// Minimum acceptable assets to be received from the swap (slippage parameter).  Must be parsable as an unsigned 256-bit integer.
	MinAssetsOut string `protobuf:"bytes,3,opt,name=min_assets_out,json=minAssetsOut,proto3" json:"min_assets_out,omitempty"`
}

func (x *AaveV2Stablecoin_Rebalance) Reset() {
	*x = AaveV2Stablecoin_Rebalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2Stablecoin_Rebalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2Stablecoin_Rebalance) ProtoMessage() {}

func (x *AaveV2Stablecoin_Rebalance) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2Stablecoin_Rebalance.ProtoReflect.Descriptor instead.
func (*AaveV2Stablecoin_Rebalance) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{0, 6}
}

func (x *AaveV2Stablecoin_Rebalance) GetRoute() []string {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *AaveV2Stablecoin_Rebalance) GetSwapParams() []*AaveV2Stablecoin_Rebalance_SwapParams {
	if x != nil {
		return x.SwapParams
	}
	return nil
}

func (x *AaveV2Stablecoin_Rebalance) GetMinAssetsOut() string {
	if x != nil {
		return x.MinAssetsOut
	}
	return ""
}

// Reinvest rewards back into cellar's current position. Must be called within 2 day unstake period 10 days after `claimAndUnstake` was run.
//
// Represents function `reinvest(uint256 minAssetsOut)`
type AaveV2Stablecoin_Reinvest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Minimum acceptable assets to be received from the swap (slippage parameter).  Must be parsable as an unsigned 256-bit integer.
	MinAssetsOut string `protobuf:"bytes,1,opt,name=min_assets_out,json=minAssetsOut,proto3" json:"min_assets_out,omitempty"`
}

func (x *AaveV2Stablecoin_Reinvest) Reset() {
	*x = AaveV2Stablecoin_Reinvest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2Stablecoin_Reinvest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2Stablecoin_Reinvest) ProtoMessage() {}

func (x *AaveV2Stablecoin_Reinvest) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2Stablecoin_Reinvest.ProtoReflect.Descriptor instead.
func (*AaveV2Stablecoin_Reinvest) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{0, 7}
}

func (x *AaveV2Stablecoin_Reinvest) GetMinAssetsOut() string {
	if x != nil {
		return x.MinAssetsOut
	}
	return ""
}

// Set the accrual period over which yield is distributed.
//
// Represents function `setAccrualPeriod(uint32 newAccrualPeriod)`
type AaveV2Stablecoin_SetAccrualPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewAccrualPeriod uint32 `protobuf:"varint,1,opt,name=new_accrual_period,json=newAccrualPeriod,proto3" json:"new_accrual_period,omitempty"`
}

func (x *AaveV2Stablecoin_SetAccrualPeriod) Reset() {
	*x = AaveV2Stablecoin_SetAccrualPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2Stablecoin_SetAccrualPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2Stablecoin_SetAccrualPeriod) ProtoMessage() {}

func (x *AaveV2Stablecoin_SetAccrualPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2Stablecoin_SetAccrualPeriod.ProtoReflect.Descriptor instead.
func (*AaveV2Stablecoin_SetAccrualPeriod) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{0, 8}
}

func (x *AaveV2Stablecoin_SetAccrualPeriod) GetNewAccrualPeriod() uint32 {
	if x != nil {
		return x.NewAccrualPeriod
	}
	return 0
}

// Set the per-wallet deposit limit. Uses the same decimals as the current asset.
//
// Represents function `setDepositLimit(uint256 limit)`
type AaveV2Stablecoin_SetDepositLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Amount of assets to set as the new limit. Must be parsable as an unsigned 256-bit integer.
	Limit string `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *AaveV2Stablecoin_SetDepositLimit) Reset() {
	*x = AaveV2Stablecoin_SetDepositLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2Stablecoin_SetDepositLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2Stablecoin_SetDepositLimit) ProtoMessage() {}

func (x *AaveV2Stablecoin_SetDepositLimit) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2Stablecoin_SetDepositLimit.ProtoReflect.Descriptor instead.
func (*AaveV2Stablecoin_SetDepositLimit) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{0, 9}
}

func (x *AaveV2Stablecoin_SetDepositLimit) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

// Set the maximum liquidity that cellar can manage. Uses the same decimals as the current asset.
//
// Represents function `setLiquidityLimit(uint256 limit)`
type AaveV2Stablecoin_SetLiquidityLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Amount of assets to set as the new limit
	Limit string `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *AaveV2Stablecoin_SetLiquidityLimit) Reset() {
	*x = AaveV2Stablecoin_SetLiquidityLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2Stablecoin_SetLiquidityLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2Stablecoin_SetLiquidityLimit) ProtoMessage() {}

func (x *AaveV2Stablecoin_SetLiquidityLimit) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2Stablecoin_SetLiquidityLimit.ProtoReflect.Descriptor instead.
func (*AaveV2Stablecoin_SetLiquidityLimit) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{0, 10}
}

func (x *AaveV2Stablecoin_SetLiquidityLimit) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

// Transfer accrued fees to the Sommelier Chain to distribute.
//
// Represents function `sendFees()`
type AaveV2Stablecoin_SendFees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AaveV2Stablecoin_SendFees) Reset() {
	*x = AaveV2Stablecoin_SendFees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2Stablecoin_SendFees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2Stablecoin_SendFees) ProtoMessage() {}

func (x *AaveV2Stablecoin_SendFees) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2Stablecoin_SendFees.ProtoReflect.Descriptor instead.
func (*AaveV2Stablecoin_SendFees) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{0, 11}
}

// Represents parameters for a single swap. Each swap needs the indeces in Rebalance.route of the in/out token addresses and the swap type. See the Curve contract linked above for more detail.
type AaveV2Stablecoin_Rebalance_SwapParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Index in the `route` array of the swap's input token address
	InIndex uint64 `protobuf:"varint,1,opt,name=in_index,json=inIndex,proto3" json:"in_index,omitempty"`
	// Index in the `route` array of the swap's output token address
	OutIndex uint64 `protobuf:"varint,2,opt,name=out_index,json=outIndex,proto3" json:"out_index,omitempty"`
	// 1 - stableswap `exchange`
	// 2 - stableswap `exchange_underlying`
	// 3 - cryptoswap `exchange`
	// 4 - cryptoswap `exchange_underlying`
	// 5 - Polygon factory metapools `exchange_underlying`
	// See the Curve Pool Registry exchange_multiple() function for more information.
	SwapType uint64 `protobuf:"varint,3,opt,name=swap_type,json=swapType,proto3" json:"swap_type,omitempty"`
}

func (x *AaveV2Stablecoin_Rebalance_SwapParams) Reset() {
	*x = AaveV2Stablecoin_Rebalance_SwapParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2Stablecoin_Rebalance_SwapParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2Stablecoin_Rebalance_SwapParams) ProtoMessage() {}

func (x *AaveV2Stablecoin_Rebalance_SwapParams) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2Stablecoin_Rebalance_SwapParams.ProtoReflect.Descriptor instead.
func (*AaveV2Stablecoin_Rebalance_SwapParams) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{0, 6, 0}
}

func (x *AaveV2Stablecoin_Rebalance_SwapParams) GetInIndex() uint64 {
	if x != nil {
		return x.InIndex
	}
	return 0
}

func (x *AaveV2Stablecoin_Rebalance_SwapParams) GetOutIndex() uint64 {
	if x != nil {
		return x.OutIndex
	}
	return 0
}

func (x *AaveV2Stablecoin_Rebalance_SwapParams) GetSwapType() uint64 {
	if x != nil {
		return x.SwapType
	}
	return 0
}

// Represents function `setFeesDistributor(bytes32)`
type AaveV2StablecoinGovernance_SetFeesDistributor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The new fees distributor
	NewFeesDistributor string `protobuf:"bytes,1,opt,name=new_fees_distributor,json=newFeesDistributor,proto3" json:"new_fees_distributor,omitempty"`
}

func (x *AaveV2StablecoinGovernance_SetFeesDistributor) Reset() {
	*x = AaveV2StablecoinGovernance_SetFeesDistributor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2StablecoinGovernance_SetFeesDistributor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2StablecoinGovernance_SetFeesDistributor) ProtoMessage() {}

func (x *AaveV2StablecoinGovernance_SetFeesDistributor) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2StablecoinGovernance_SetFeesDistributor.ProtoReflect.Descriptor instead.
func (*AaveV2StablecoinGovernance_SetFeesDistributor) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AaveV2StablecoinGovernance_SetFeesDistributor) GetNewFeesDistributor() string {
	if x != nil {
		return x.NewFeesDistributor
	}
	return ""
}

// Represents function `initiateShutdown(bool)`
type AaveV2StablecoinGovernance_InitiateShutdown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether to empty the position
	EmptyPosition bool `protobuf:"varint,1,opt,name=empty_position,json=emptyPosition,proto3" json:"empty_position,omitempty"`
}

func (x *AaveV2StablecoinGovernance_InitiateShutdown) Reset() {
	*x = AaveV2StablecoinGovernance_InitiateShutdown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2StablecoinGovernance_InitiateShutdown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2StablecoinGovernance_InitiateShutdown) ProtoMessage() {}

func (x *AaveV2StablecoinGovernance_InitiateShutdown) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2StablecoinGovernance_InitiateShutdown.ProtoReflect.Descriptor instead.
func (*AaveV2StablecoinGovernance_InitiateShutdown) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{1, 1}
}

func (x *AaveV2StablecoinGovernance_InitiateShutdown) GetEmptyPosition() bool {
	if x != nil {
		return x.EmptyPosition
	}
	return false
}

// Represents function `liftShutdown()`
type AaveV2StablecoinGovernance_LiftShutdown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AaveV2StablecoinGovernance_LiftShutdown) Reset() {
	*x = AaveV2StablecoinGovernance_LiftShutdown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2StablecoinGovernance_LiftShutdown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2StablecoinGovernance_LiftShutdown) ProtoMessage() {}

func (x *AaveV2StablecoinGovernance_LiftShutdown) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2StablecoinGovernance_LiftShutdown.ProtoReflect.Descriptor instead.
func (*AaveV2StablecoinGovernance_LiftShutdown) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{1, 2}
}

// Represents function `setTrust(address, bool)`
type AaveV2StablecoinGovernance_SetTrust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The position to set trust for
	Position string `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	// Whether to trust the address
	Trust bool `protobuf:"varint,2,opt,name=trust,proto3" json:"trust,omitempty"`
}

func (x *AaveV2StablecoinGovernance_SetTrust) Reset() {
	*x = AaveV2StablecoinGovernance_SetTrust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2StablecoinGovernance_SetTrust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2StablecoinGovernance_SetTrust) ProtoMessage() {}

func (x *AaveV2StablecoinGovernance_SetTrust) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2StablecoinGovernance_SetTrust.ProtoReflect.Descriptor instead.
func (*AaveV2StablecoinGovernance_SetTrust) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{1, 3}
}

func (x *AaveV2StablecoinGovernance_SetTrust) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *AaveV2StablecoinGovernance_SetTrust) GetTrust() bool {
	if x != nil {
		return x.Trust
	}
	return false
}

// Represents function `sweep(address, address)`
type AaveV2StablecoinGovernance_Sweep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The address of the ERC20 token to sweep
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// The recipient of the sweep
	Recipient string `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
}

func (x *AaveV2StablecoinGovernance_Sweep) Reset() {
	*x = AaveV2StablecoinGovernance_Sweep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aave_v2_stablecoin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AaveV2StablecoinGovernance_Sweep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AaveV2StablecoinGovernance_Sweep) ProtoMessage() {}

func (x *AaveV2StablecoinGovernance_Sweep) ProtoReflect() protoreflect.Message {
	mi := &file_aave_v2_stablecoin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AaveV2StablecoinGovernance_Sweep.ProtoReflect.Descriptor instead.
func (*AaveV2StablecoinGovernance_Sweep) Descriptor() ([]byte, []int) {
	return file_aave_v2_stablecoin_proto_rawDescGZIP(), []int{1, 4}
}

func (x *AaveV2StablecoinGovernance_Sweep) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AaveV2StablecoinGovernance_Sweep) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

var File_aave_v2_stablecoin_proto protoreflect.FileDescriptor

var file_aave_v2_stablecoin_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x32, 0x5f, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x74, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x22, 0xaf, 0x0d, 0x0a, 0x10, 0x41, 0x61, 0x76, 0x65, 0x56,
	0x32, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x3d, 0x0a, 0x06, 0x61,
	0x63, 0x63, 0x72, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x74,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65, 0x56, 0x32, 0x53,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65,
	0x48, 0x00, 0x52, 0x06, 0x61, 0x63, 0x63, 0x72, 0x75, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65, 0x56, 0x32, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x63,
	0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x41, 0x6e, 0x64, 0x55, 0x6e, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x41, 0x6e, 0x64, 0x55,
	0x6e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65,
	0x56, 0x32, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x73, 0x0a, 0x1a, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61, 0x76,
	0x65, 0x56, 0x32, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x48, 0x00, 0x52, 0x17, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x12, 0x50, 0x0a, 0x0d, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65, 0x56, 0x32, 0x53, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x78, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x19, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65, 0x56, 0x32, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x63,
	0x6f, 0x69, 0x6e, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x48, 0x00, 0x52, 0x16, 0x65, 0x78,
	0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x12, 0x46, 0x0a, 0x09, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65, 0x56, 0x32, 0x53, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x08,
	0x72, 0x65, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65,
	0x56, 0x32, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x12, 0x5d, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x72, 0x75, 0x61, 0x6c,
	0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65, 0x56,
	0x32, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x72, 0x75, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x10,
	0x73, 0x65, 0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x5a, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65, 0x56, 0x32, 0x53,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x60, 0x0a, 0x13,
	0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65, 0x56, 0x32, 0x53, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x74,
	0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x44,
	0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41,
	0x61, 0x76, 0x65, 0x56, 0x32, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x73, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x46, 0x65, 0x65, 0x73, 0x1a, 0x08, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x1a, 0x11,
	0x0a, 0x0f, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x41, 0x6e, 0x64, 0x55, 0x6e, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x1a, 0x0f, 0x0a, 0x0d, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x31, 0x0a, 0x17, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x1a, 0x0e, 0x0a, 0x0c, 0x45, 0x78, 0x69, 0x74, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x30, 0x0a, 0x16, 0x45, 0x78, 0x69, 0x74, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x1a, 0xfe, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x73,
	0x77, 0x61, 0x70, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61,
	0x76, 0x65, 0x56, 0x32, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x52,
	0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x0a, 0x73, 0x77, 0x61, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x5f, 0x6f, 0x75,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x4f, 0x75, 0x74, 0x1a, 0x61, 0x0a, 0x0a, 0x53, 0x77, 0x61, 0x70, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x77, 0x61, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x73, 0x77, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x30, 0x0a, 0x08, 0x52, 0x65, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x69,
	0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x1a, 0x40, 0x0a, 0x10, 0x53, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x72, 0x75, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x63, 0x63, 0x72, 0x75, 0x61, 0x6c, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x65, 0x77, 0x41,
	0x63, 0x63, 0x72, 0x75, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x1a, 0x27, 0x0a, 0x0f,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x1a, 0x29, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x1a, 0x0a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xff, 0x05, 0x0a, 0x1a, 0x41, 0x61, 0x76,
	0x65, 0x56, 0x32, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x6d, 0x0a, 0x14, 0x73, 0x65, 0x74, 0x5f, 0x66,
	0x65, 0x65, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65, 0x56, 0x32, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x63,
	0x6f, 0x69, 0x6e, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x74, 0x46, 0x65, 0x65, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x66, 0x0a, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41,
	0x61, 0x76, 0x65, 0x56, 0x32, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x47,
	0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x5a,
	0x0a, 0x0d, 0x6c, 0x69, 0x66, 0x74, 0x5f, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65, 0x56, 0x32, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x63,
	0x6f, 0x69, 0x6e, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4c, 0x69,
	0x66, 0x74, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x69,
	0x66, 0x74, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x4e, 0x0a, 0x09, 0x73, 0x65,
	0x74, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65, 0x56,
	0x32, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x6f, 0x76, 0x65, 0x72,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x08, 0x73, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x05, 0x73, 0x77,
	0x65, 0x65, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65, 0x56, 0x32, 0x53, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x53, 0x77, 0x65, 0x65, 0x70, 0x48, 0x00, 0x52, 0x05, 0x73, 0x77, 0x65, 0x65, 0x70,
	0x1a, 0x46, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x46, 0x65, 0x65, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x65, 0x77, 0x5f, 0x66, 0x65,
	0x65, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x77, 0x46, 0x65, 0x65, 0x73, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x1a, 0x39, 0x0a, 0x10, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x65, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x25, 0x0a, 0x0e,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x0e, 0x0a, 0x0c, 0x4c, 0x69, 0x66, 0x74, 0x53, 0x68, 0x75, 0x74, 0x64,
	0x6f, 0x77, 0x6e, 0x1a, 0x3c, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x1a, 0x3b, 0x0a, 0x05, 0x53, 0x77, 0x65, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x0a,
	0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x5a, 0x0e, 0x2f, 0x73,
	0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aave_v2_stablecoin_proto_rawDescOnce sync.Once
	file_aave_v2_stablecoin_proto_rawDescData = file_aave_v2_stablecoin_proto_rawDesc
)

func file_aave_v2_stablecoin_proto_rawDescGZIP() []byte {
	file_aave_v2_stablecoin_proto_rawDescOnce.Do(func() {
		file_aave_v2_stablecoin_proto_rawDescData = protoimpl.X.CompressGZIP(file_aave_v2_stablecoin_proto_rawDescData)
	})
	return file_aave_v2_stablecoin_proto_rawDescData
}

var file_aave_v2_stablecoin_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_aave_v2_stablecoin_proto_goTypes = []interface{}{
	(*AaveV2Stablecoin)(nil),                              // 0: steward.v4.AaveV2Stablecoin
	(*AaveV2StablecoinGovernance)(nil),                    // 1: steward.v4.AaveV2StablecoinGovernance
	(*AaveV2Stablecoin_Accrue)(nil),                       // 2: steward.v4.AaveV2Stablecoin.Accrue
	(*AaveV2Stablecoin_ClaimAndUnstake)(nil),              // 3: steward.v4.AaveV2Stablecoin.ClaimAndUnstake
	(*AaveV2Stablecoin_EnterPosition)(nil),                // 4: steward.v4.AaveV2Stablecoin.EnterPosition
	(*AaveV2Stablecoin_EnterPositionWithAssets)(nil),      // 5: steward.v4.AaveV2Stablecoin.EnterPositionWithAssets
	(*AaveV2Stablecoin_ExitPosition)(nil),                 // 6: steward.v4.AaveV2Stablecoin.ExitPosition
	(*AaveV2Stablecoin_ExitPositionWithAssets)(nil),       // 7: steward.v4.AaveV2Stablecoin.ExitPositionWithAssets
	(*AaveV2Stablecoin_Rebalance)(nil),                    // 8: steward.v4.AaveV2Stablecoin.Rebalance
	(*AaveV2Stablecoin_Reinvest)(nil),                     // 9: steward.v4.AaveV2Stablecoin.Reinvest
	(*AaveV2Stablecoin_SetAccrualPeriod)(nil),             // 10: steward.v4.AaveV2Stablecoin.SetAccrualPeriod
	(*AaveV2Stablecoin_SetDepositLimit)(nil),              // 11: steward.v4.AaveV2Stablecoin.SetDepositLimit
	(*AaveV2Stablecoin_SetLiquidityLimit)(nil),            // 12: steward.v4.AaveV2Stablecoin.SetLiquidityLimit
	(*AaveV2Stablecoin_SendFees)(nil),                     // 13: steward.v4.AaveV2Stablecoin.SendFees
	(*AaveV2Stablecoin_Rebalance_SwapParams)(nil),         // 14: steward.v4.AaveV2Stablecoin.Rebalance.SwapParams
	(*AaveV2StablecoinGovernance_SetFeesDistributor)(nil), // 15: steward.v4.AaveV2StablecoinGovernance.SetFeesDistributor
	(*AaveV2StablecoinGovernance_InitiateShutdown)(nil),   // 16: steward.v4.AaveV2StablecoinGovernance.InitiateShutdown
	(*AaveV2StablecoinGovernance_LiftShutdown)(nil),       // 17: steward.v4.AaveV2StablecoinGovernance.LiftShutdown
	(*AaveV2StablecoinGovernance_SetTrust)(nil),           // 18: steward.v4.AaveV2StablecoinGovernance.SetTrust
	(*AaveV2StablecoinGovernance_Sweep)(nil),              // 19: steward.v4.AaveV2StablecoinGovernance.Sweep
}
var file_aave_v2_stablecoin_proto_depIdxs = []int32{
	2,  // 0: steward.v4.AaveV2Stablecoin.accrue:type_name -> steward.v4.AaveV2Stablecoin.Accrue
	3,  // 1: steward.v4.AaveV2Stablecoin.claim_and_unstake:type_name -> steward.v4.AaveV2Stablecoin.ClaimAndUnstake
	4,  // 2: steward.v4.AaveV2Stablecoin.enter_position:type_name -> steward.v4.AaveV2Stablecoin.EnterPosition
	5,  // 3: steward.v4.AaveV2Stablecoin.enter_position_with_assets:type_name -> steward.v4.AaveV2Stablecoin.EnterPositionWithAssets
	6,  // 4: steward.v4.AaveV2Stablecoin.exit_position:type_name -> steward.v4.AaveV2Stablecoin.ExitPosition
	7,  // 5: steward.v4.AaveV2Stablecoin.exit_position_with_assets:type_name -> steward.v4.AaveV2Stablecoin.ExitPositionWithAssets
	8,  // 6: steward.v4.AaveV2Stablecoin.rebalance:type_name -> steward.v4.AaveV2Stablecoin.Rebalance
	9,  // 7: steward.v4.AaveV2Stablecoin.reinvest:type_name -> steward.v4.AaveV2Stablecoin.Reinvest
	10, // 8: steward.v4.AaveV2Stablecoin.set_accrual_period:type_name -> steward.v4.AaveV2Stablecoin.SetAccrualPeriod
	11, // 9: steward.v4.AaveV2Stablecoin.set_deposit_limit:type_name -> steward.v4.AaveV2Stablecoin.SetDepositLimit
	12, // 10: steward.v4.AaveV2Stablecoin.set_liquidity_limit:type_name -> steward.v4.AaveV2Stablecoin.SetLiquidityLimit
	13, // 11: steward.v4.AaveV2Stablecoin.send_fees:type_name -> steward.v4.AaveV2Stablecoin.SendFees
	15, // 12: steward.v4.AaveV2StablecoinGovernance.set_fees_distributor:type_name -> steward.v4.AaveV2StablecoinGovernance.SetFeesDistributor
	16, // 13: steward.v4.AaveV2StablecoinGovernance.initiate_shutdown:type_name -> steward.v4.AaveV2StablecoinGovernance.InitiateShutdown
	17, // 14: steward.v4.AaveV2StablecoinGovernance.lift_shutdown:type_name -> steward.v4.AaveV2StablecoinGovernance.LiftShutdown
	18, // 15: steward.v4.AaveV2StablecoinGovernance.set_trust:type_name -> steward.v4.AaveV2StablecoinGovernance.SetTrust
	19, // 16: steward.v4.AaveV2StablecoinGovernance.sweep:type_name -> steward.v4.AaveV2StablecoinGovernance.Sweep
	14, // 17: steward.v4.AaveV2Stablecoin.Rebalance.swap_params:type_name -> steward.v4.AaveV2Stablecoin.Rebalance.SwapParams
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_aave_v2_stablecoin_proto_init() }
func file_aave_v2_stablecoin_proto_init() {
	if File_aave_v2_stablecoin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aave_v2_stablecoin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2Stablecoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2StablecoinGovernance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2Stablecoin_Accrue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2Stablecoin_ClaimAndUnstake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2Stablecoin_EnterPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2Stablecoin_EnterPositionWithAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2Stablecoin_ExitPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2Stablecoin_ExitPositionWithAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2Stablecoin_Rebalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2Stablecoin_Reinvest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2Stablecoin_SetAccrualPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2Stablecoin_SetDepositLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2Stablecoin_SetLiquidityLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2Stablecoin_SendFees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2Stablecoin_Rebalance_SwapParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2StablecoinGovernance_SetFeesDistributor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2StablecoinGovernance_InitiateShutdown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2StablecoinGovernance_LiftShutdown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2StablecoinGovernance_SetTrust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aave_v2_stablecoin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AaveV2StablecoinGovernance_Sweep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_aave_v2_stablecoin_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AaveV2Stablecoin_Accrue_)(nil),
		(*AaveV2Stablecoin_ClaimAndUnstake_)(nil),
		(*AaveV2Stablecoin_EnterPosition_)(nil),
		(*AaveV2Stablecoin_EnterPositionWithAssets_)(nil),
		(*AaveV2Stablecoin_ExitPosition_)(nil),
		(*AaveV2Stablecoin_ExitPositionWithAssets_)(nil),
		(*AaveV2Stablecoin_Rebalance_)(nil),
		(*AaveV2Stablecoin_Reinvest_)(nil),
		(*AaveV2Stablecoin_SetAccrualPeriod_)(nil),
		(*AaveV2Stablecoin_SetDepositLimit_)(nil),
		(*AaveV2Stablecoin_SetLiquidityLimit_)(nil),
		(*AaveV2Stablecoin_SendFees_)(nil),
	}
	file_aave_v2_stablecoin_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AaveV2StablecoinGovernance_SetFeesDistributor_)(nil),
		(*AaveV2StablecoinGovernance_InitiateShutdown_)(nil),
		(*AaveV2StablecoinGovernance_LiftShutdown_)(nil),
		(*AaveV2StablecoinGovernance_SetTrust_)(nil),
		(*AaveV2StablecoinGovernance_Sweep_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aave_v2_stablecoin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aave_v2_stablecoin_proto_goTypes,
		DependencyIndexes: file_aave_v2_stablecoin_proto_depIdxs,
		MessageInfos:      file_aave_v2_stablecoin_proto_msgTypes,
	}.Build()
	File_aave_v2_stablecoin_proto = out.File
	file_aave_v2_stablecoin_proto_rawDesc = nil
	file_aave_v2_stablecoin_proto_goTypes = nil
	file_aave_v2_stablecoin_proto_depIdxs = nil
}
