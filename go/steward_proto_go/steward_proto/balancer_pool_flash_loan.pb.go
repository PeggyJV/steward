// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.1
// source: balancer_pool_flash_loan.proto

package steward_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents flash loan call data for the Balancer Pool adaptor V1, for managing pool positions on Balancer.
type BalancerPoolAdaptorV1FlashLoan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MakeFlashLoan *BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan `protobuf:"bytes,1,opt,name=make_flash_loan,json=makeFlashLoan,proto3" json:"make_flash_loan,omitempty"`
}

func (x *BalancerPoolAdaptorV1FlashLoan) Reset() {
	*x = BalancerPoolAdaptorV1FlashLoan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balancer_pool_flash_loan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalancerPoolAdaptorV1FlashLoan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalancerPoolAdaptorV1FlashLoan) ProtoMessage() {}

func (x *BalancerPoolAdaptorV1FlashLoan) ProtoReflect() protoreflect.Message {
	mi := &file_balancer_pool_flash_loan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalancerPoolAdaptorV1FlashLoan.ProtoReflect.Descriptor instead.
func (*BalancerPoolAdaptorV1FlashLoan) Descriptor() ([]byte, []int) {
	return file_balancer_pool_flash_loan_proto_rawDescGZIP(), []int{0}
}

func (x *BalancerPoolAdaptorV1FlashLoan) GetMakeFlashLoan() *BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan {
	if x != nil {
		return x.MakeFlashLoan
	}
	return nil
}

type BalancerPoolAdaptorV1FlashLoanCalls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Calls []*BalancerPoolAdaptorV1FlashLoan `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"`
}

func (x *BalancerPoolAdaptorV1FlashLoanCalls) Reset() {
	*x = BalancerPoolAdaptorV1FlashLoanCalls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balancer_pool_flash_loan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalancerPoolAdaptorV1FlashLoanCalls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalancerPoolAdaptorV1FlashLoanCalls) ProtoMessage() {}

func (x *BalancerPoolAdaptorV1FlashLoanCalls) ProtoReflect() protoreflect.Message {
	mi := &file_balancer_pool_flash_loan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalancerPoolAdaptorV1FlashLoanCalls.ProtoReflect.Descriptor instead.
func (*BalancerPoolAdaptorV1FlashLoanCalls) Descriptor() ([]byte, []int) {
	return file_balancer_pool_flash_loan_proto_rawDescGZIP(), []int{1}
}

func (x *BalancerPoolAdaptorV1FlashLoanCalls) GetCalls() []*BalancerPoolAdaptorV1FlashLoan {
	if x != nil {
		return x.Calls
	}
	return nil
}

// Make a flash loan
//
// Represents `function makeFlashLoan(IERC20[] tokens, uint256[] amounts, bytes memory data)`
type BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The tokens to flash loan
	Tokens []string `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	// The amounts to flash loan
	Amounts []string `protobuf:"bytes,2,rep,name=amounts,proto3" json:"amounts,omitempty"`
	// The data to flash loan
	Data []*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan) Reset() {
	*x = BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balancer_pool_flash_loan_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan) ProtoMessage() {}

func (x *BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan) ProtoReflect() protoreflect.Message {
	mi := &file_balancer_pool_flash_loan_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan.ProtoReflect.Descriptor instead.
func (*BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan) Descriptor() ([]byte, []int) {
	return file_balancer_pool_flash_loan_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan) GetAmounts() []string {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan) GetData() []*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan {
	if x != nil {
		return x.Data
	}
	return nil
}

// NOTE: Make FlashLoan takes an array of AdaptorCall. cellar_v2.proto defines it, but also imports this file, therefore we can't import cellar_v2.proto in order to use the AdaptorCall message here. To avoid the recursive import, we duplicate the message definition.
type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of the adaptor
	Adaptor string `protobuf:"bytes,1,opt,name=adaptor,proto3" json:"adaptor,omitempty"`
	// The function call data for the adaptor
	//
	// Types that are assignable to CallData:
	//
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveATokenV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveDebtTokenV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CompoundCTokenV2Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveATokenV2Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveDebtTokenV2Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV3ATokenV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV3DebtTokenV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_OneInchV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_FeesAndReservesV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_ZeroXV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_SwapWithUniswapV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_VestingSimpleV2Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CellarV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_UniswapV3V2Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV2EnableAssetAsCollateralV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_FTokenV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV2ATokenV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV2DebtTokenV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3ATokenCollateralV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3ATokenP2PV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3DebtTokenV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_LegacyCellarV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_DebtFTokenV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CollateralFTokenV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_ConvexCurveV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CurveV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AuraErc4626V1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueCollateralV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueDebtV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueSupplyV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_Erc4626V1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_StakingV1Calls
	//	*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_PendleV1Calls
	CallData isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData `protobuf_oneof:"call_data"`
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) Reset() {
	*x = BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balancer_pool_flash_loan_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) ProtoMessage() {}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) ProtoReflect() protoreflect.Message {
	mi := &file_balancer_pool_flash_loan_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan.ProtoReflect.Descriptor instead.
func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) Descriptor() ([]byte, []int) {
	return file_balancer_pool_flash_loan_proto_rawDescGZIP(), []int{0, 1}
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetAdaptor() string {
	if x != nil {
		return x.Adaptor
	}
	return ""
}

func (m *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetCallData() isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData {
	if m != nil {
		return m.CallData
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetAaveATokenV1Calls() *AaveATokenAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveATokenV1Calls); ok {
		return x.AaveATokenV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetAaveDebtTokenV1Calls() *AaveDebtTokenAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveDebtTokenV1Calls); ok {
		return x.AaveDebtTokenV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetCompoundCTokenV2Calls() *CompoundCTokenAdaptorV2Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CompoundCTokenV2Calls); ok {
		return x.CompoundCTokenV2Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetAaveATokenV2Calls() *AaveATokenAdaptorV2Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveATokenV2Calls); ok {
		return x.AaveATokenV2Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetAaveDebtTokenV2Calls() *AaveDebtTokenAdaptorV2Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveDebtTokenV2Calls); ok {
		return x.AaveDebtTokenV2Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetAaveV3ATokenV1Calls() *AaveV3ATokenAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV3ATokenV1Calls); ok {
		return x.AaveV3ATokenV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetAaveV3DebtTokenV1Calls() *AaveV3DebtTokenAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV3DebtTokenV1Calls); ok {
		return x.AaveV3DebtTokenV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetOneInchV1Calls() *OneInchAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_OneInchV1Calls); ok {
		return x.OneInchV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetFeesAndReservesV1Calls() *FeesAndReservesAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_FeesAndReservesV1Calls); ok {
		return x.FeesAndReservesV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetZeroXV1Calls() *ZeroXAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_ZeroXV1Calls); ok {
		return x.ZeroXV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetSwapWithUniswapV1Calls() *SwapWithUniswapAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_SwapWithUniswapV1Calls); ok {
		return x.SwapWithUniswapV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetVestingSimpleV2Calls() *VestingSimpleAdaptorV2Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_VestingSimpleV2Calls); ok {
		return x.VestingSimpleV2Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetCellarV1Calls() *CellarAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CellarV1Calls); ok {
		return x.CellarV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetUniswapV3V2Calls() *UniswapV3AdaptorV2Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_UniswapV3V2Calls); ok {
		return x.UniswapV3V2Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetAaveV2EnableAssetAsCollateralV1Calls() *AaveV2EnableAssetAsCollateralAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV2EnableAssetAsCollateralV1Calls); ok {
		return x.AaveV2EnableAssetAsCollateralV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetFTokenV1Calls() *FTokenAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_FTokenV1Calls); ok {
		return x.FTokenV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetMorphoAaveV2ATokenV1Calls() *MorphoAaveV2ATokenAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV2ATokenV1Calls); ok {
		return x.MorphoAaveV2ATokenV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetMorphoAaveV2DebtTokenV1Calls() *MorphoAaveV2DebtTokenAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV2DebtTokenV1Calls); ok {
		return x.MorphoAaveV2DebtTokenV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetMorphoAaveV3ATokenCollateralV1Calls() *MorphoAaveV3ATokenCollateralAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3ATokenCollateralV1Calls); ok {
		return x.MorphoAaveV3ATokenCollateralV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetMorphoAaveV3ATokenP2PV1Calls() *MorphoAaveV3ATokenP2PAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3ATokenP2PV1Calls); ok {
		return x.MorphoAaveV3ATokenP2PV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetMorphoAaveV3DebtTokenV1Calls() *MorphoAaveV3DebtTokenAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3DebtTokenV1Calls); ok {
		return x.MorphoAaveV3DebtTokenV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetLegacyCellarV1Calls() *LegacyCellarAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_LegacyCellarV1Calls); ok {
		return x.LegacyCellarV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetDebtFTokenV1Calls() *DebtFTokenAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_DebtFTokenV1Calls); ok {
		return x.DebtFTokenV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetCollateralFTokenV1Calls() *CollateralFTokenAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CollateralFTokenV1Calls); ok {
		return x.CollateralFTokenV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetConvexCurveV1Calls() *ConvexCurveAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_ConvexCurveV1Calls); ok {
		return x.ConvexCurveV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetCurveV1Calls() *CurveAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CurveV1Calls); ok {
		return x.CurveV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetAuraErc4626V1Calls() *AuraERC4626AdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AuraErc4626V1Calls); ok {
		return x.AuraErc4626V1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetMorphoBlueCollateralV1Calls() *MorphoBlueCollateralAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueCollateralV1Calls); ok {
		return x.MorphoBlueCollateralV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetMorphoBlueDebtV1Calls() *MorphoBlueDebtAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueDebtV1Calls); ok {
		return x.MorphoBlueDebtV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetMorphoBlueSupplyV1Calls() *MorphoBlueSupplyAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueSupplyV1Calls); ok {
		return x.MorphoBlueSupplyV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetErc4626V1Calls() *ERC4626AdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_Erc4626V1Calls); ok {
		return x.Erc4626V1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetStakingV1Calls() *StakingAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_StakingV1Calls); ok {
		return x.StakingV1Calls
	}
	return nil
}

func (x *BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan) GetPendleV1Calls() *PendleAdaptorV1Calls {
	if x, ok := x.GetCallData().(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_PendleV1Calls); ok {
		return x.PendleV1Calls
	}
	return nil
}

type isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData interface {
	isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData()
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveATokenV1Calls struct {
	// Represents function calls to the AaveATokenAdaptor V1
	AaveATokenV1Calls *AaveATokenAdaptorV1Calls `protobuf:"bytes,2,opt,name=aave_a_token_v1_calls,json=aaveATokenV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveDebtTokenV1Calls struct {
	// Represents function calls to the AavaDebtTokenAdaptor V1
	AaveDebtTokenV1Calls *AaveDebtTokenAdaptorV1Calls `protobuf:"bytes,3,opt,name=aave_debt_token_v1_calls,json=aaveDebtTokenV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CompoundCTokenV2Calls struct {
	// Represents function calls to the CompoundCTokenAdaptor V2
	CompoundCTokenV2Calls *CompoundCTokenAdaptorV2Calls `protobuf:"bytes,4,opt,name=compound_c_token_v2_calls,json=compoundCTokenV2Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveATokenV2Calls struct {
	// Represents function calls to the AaveATokenV2Adaptor
	AaveATokenV2Calls *AaveATokenAdaptorV2Calls `protobuf:"bytes,5,opt,name=aave_a_token_v2_calls,json=aaveATokenV2Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveDebtTokenV2Calls struct {
	// Represents function calls to the AavaDebtTokenV2Adaptor
	AaveDebtTokenV2Calls *AaveDebtTokenAdaptorV2Calls `protobuf:"bytes,6,opt,name=aave_debt_token_v2_calls,json=aaveDebtTokenV2Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV3ATokenV1Calls struct {
	// Represents function calls to the AaveATokenV1Adaptor
	AaveV3ATokenV1Calls *AaveV3ATokenAdaptorV1Calls `protobuf:"bytes,7,opt,name=aave_v3_a_token_v1_calls,json=aaveV3ATokenV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV3DebtTokenV1Calls struct {
	// Represents function calls to the AavaDebtTokenV1Adaptor
	AaveV3DebtTokenV1Calls *AaveV3DebtTokenAdaptorV1Calls `protobuf:"bytes,8,opt,name=aave_v3_debt_token_v1_calls,json=aaveV3DebtTokenV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_OneInchV1Calls struct {
	// Represents function calls to the OneInchAdaptorV1
	OneInchV1Calls *OneInchAdaptorV1Calls `protobuf:"bytes,9,opt,name=one_inch_v1_calls,json=oneInchV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_FeesAndReservesV1Calls struct {
	// Represents function calls to the FeesAndReservesAdaptorV1
	FeesAndReservesV1Calls *FeesAndReservesAdaptorV1Calls `protobuf:"bytes,10,opt,name=fees_and_reserves_v1_calls,json=feesAndReservesV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_ZeroXV1Calls struct {
	// Represents functionc alls to the ZeroXAdaptorV1
	ZeroXV1Calls *ZeroXAdaptorV1Calls `protobuf:"bytes,11,opt,name=zero_x_v1_calls,json=zeroXV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_SwapWithUniswapV1Calls struct {
	// Represents function calls to the SwapWithUniswapAdaptorV1
	SwapWithUniswapV1Calls *SwapWithUniswapAdaptorV1Calls `protobuf:"bytes,12,opt,name=swap_with_uniswap_v1_calls,json=swapWithUniswapV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_VestingSimpleV2Calls struct {
	// Represents function calls to VestingSimpleAdaptor
	VestingSimpleV2Calls *VestingSimpleAdaptorV2Calls `protobuf:"bytes,13,opt,name=vesting_simple_v2_calls,json=vestingSimpleV2Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CellarV1Calls struct {
	// Represents function calls to the CellarAdaptor
	CellarV1Calls *CellarAdaptorV1Calls `protobuf:"bytes,14,opt,name=cellar_v1_calls,json=cellarV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_UniswapV3V2Calls struct {
	// Represents function calls to the UniswapV3Adaptor V2
	UniswapV3V2Calls *UniswapV3AdaptorV2Calls `protobuf:"bytes,15,opt,name=uniswap_v3_v2_calls,json=uniswapV3V2Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV2EnableAssetAsCollateralV1Calls struct {
	// Represents function calls to the AaveV2EnableAssetAsCollatorAdaptor V1
	AaveV2EnableAssetAsCollateralV1Calls *AaveV2EnableAssetAsCollateralAdaptorV1Calls `protobuf:"bytes,16,opt,name=aave_v2_enable_asset_as_collateral_v1_calls,json=aaveV2EnableAssetAsCollateralV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_FTokenV1Calls struct {
	// Represents function calls to the FTokenAdaptor V1
	FTokenV1Calls *FTokenAdaptorV1Calls `protobuf:"bytes,17,opt,name=f_token_v1_calls,json=fTokenV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV2ATokenV1Calls struct {
	// Represents function calls to the MorphoAaveV2AToken V1
	MorphoAaveV2ATokenV1Calls *MorphoAaveV2ATokenAdaptorV1Calls `protobuf:"bytes,18,opt,name=morpho_aave_v2_a_token_v1_calls,json=morphoAaveV2ATokenV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV2DebtTokenV1Calls struct {
	// Represents function calls to the MorphoAaveV2DebtToken V1
	MorphoAaveV2DebtTokenV1Calls *MorphoAaveV2DebtTokenAdaptorV1Calls `protobuf:"bytes,19,opt,name=morpho_aave_v2_debt_token_v1_calls,json=morphoAaveV2DebtTokenV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3ATokenCollateralV1Calls struct {
	// Represents function calls to the MorphoAaveV3ATokenCollateral V1
	MorphoAaveV3ATokenCollateralV1Calls *MorphoAaveV3ATokenCollateralAdaptorV1Calls `protobuf:"bytes,20,opt,name=morpho_aave_v3_a_token_collateral_v1_calls,json=morphoAaveV3ATokenCollateralV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3ATokenP2PV1Calls struct {
	// Represents function calls to the MorphoAaveV3ATokenP2P V1
	MorphoAaveV3ATokenP2PV1Calls *MorphoAaveV3ATokenP2PAdaptorV1Calls `protobuf:"bytes,21,opt,name=morpho_aave_v3_a_token_p2p_v1_calls,json=morphoAaveV3ATokenP2pV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3DebtTokenV1Calls struct {
	// Represents function calls to the MorphoAaveV3DebtToken V1
	MorphoAaveV3DebtTokenV1Calls *MorphoAaveV3DebtTokenAdaptorV1Calls `protobuf:"bytes,22,opt,name=morpho_aave_v3_debt_token_v1_calls,json=morphoAaveV3DebtTokenV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_LegacyCellarV1Calls struct {
	// Represents function calls to the LegacyCellarAdaptor V1
	LegacyCellarV1Calls *LegacyCellarAdaptorV1Calls `protobuf:"bytes,23,opt,name=legacy_cellar_v1_calls,json=legacyCellarV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_DebtFTokenV1Calls struct {
	// Represents function calls to the DebtFTokenAdaptor V1
	DebtFTokenV1Calls *DebtFTokenAdaptorV1Calls `protobuf:"bytes,24,opt,name=debt_f_token_v1_calls,json=debtFTokenV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CollateralFTokenV1Calls struct {
	// Represents function calls to the CollateralFTokenAdaptor V1
	CollateralFTokenV1Calls *CollateralFTokenAdaptorV1Calls `protobuf:"bytes,25,opt,name=collateral_f_token_v1_calls,json=collateralFTokenV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_ConvexCurveV1Calls struct {
	// Represents function calls for the ConvexCurveAdaptorV1
	ConvexCurveV1Calls *ConvexCurveAdaptorV1Calls `protobuf:"bytes,26,opt,name=convex_curve_v1_calls,json=convexCurveV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CurveV1Calls struct {
	// Represents function calls for the CurveAdaptorV1
	CurveV1Calls *CurveAdaptorV1Calls `protobuf:"bytes,27,opt,name=curve_v1_calls,json=curveV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AuraErc4626V1Calls struct {
	// Represents function calls for the AuraERC4626AdaptorV1
	AuraErc4626V1Calls *AuraERC4626AdaptorV1Calls `protobuf:"bytes,28,opt,name=aura_erc4626_v1_calls,json=auraErc4626V1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueCollateralV1Calls struct {
	// Represents function calls for the MorphoBlueCollateralAdaptorV1
	MorphoBlueCollateralV1Calls *MorphoBlueCollateralAdaptorV1Calls `protobuf:"bytes,29,opt,name=morpho_blue_collateral_v1_calls,json=morphoBlueCollateralV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueDebtV1Calls struct {
	// Represents function calls for the MorphoBlueDebtAdaptorV1
	MorphoBlueDebtV1Calls *MorphoBlueDebtAdaptorV1Calls `protobuf:"bytes,30,opt,name=morpho_blue_debt_v1_calls,json=morphoBlueDebtV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueSupplyV1Calls struct {
	// Represents function calls for the MorphoBlueSupplyAdaptorV1
	MorphoBlueSupplyV1Calls *MorphoBlueSupplyAdaptorV1Calls `protobuf:"bytes,31,opt,name=morpho_blue_supply_v1_calls,json=morphoBlueSupplyV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_Erc4626V1Calls struct {
	// Represents function calls for the ERC4626AdaptorV1
	Erc4626V1Calls *ERC4626AdaptorV1Calls `protobuf:"bytes,32,opt,name=erc4626_v1_calls,json=erc4626V1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_StakingV1Calls struct {
	// Represents function calls for the StakingAdaptorV1
	StakingV1Calls *StakingAdaptorV1Calls `protobuf:"bytes,33,opt,name=staking_v1_calls,json=stakingV1Calls,proto3,oneof"`
}

type BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_PendleV1Calls struct {
	// Represents function calls for the PendleAdaptorV1
	PendleV1Calls *PendleAdaptorV1Calls `protobuf:"bytes,34,opt,name=pendle_v1_calls,json=pendleV1Calls,proto3,oneof"`
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveATokenV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveDebtTokenV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CompoundCTokenV2Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveATokenV2Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveDebtTokenV2Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV3ATokenV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV3DebtTokenV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_OneInchV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_FeesAndReservesV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_ZeroXV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_SwapWithUniswapV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_VestingSimpleV2Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CellarV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_UniswapV3V2Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV2EnableAssetAsCollateralV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_FTokenV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV2ATokenV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV2DebtTokenV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3ATokenCollateralV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3ATokenP2PV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3DebtTokenV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_LegacyCellarV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_DebtFTokenV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CollateralFTokenV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_ConvexCurveV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CurveV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AuraErc4626V1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueCollateralV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueDebtV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueSupplyV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_Erc4626V1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_StakingV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

func (*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_PendleV1Calls) isBalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CallData() {
}

var File_balancer_pool_flash_loan_proto protoreflect.FileDescriptor

var file_balancer_pool_flash_loan_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x1a, 0x0d, 0x61, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x64, 0x65, 0x62,
	0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x61,
	0x61, 0x76, 0x65, 0x5f, 0x76, 0x33, 0x5f, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x61, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x33, 0x5f, 0x64, 0x65,
	0x62, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d,
	0x63, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x65,
	0x72, 0x63, 0x34, 0x36, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x66, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6d, 0x6f, 0x72,
	0x70, 0x68, 0x6f, 0x5f, 0x61, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x32, 0x5f, 0x61, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6d, 0x6f, 0x72, 0x70, 0x68,
	0x6f, 0x5f, 0x61, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x32, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x6d, 0x6f, 0x72, 0x70,
	0x68, 0x6f, 0x5f, 0x61, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x33, 0x5f, 0x61, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x5f, 0x61, 0x61, 0x76, 0x65,
	0x5f, 0x76, 0x33, 0x5f, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x32, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x5f, 0x61, 0x61,
	0x76, 0x65, 0x5f, 0x76, 0x33, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x5f, 0x62,
	0x6c, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x5f, 0x62, 0x6c, 0x75,
	0x65, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6d, 0x6f,
	0x72, 0x70, 0x68, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x75, 0x6e, 0x69, 0x73, 0x77, 0x61, 0x70, 0x5f,
	0x76, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x75, 0x6e, 0x69, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x66, 0x65, 0x65, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x7a, 0x65, 0x72, 0x6f,
	0x5f, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6f, 0x6e, 0x65, 0x69, 0x6e, 0x63,
	0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63,
	0x65, 0x6c, 0x6c, 0x61, 0x72, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x61, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x32, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63, 0x65,
	0x6c, 0x6c, 0x61, 0x72, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x12, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x5f, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x12, 0x61, 0x75, 0x72, 0x61, 0x5f, 0x65, 0x72, 0x63, 0x34, 0x36, 0x32, 0x36, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x78, 0x5f, 0x63, 0x75, 0x72,
	0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x63, 0x75, 0x72, 0x76, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x70, 0x65, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xd2, 0x1c, 0x0a, 0x1e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x50,
	0x6f, 0x6f, 0x6c, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x4c, 0x6f, 0x61, 0x6e, 0x12, 0x60, 0x0a, 0x0f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x66, 0x6c,
	0x61, 0x73, 0x68, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56,
	0x31, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x61, 0x6e, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x0d, 0x6d, 0x61, 0x6b, 0x65, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x4c, 0x6f, 0x61, 0x6e, 0x1a, 0xa5, 0x01, 0x0a, 0x0d, 0x4d, 0x61, 0x6b, 0x65,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x62, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x73, 0x74, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x50,
	0x6f, 0x6f, 0x6c, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x4c, 0x6f, 0x61, 0x6e, 0x2e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x43, 0x61, 0x6c,
	0x6c, 0x46, 0x6f, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0xa5, 0x1a, 0x0a, 0x23, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x46,
	0x6f, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x4c, 0x6f, 0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x61, 0x70, 0x74, 0x6f,
	0x72, 0x12, 0x58, 0x0a, 0x15, 0x61, 0x61, 0x76, 0x65, 0x5f, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61,
	0x76, 0x65, 0x41, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56,
	0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x11, 0x61, 0x61, 0x76, 0x65, 0x41, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x61, 0x0a, 0x18, 0x61,
	0x61, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x76,
	0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65, 0x44,
	0x65, 0x62, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56,
	0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x14, 0x61, 0x61, 0x76, 0x65, 0x44, 0x65,
	0x62, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x64,
	0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x76, 0x32, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x61,
	0x70, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x15, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x32, 0x43,
	0x61, 0x6c, 0x6c, 0x73, 0x12, 0x58, 0x0a, 0x15, 0x61, 0x61, 0x76, 0x65, 0x5f, 0x61, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x76, 0x32, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34,
	0x2e, 0x41, 0x61, 0x76, 0x65, 0x41, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x61, 0x70, 0x74,
	0x6f, 0x72, 0x56, 0x32, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x11, 0x61, 0x61, 0x76,
	0x65, 0x41, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x32, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x61,
	0x0a, 0x18, 0x61, 0x61, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x76, 0x32, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61,
	0x76, 0x65, 0x44, 0x65, 0x62, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x61, 0x70, 0x74,
	0x6f, 0x72, 0x56, 0x32, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x14, 0x61, 0x61, 0x76,
	0x65, 0x44, 0x65, 0x62, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x32, 0x43, 0x61, 0x6c, 0x6c,
	0x73, 0x12, 0x5f, 0x0a, 0x18, 0x61, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x33, 0x5f, 0x61, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34,
	0x2e, 0x41, 0x61, 0x76, 0x65, 0x56, 0x33, 0x41, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x61,
	0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x13, 0x61,
	0x61, 0x76, 0x65, 0x56, 0x33, 0x41, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x31, 0x43, 0x61, 0x6c,
	0x6c, 0x73, 0x12, 0x68, 0x0a, 0x1b, 0x61, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x33, 0x5f, 0x64, 0x65,
	0x62, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x61, 0x76, 0x65, 0x56, 0x33, 0x44, 0x65, 0x62, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c,
	0x6c, 0x73, 0x48, 0x00, 0x52, 0x16, 0x61, 0x61, 0x76, 0x65, 0x56, 0x33, 0x44, 0x65, 0x62, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x4e, 0x0a, 0x11,
	0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x63, 0x68, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x34, 0x2e, 0x4f, 0x6e, 0x65, 0x49, 0x6e, 0x63, 0x68, 0x41, 0x64, 0x61, 0x70,
	0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x6e,
	0x65, 0x49, 0x6e, 0x63, 0x68, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x67, 0x0a, 0x1a,
	0x66, 0x65, 0x65, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x73, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x46, 0x65,
	0x65, 0x73, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x41, 0x64, 0x61,
	0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x16, 0x66,
	0x65, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x56, 0x31,
	0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x48, 0x0a, 0x0f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x78, 0x5f,
	0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x5a, 0x65, 0x72, 0x6f,
	0x58, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48,
	0x00, 0x52, 0x0c, 0x7a, 0x65, 0x72, 0x6f, 0x58, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12,
	0x67, 0x0a, 0x1a, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x75, 0x6e, 0x69,
	0x73, 0x77, 0x61, 0x70, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34,
	0x2e, 0x53, 0x77, 0x61, 0x70, 0x57, 0x69, 0x74, 0x68, 0x55, 0x6e, 0x69, 0x73, 0x77, 0x61, 0x70,
	0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00,
	0x52, 0x16, 0x73, 0x77, 0x61, 0x70, 0x57, 0x69, 0x74, 0x68, 0x55, 0x6e, 0x69, 0x73, 0x77, 0x61,
	0x70, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x60, 0x0a, 0x17, 0x76, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x76, 0x32, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x43, 0x61, 0x6c,
	0x6c, 0x73, 0x48, 0x00, 0x52, 0x14, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x56, 0x32, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x4a, 0x0a, 0x0f, 0x63, 0x65,
	0x6c, 0x6c, 0x61, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34,
	0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31,
	0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x56,
	0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x54, 0x0a, 0x13, 0x75, 0x6e, 0x69, 0x73, 0x77, 0x61,
	0x70, 0x5f, 0x76, 0x33, 0x5f, 0x76, 0x32, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34,
	0x2e, 0x55, 0x6e, 0x69, 0x73, 0x77, 0x61, 0x70, 0x56, 0x33, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f,
	0x72, 0x56, 0x32, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x10, 0x75, 0x6e, 0x69, 0x73,
	0x77, 0x61, 0x70, 0x56, 0x33, 0x56, 0x32, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x94, 0x01, 0x0a,
	0x2b, 0x61, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x32, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x6c, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e,
	0x41, 0x61, 0x76, 0x65, 0x56, 0x32, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x41, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x41, 0x64, 0x61,
	0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x24, 0x61,
	0x61, 0x76, 0x65, 0x56, 0x32, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x41, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x56, 0x31, 0x43, 0x61,
	0x6c, 0x6c, 0x73, 0x12, 0x4b, 0x0a, 0x10, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x76,
	0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x46, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48,
	0x00, 0x52, 0x0d, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73,
	0x12, 0x72, 0x0a, 0x1f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x5f, 0x61, 0x61, 0x76, 0x65, 0x5f,
	0x76, 0x32, 0x5f, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x41, 0x61, 0x76,
	0x65, 0x56, 0x32, 0x41, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72,
	0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x19, 0x6d, 0x6f, 0x72, 0x70, 0x68,
	0x6f, 0x41, 0x61, 0x76, 0x65, 0x56, 0x32, 0x41, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x31, 0x43,
	0x61, 0x6c, 0x6c, 0x73, 0x12, 0x7b, 0x0a, 0x22, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x5f, 0x61,
	0x61, 0x76, 0x65, 0x5f, 0x76, 0x32, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x6f,
	0x72, 0x70, 0x68, 0x6f, 0x41, 0x61, 0x76, 0x65, 0x56, 0x32, 0x44, 0x65, 0x62, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c,
	0x73, 0x48, 0x00, 0x52, 0x1c, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x41, 0x61, 0x76, 0x65, 0x56,
	0x32, 0x44, 0x65, 0x62, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c,
	0x73, 0x12, 0x91, 0x01, 0x0a, 0x2a, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x5f, 0x61, 0x61, 0x76,
	0x65, 0x5f, 0x76, 0x33, 0x5f, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x41, 0x61, 0x76, 0x65, 0x56, 0x33,
	0x41, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00,
	0x52, 0x23, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x41, 0x61, 0x76, 0x65, 0x56, 0x33, 0x41, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x56, 0x31,
	0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x7c, 0x0a, 0x23, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x5f,
	0x61, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x33, 0x5f, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x70, 0x32, 0x70, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e,
	0x4d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x41, 0x61, 0x76, 0x65, 0x56, 0x33, 0x41, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x50, 0x32, 0x50, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61,
	0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x1c, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x41, 0x61, 0x76,
	0x65, 0x56, 0x33, 0x41, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x32, 0x70, 0x56, 0x31, 0x43, 0x61,
	0x6c, 0x6c, 0x73, 0x12, 0x7b, 0x0a, 0x22, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x5f, 0x61, 0x61,
	0x76, 0x65, 0x5f, 0x76, 0x33, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x6f, 0x72,
	0x70, 0x68, 0x6f, 0x41, 0x61, 0x76, 0x65, 0x56, 0x33, 0x44, 0x65, 0x62, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73,
	0x48, 0x00, 0x52, 0x1c, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x41, 0x61, 0x76, 0x65, 0x56, 0x33,
	0x44, 0x65, 0x62, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73,
	0x12, 0x5d, 0x0a, 0x16, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x61,
	0x72, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x4c, 0x65,
	0x67, 0x61, 0x63, 0x79, 0x43, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f,
	0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x13, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x43, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12,
	0x58, 0x0a, 0x15, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x44, 0x65, 0x62, 0x74,
	0x46, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43,
	0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65, 0x62, 0x74, 0x46, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x6a, 0x0a, 0x1b, 0x63, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x46, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x61, 0x70,
	0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x17, 0x63, 0x6f,
	0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x46, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x31,
	0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x5a, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x78, 0x5f,
	0x63, 0x75, 0x72, 0x76, 0x65, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x34, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x78, 0x43, 0x75, 0x72, 0x76, 0x65, 0x41, 0x64, 0x61,
	0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x12, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x78, 0x43, 0x75, 0x72, 0x76, 0x65, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c,
	0x73, 0x12, 0x47, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x76, 0x65, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x43, 0x75, 0x72, 0x76, 0x65, 0x41, 0x64, 0x61, 0x70,
	0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x76, 0x65, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x5a, 0x0a, 0x15, 0x61, 0x75,
	0x72, 0x61, 0x5f, 0x65, 0x72, 0x63, 0x34, 0x36, 0x32, 0x36, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x75, 0x72, 0x61, 0x45, 0x52, 0x43, 0x34, 0x36,
	0x32, 0x36, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73,
	0x48, 0x00, 0x52, 0x12, 0x61, 0x75, 0x72, 0x61, 0x45, 0x72, 0x63, 0x34, 0x36, 0x32, 0x36, 0x56,
	0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x76, 0x0a, 0x1f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f,
	0x5f, 0x62, 0x6c, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x6f, 0x72,
	0x70, 0x68, 0x6f, 0x42, 0x6c, 0x75, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x6c, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48,
	0x00, 0x52, 0x1b, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x42, 0x6c, 0x75, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x64,
	0x0a, 0x19, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x65, 0x5f, 0x64, 0x65,
	0x62, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x4d,
	0x6f, 0x72, 0x70, 0x68, 0x6f, 0x42, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x62, 0x74, 0x41, 0x64, 0x61,
	0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x15, 0x6d,
	0x6f, 0x72, 0x70, 0x68, 0x6f, 0x42, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x62, 0x74, 0x56, 0x31, 0x43,
	0x61, 0x6c, 0x6c, 0x73, 0x12, 0x6a, 0x0a, 0x1b, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x5f, 0x62,
	0x6c, 0x75, 0x65, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x42, 0x6c, 0x75,
	0x65, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31,
	0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x17, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x6f, 0x42,
	0x6c, 0x75, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73,
	0x12, 0x4d, 0x0a, 0x10, 0x65, 0x72, 0x63, 0x34, 0x36, 0x32, 0x36, 0x5f, 0x76, 0x31, 0x5f, 0x63,
	0x61, 0x6c, 0x6c, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x45, 0x52, 0x43, 0x34, 0x36, 0x32, 0x36, 0x41,
	0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52,
	0x0e, 0x65, 0x72, 0x63, 0x34, 0x36, 0x32, 0x36, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12,
	0x4d, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x64,
	0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0e,
	0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x4a,
	0x0a, 0x0f, 0x70, 0x65, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x76, 0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x34, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x6c, 0x65, 0x41, 0x64, 0x61, 0x70, 0x74,
	0x6f, 0x72, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x65, 0x6e,
	0x64, 0x6c, 0x65, 0x56, 0x31, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x23, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x61, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x40,
	0x0a, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x31,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73,
	0x42, 0x10, 0x5a, 0x0e, 0x2f, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_balancer_pool_flash_loan_proto_rawDescOnce sync.Once
	file_balancer_pool_flash_loan_proto_rawDescData = file_balancer_pool_flash_loan_proto_rawDesc
)

func file_balancer_pool_flash_loan_proto_rawDescGZIP() []byte {
	file_balancer_pool_flash_loan_proto_rawDescOnce.Do(func() {
		file_balancer_pool_flash_loan_proto_rawDescData = protoimpl.X.CompressGZIP(file_balancer_pool_flash_loan_proto_rawDescData)
	})
	return file_balancer_pool_flash_loan_proto_rawDescData
}

var file_balancer_pool_flash_loan_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_balancer_pool_flash_loan_proto_goTypes = []interface{}{
	(*BalancerPoolAdaptorV1FlashLoan)(nil),                                     // 0: steward.v4.BalancerPoolAdaptorV1FlashLoan
	(*BalancerPoolAdaptorV1FlashLoanCalls)(nil),                                // 1: steward.v4.BalancerPoolAdaptorV1FlashLoanCalls
	(*BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan)(nil),                       // 2: steward.v4.BalancerPoolAdaptorV1FlashLoan.MakeFlashLoan
	(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan)(nil), // 3: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan
	(*AaveATokenAdaptorV1Calls)(nil),                                           // 4: steward.v4.AaveATokenAdaptorV1Calls
	(*AaveDebtTokenAdaptorV1Calls)(nil),                                        // 5: steward.v4.AaveDebtTokenAdaptorV1Calls
	(*CompoundCTokenAdaptorV2Calls)(nil),                                       // 6: steward.v4.CompoundCTokenAdaptorV2Calls
	(*AaveATokenAdaptorV2Calls)(nil),                                           // 7: steward.v4.AaveATokenAdaptorV2Calls
	(*AaveDebtTokenAdaptorV2Calls)(nil),                                        // 8: steward.v4.AaveDebtTokenAdaptorV2Calls
	(*AaveV3ATokenAdaptorV1Calls)(nil),                                         // 9: steward.v4.AaveV3ATokenAdaptorV1Calls
	(*AaveV3DebtTokenAdaptorV1Calls)(nil),                                      // 10: steward.v4.AaveV3DebtTokenAdaptorV1Calls
	(*OneInchAdaptorV1Calls)(nil),                                              // 11: steward.v4.OneInchAdaptorV1Calls
	(*FeesAndReservesAdaptorV1Calls)(nil),                                      // 12: steward.v4.FeesAndReservesAdaptorV1Calls
	(*ZeroXAdaptorV1Calls)(nil),                                                // 13: steward.v4.ZeroXAdaptorV1Calls
	(*SwapWithUniswapAdaptorV1Calls)(nil),                                      // 14: steward.v4.SwapWithUniswapAdaptorV1Calls
	(*VestingSimpleAdaptorV2Calls)(nil),                                        // 15: steward.v4.VestingSimpleAdaptorV2Calls
	(*CellarAdaptorV1Calls)(nil),                                               // 16: steward.v4.CellarAdaptorV1Calls
	(*UniswapV3AdaptorV2Calls)(nil),                                            // 17: steward.v4.UniswapV3AdaptorV2Calls
	(*AaveV2EnableAssetAsCollateralAdaptorV1Calls)(nil),                        // 18: steward.v4.AaveV2EnableAssetAsCollateralAdaptorV1Calls
	(*FTokenAdaptorV1Calls)(nil),                                               // 19: steward.v4.FTokenAdaptorV1Calls
	(*MorphoAaveV2ATokenAdaptorV1Calls)(nil),                                   // 20: steward.v4.MorphoAaveV2ATokenAdaptorV1Calls
	(*MorphoAaveV2DebtTokenAdaptorV1Calls)(nil),                                // 21: steward.v4.MorphoAaveV2DebtTokenAdaptorV1Calls
	(*MorphoAaveV3ATokenCollateralAdaptorV1Calls)(nil),                         // 22: steward.v4.MorphoAaveV3ATokenCollateralAdaptorV1Calls
	(*MorphoAaveV3ATokenP2PAdaptorV1Calls)(nil),                                // 23: steward.v4.MorphoAaveV3ATokenP2PAdaptorV1Calls
	(*MorphoAaveV3DebtTokenAdaptorV1Calls)(nil),                                // 24: steward.v4.MorphoAaveV3DebtTokenAdaptorV1Calls
	(*LegacyCellarAdaptorV1Calls)(nil),                                         // 25: steward.v4.LegacyCellarAdaptorV1Calls
	(*DebtFTokenAdaptorV1Calls)(nil),                                           // 26: steward.v4.DebtFTokenAdaptorV1Calls
	(*CollateralFTokenAdaptorV1Calls)(nil),                                     // 27: steward.v4.CollateralFTokenAdaptorV1Calls
	(*ConvexCurveAdaptorV1Calls)(nil),                                          // 28: steward.v4.ConvexCurveAdaptorV1Calls
	(*CurveAdaptorV1Calls)(nil),                                                // 29: steward.v4.CurveAdaptorV1Calls
	(*AuraERC4626AdaptorV1Calls)(nil),                                          // 30: steward.v4.AuraERC4626AdaptorV1Calls
	(*MorphoBlueCollateralAdaptorV1Calls)(nil),                                 // 31: steward.v4.MorphoBlueCollateralAdaptorV1Calls
	(*MorphoBlueDebtAdaptorV1Calls)(nil),                                       // 32: steward.v4.MorphoBlueDebtAdaptorV1Calls
	(*MorphoBlueSupplyAdaptorV1Calls)(nil),                                     // 33: steward.v4.MorphoBlueSupplyAdaptorV1Calls
	(*ERC4626AdaptorV1Calls)(nil),                                              // 34: steward.v4.ERC4626AdaptorV1Calls
	(*StakingAdaptorV1Calls)(nil),                                              // 35: steward.v4.StakingAdaptorV1Calls
	(*PendleAdaptorV1Calls)(nil),                                               // 36: steward.v4.PendleAdaptorV1Calls
}
var file_balancer_pool_flash_loan_proto_depIdxs = []int32{
	2,  // 0: steward.v4.BalancerPoolAdaptorV1FlashLoan.make_flash_loan:type_name -> steward.v4.BalancerPoolAdaptorV1FlashLoan.MakeFlashLoan
	0,  // 1: steward.v4.BalancerPoolAdaptorV1FlashLoanCalls.calls:type_name -> steward.v4.BalancerPoolAdaptorV1FlashLoan
	3,  // 2: steward.v4.BalancerPoolAdaptorV1FlashLoan.MakeFlashLoan.data:type_name -> steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan
	4,  // 3: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.aave_a_token_v1_calls:type_name -> steward.v4.AaveATokenAdaptorV1Calls
	5,  // 4: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.aave_debt_token_v1_calls:type_name -> steward.v4.AaveDebtTokenAdaptorV1Calls
	6,  // 5: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.compound_c_token_v2_calls:type_name -> steward.v4.CompoundCTokenAdaptorV2Calls
	7,  // 6: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.aave_a_token_v2_calls:type_name -> steward.v4.AaveATokenAdaptorV2Calls
	8,  // 7: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.aave_debt_token_v2_calls:type_name -> steward.v4.AaveDebtTokenAdaptorV2Calls
	9,  // 8: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.aave_v3_a_token_v1_calls:type_name -> steward.v4.AaveV3ATokenAdaptorV1Calls
	10, // 9: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.aave_v3_debt_token_v1_calls:type_name -> steward.v4.AaveV3DebtTokenAdaptorV1Calls
	11, // 10: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.one_inch_v1_calls:type_name -> steward.v4.OneInchAdaptorV1Calls
	12, // 11: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.fees_and_reserves_v1_calls:type_name -> steward.v4.FeesAndReservesAdaptorV1Calls
	13, // 12: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.zero_x_v1_calls:type_name -> steward.v4.ZeroXAdaptorV1Calls
	14, // 13: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.swap_with_uniswap_v1_calls:type_name -> steward.v4.SwapWithUniswapAdaptorV1Calls
	15, // 14: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.vesting_simple_v2_calls:type_name -> steward.v4.VestingSimpleAdaptorV2Calls
	16, // 15: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.cellar_v1_calls:type_name -> steward.v4.CellarAdaptorV1Calls
	17, // 16: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.uniswap_v3_v2_calls:type_name -> steward.v4.UniswapV3AdaptorV2Calls
	18, // 17: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.aave_v2_enable_asset_as_collateral_v1_calls:type_name -> steward.v4.AaveV2EnableAssetAsCollateralAdaptorV1Calls
	19, // 18: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.f_token_v1_calls:type_name -> steward.v4.FTokenAdaptorV1Calls
	20, // 19: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.morpho_aave_v2_a_token_v1_calls:type_name -> steward.v4.MorphoAaveV2ATokenAdaptorV1Calls
	21, // 20: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.morpho_aave_v2_debt_token_v1_calls:type_name -> steward.v4.MorphoAaveV2DebtTokenAdaptorV1Calls
	22, // 21: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.morpho_aave_v3_a_token_collateral_v1_calls:type_name -> steward.v4.MorphoAaveV3ATokenCollateralAdaptorV1Calls
	23, // 22: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.morpho_aave_v3_a_token_p2p_v1_calls:type_name -> steward.v4.MorphoAaveV3ATokenP2PAdaptorV1Calls
	24, // 23: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.morpho_aave_v3_debt_token_v1_calls:type_name -> steward.v4.MorphoAaveV3DebtTokenAdaptorV1Calls
	25, // 24: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.legacy_cellar_v1_calls:type_name -> steward.v4.LegacyCellarAdaptorV1Calls
	26, // 25: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.debt_f_token_v1_calls:type_name -> steward.v4.DebtFTokenAdaptorV1Calls
	27, // 26: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.collateral_f_token_v1_calls:type_name -> steward.v4.CollateralFTokenAdaptorV1Calls
	28, // 27: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.convex_curve_v1_calls:type_name -> steward.v4.ConvexCurveAdaptorV1Calls
	29, // 28: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.curve_v1_calls:type_name -> steward.v4.CurveAdaptorV1Calls
	30, // 29: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.aura_erc4626_v1_calls:type_name -> steward.v4.AuraERC4626AdaptorV1Calls
	31, // 30: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.morpho_blue_collateral_v1_calls:type_name -> steward.v4.MorphoBlueCollateralAdaptorV1Calls
	32, // 31: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.morpho_blue_debt_v1_calls:type_name -> steward.v4.MorphoBlueDebtAdaptorV1Calls
	33, // 32: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.morpho_blue_supply_v1_calls:type_name -> steward.v4.MorphoBlueSupplyAdaptorV1Calls
	34, // 33: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.erc4626_v1_calls:type_name -> steward.v4.ERC4626AdaptorV1Calls
	35, // 34: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.staking_v1_calls:type_name -> steward.v4.StakingAdaptorV1Calls
	36, // 35: steward.v4.BalancerPoolAdaptorV1FlashLoan.AdaptorCallForBalancerPoolFlashLoan.pendle_v1_calls:type_name -> steward.v4.PendleAdaptorV1Calls
	36, // [36:36] is the sub-list for method output_type
	36, // [36:36] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_balancer_pool_flash_loan_proto_init() }
func file_balancer_pool_flash_loan_proto_init() {
	if File_balancer_pool_flash_loan_proto != nil {
		return
	}
	file_a_token_proto_init()
	file_debt_token_proto_init()
	file_aave_v3_a_token_proto_init()
	file_aave_v3_debt_token_proto_init()
	file_c_token_proto_init()
	file_erc4626_proto_init()
	file_f_token_proto_init()
	file_morpho_aave_v2_a_token_proto_init()
	file_morpho_aave_v2_debt_token_proto_init()
	file_morpho_aave_v3_a_token_collateral_proto_init()
	file_morpho_aave_v3_a_token_p2p_proto_init()
	file_morpho_aave_v3_debt_token_proto_init()
	file_morpho_blue_collateral_proto_init()
	file_morpho_blue_debt_proto_init()
	file_morpho_blue_supply_proto_init()
	file_uniswap_v3_proto_init()
	file_swap_with_uniswap_proto_init()
	file_fees_and_reserves_proto_init()
	file_zero_x_proto_init()
	file_oneinch_proto_init()
	file_vesting_simple_proto_init()
	file_cellar_adaptor_proto_init()
	file_aave_v2_enable_asset_as_collateral_adaptor_proto_init()
	file_legacy_cellar_adaptor_proto_init()
	file_debt_f_token_proto_init()
	file_collateral_f_token_proto_init()
	file_aura_erc4626_proto_init()
	file_convex_curve_proto_init()
	file_curve_proto_init()
	file_staking_proto_init()
	file_pendle_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_balancer_pool_flash_loan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalancerPoolAdaptorV1FlashLoan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balancer_pool_flash_loan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalancerPoolAdaptorV1FlashLoanCalls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balancer_pool_flash_loan_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalancerPoolAdaptorV1FlashLoan_MakeFlashLoan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balancer_pool_flash_loan_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_balancer_pool_flash_loan_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveATokenV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveDebtTokenV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CompoundCTokenV2Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveATokenV2Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveDebtTokenV2Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV3ATokenV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV3DebtTokenV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_OneInchV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_FeesAndReservesV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_ZeroXV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_SwapWithUniswapV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_VestingSimpleV2Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CellarV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_UniswapV3V2Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AaveV2EnableAssetAsCollateralV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_FTokenV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV2ATokenV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV2DebtTokenV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3ATokenCollateralV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3ATokenP2PV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoAaveV3DebtTokenV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_LegacyCellarV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_DebtFTokenV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CollateralFTokenV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_ConvexCurveV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_CurveV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_AuraErc4626V1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueCollateralV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueDebtV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_MorphoBlueSupplyV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_Erc4626V1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_StakingV1Calls)(nil),
		(*BalancerPoolAdaptorV1FlashLoan_AdaptorCallForBalancerPoolFlashLoan_PendleV1Calls)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_balancer_pool_flash_loan_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_balancer_pool_flash_loan_proto_goTypes,
		DependencyIndexes: file_balancer_pool_flash_loan_proto_depIdxs,
		MessageInfos:      file_balancer_pool_flash_loan_proto_msgTypes,
	}.Build()
	File_balancer_pool_flash_loan_proto = out.File
	file_balancer_pool_flash_loan_proto_rawDesc = nil
	file_balancer_pool_flash_loan_proto_goTypes = nil
	file_balancer_pool_flash_loan_proto_depIdxs = nil
}
