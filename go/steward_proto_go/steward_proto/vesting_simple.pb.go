//
// Protos for function calls to the simple Vesting adaptor.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.1
// source: vesting_simple.proto

package steward_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents call data for the Vesting Simple adaptor
type VestingSimpleAdaptorV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Function:
	//
	//	*VestingSimpleAdaptorV2_RevokeApproval
	//	*VestingSimpleAdaptorV2_DepositToVesting_
	//	*VestingSimpleAdaptorV2_WithdrawFromVesting_
	//	*VestingSimpleAdaptorV2_WithdrawAnyFromVesting_
	//	*VestingSimpleAdaptorV2_WithdrawAllFromVesting_
	Function isVestingSimpleAdaptorV2_Function `protobuf_oneof:"function"`
}

func (x *VestingSimpleAdaptorV2) Reset() {
	*x = VestingSimpleAdaptorV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vesting_simple_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VestingSimpleAdaptorV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VestingSimpleAdaptorV2) ProtoMessage() {}

func (x *VestingSimpleAdaptorV2) ProtoReflect() protoreflect.Message {
	mi := &file_vesting_simple_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VestingSimpleAdaptorV2.ProtoReflect.Descriptor instead.
func (*VestingSimpleAdaptorV2) Descriptor() ([]byte, []int) {
	return file_vesting_simple_proto_rawDescGZIP(), []int{0}
}

func (m *VestingSimpleAdaptorV2) GetFunction() isVestingSimpleAdaptorV2_Function {
	if m != nil {
		return m.Function
	}
	return nil
}

func (x *VestingSimpleAdaptorV2) GetRevokeApproval() *RevokeApproval {
	if x, ok := x.GetFunction().(*VestingSimpleAdaptorV2_RevokeApproval); ok {
		return x.RevokeApproval
	}
	return nil
}

func (x *VestingSimpleAdaptorV2) GetDepositToVesting() *VestingSimpleAdaptorV2_DepositToVesting {
	if x, ok := x.GetFunction().(*VestingSimpleAdaptorV2_DepositToVesting_); ok {
		return x.DepositToVesting
	}
	return nil
}

func (x *VestingSimpleAdaptorV2) GetWithdrawFromVesting() *VestingSimpleAdaptorV2_WithdrawFromVesting {
	if x, ok := x.GetFunction().(*VestingSimpleAdaptorV2_WithdrawFromVesting_); ok {
		return x.WithdrawFromVesting
	}
	return nil
}

func (x *VestingSimpleAdaptorV2) GetWithdrawAnyFromVesting() *VestingSimpleAdaptorV2_WithdrawAnyFromVesting {
	if x, ok := x.GetFunction().(*VestingSimpleAdaptorV2_WithdrawAnyFromVesting_); ok {
		return x.WithdrawAnyFromVesting
	}
	return nil
}

func (x *VestingSimpleAdaptorV2) GetWithdrawAllFromVesting() *VestingSimpleAdaptorV2_WithdrawAllFromVesting {
	if x, ok := x.GetFunction().(*VestingSimpleAdaptorV2_WithdrawAllFromVesting_); ok {
		return x.WithdrawAllFromVesting
	}
	return nil
}

type isVestingSimpleAdaptorV2_Function interface {
	isVestingSimpleAdaptorV2_Function()
}

type VestingSimpleAdaptorV2_RevokeApproval struct {
	// Represents function `revokeApproval(ERC20 asset, address spender)`
	RevokeApproval *RevokeApproval `protobuf:"bytes,1,opt,name=revoke_approval,json=revokeApproval,proto3,oneof"`
}

type VestingSimpleAdaptorV2_DepositToVesting_ struct {
	// Represents function `depositToVesting(VestingSimple vestingContract, uint256 amountToDeposit)`
	DepositToVesting *VestingSimpleAdaptorV2_DepositToVesting `protobuf:"bytes,2,opt,name=deposit_to_vesting,json=depositToVesting,proto3,oneof"`
}

type VestingSimpleAdaptorV2_WithdrawFromVesting_ struct {
	// Represents function `withdrawFromVesting(VestingSimple vestingContract, uint256 depositId, uint256 amountToWithdraw)`
	WithdrawFromVesting *VestingSimpleAdaptorV2_WithdrawFromVesting `protobuf:"bytes,3,opt,name=withdraw_from_vesting,json=withdrawFromVesting,proto3,oneof"`
}

type VestingSimpleAdaptorV2_WithdrawAnyFromVesting_ struct {
	// Represents function `withdrawAnyFromVesting(VestingSimple vestingContract, uint256 amountToWithdraw)`
	WithdrawAnyFromVesting *VestingSimpleAdaptorV2_WithdrawAnyFromVesting `protobuf:"bytes,4,opt,name=withdraw_any_from_vesting,json=withdrawAnyFromVesting,proto3,oneof"`
}

type VestingSimpleAdaptorV2_WithdrawAllFromVesting_ struct {
	// Represents function `withdrawAllFromVesting(VestingSimple vestingContract)`
	WithdrawAllFromVesting *VestingSimpleAdaptorV2_WithdrawAllFromVesting `protobuf:"bytes,5,opt,name=withdraw_all_from_vesting,json=withdrawAllFromVesting,proto3,oneof"`
}

func (*VestingSimpleAdaptorV2_RevokeApproval) isVestingSimpleAdaptorV2_Function() {}

func (*VestingSimpleAdaptorV2_DepositToVesting_) isVestingSimpleAdaptorV2_Function() {}

func (*VestingSimpleAdaptorV2_WithdrawFromVesting_) isVestingSimpleAdaptorV2_Function() {}

func (*VestingSimpleAdaptorV2_WithdrawAnyFromVesting_) isVestingSimpleAdaptorV2_Function() {}

func (*VestingSimpleAdaptorV2_WithdrawAllFromVesting_) isVestingSimpleAdaptorV2_Function() {}

type VestingSimpleAdaptorV2Calls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Calls []*VestingSimpleAdaptorV2 `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"`
}

func (x *VestingSimpleAdaptorV2Calls) Reset() {
	*x = VestingSimpleAdaptorV2Calls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vesting_simple_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VestingSimpleAdaptorV2Calls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VestingSimpleAdaptorV2Calls) ProtoMessage() {}

func (x *VestingSimpleAdaptorV2Calls) ProtoReflect() protoreflect.Message {
	mi := &file_vesting_simple_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VestingSimpleAdaptorV2Calls.ProtoReflect.Descriptor instead.
func (*VestingSimpleAdaptorV2Calls) Descriptor() ([]byte, []int) {
	return file_vesting_simple_proto_rawDescGZIP(), []int{1}
}

func (x *VestingSimpleAdaptorV2Calls) GetCalls() []*VestingSimpleAdaptorV2 {
	if x != nil {
		return x.Calls
	}
	return nil
}

// Allows strategists to deposit tokens to the vesting contract. By passing a max uint256 for amountToDeposit, the cellar will
// deposit its entire balance (appropriate in most cases).
//
// Represents function `depositToVesting(VestingSimple vestingContract, uint256 amountToDeposit)`
type VestingSimpleAdaptorV2_DepositToVesting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VestingContract string `protobuf:"bytes,1,opt,name=vesting_contract,json=vestingContract,proto3" json:"vesting_contract,omitempty"`
	Amount          string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *VestingSimpleAdaptorV2_DepositToVesting) Reset() {
	*x = VestingSimpleAdaptorV2_DepositToVesting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vesting_simple_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VestingSimpleAdaptorV2_DepositToVesting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VestingSimpleAdaptorV2_DepositToVesting) ProtoMessage() {}

func (x *VestingSimpleAdaptorV2_DepositToVesting) ProtoReflect() protoreflect.Message {
	mi := &file_vesting_simple_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VestingSimpleAdaptorV2_DepositToVesting.ProtoReflect.Descriptor instead.
func (*VestingSimpleAdaptorV2_DepositToVesting) Descriptor() ([]byte, []int) {
	return file_vesting_simple_proto_rawDescGZIP(), []int{0, 0}
}

func (x *VestingSimpleAdaptorV2_DepositToVesting) GetVestingContract() string {
	if x != nil {
		return x.VestingContract
	}
	return ""
}

func (x *VestingSimpleAdaptorV2_DepositToVesting) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

// Allows strategists to deposit tokens to the vesting contract. By passing a max uint256 for amountToDeposit, the cellar will
// deposit its entire balance (appropriate in most cases).
//
// Represents function `withdrawFromVesting(VestingSimple vestingContract, uint256 depositId, uint256 amountToWithdraw)`
type VestingSimpleAdaptorV2_WithdrawFromVesting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VestingContract string `protobuf:"bytes,1,opt,name=vesting_contract,json=vestingContract,proto3" json:"vesting_contract,omitempty"`
	DepositId       string `protobuf:"bytes,2,opt,name=deposit_id,json=depositId,proto3" json:"deposit_id,omitempty"`
	Amount          string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *VestingSimpleAdaptorV2_WithdrawFromVesting) Reset() {
	*x = VestingSimpleAdaptorV2_WithdrawFromVesting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vesting_simple_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VestingSimpleAdaptorV2_WithdrawFromVesting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VestingSimpleAdaptorV2_WithdrawFromVesting) ProtoMessage() {}

func (x *VestingSimpleAdaptorV2_WithdrawFromVesting) ProtoReflect() protoreflect.Message {
	mi := &file_vesting_simple_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VestingSimpleAdaptorV2_WithdrawFromVesting.ProtoReflect.Descriptor instead.
func (*VestingSimpleAdaptorV2_WithdrawFromVesting) Descriptor() ([]byte, []int) {
	return file_vesting_simple_proto_rawDescGZIP(), []int{0, 1}
}

func (x *VestingSimpleAdaptorV2_WithdrawFromVesting) GetVestingContract() string {
	if x != nil {
		return x.VestingContract
	}
	return ""
}

func (x *VestingSimpleAdaptorV2_WithdrawFromVesting) GetDepositId() string {
	if x != nil {
		return x.DepositId
	}
	return ""
}

func (x *VestingSimpleAdaptorV2_WithdrawFromVesting) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

// Withdraw a single deposit from vesting. This will not affect the cellar's TVL because any deposit must already have vested, and
// will be reported in balanceOf. Will revert if not enough tokens are available based on amountToWithdraw.
//
// Represents function `withdrawAnyFromVesting(VestingSimple vestingContract, uint256 amountToWithdraw)`
type VestingSimpleAdaptorV2_WithdrawAnyFromVesting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VestingContract string `protobuf:"bytes,1,opt,name=vesting_contract,json=vestingContract,proto3" json:"vesting_contract,omitempty"`
	Amount          string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *VestingSimpleAdaptorV2_WithdrawAnyFromVesting) Reset() {
	*x = VestingSimpleAdaptorV2_WithdrawAnyFromVesting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vesting_simple_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VestingSimpleAdaptorV2_WithdrawAnyFromVesting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VestingSimpleAdaptorV2_WithdrawAnyFromVesting) ProtoMessage() {}

func (x *VestingSimpleAdaptorV2_WithdrawAnyFromVesting) ProtoReflect() protoreflect.Message {
	mi := &file_vesting_simple_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VestingSimpleAdaptorV2_WithdrawAnyFromVesting.ProtoReflect.Descriptor instead.
func (*VestingSimpleAdaptorV2_WithdrawAnyFromVesting) Descriptor() ([]byte, []int) {
	return file_vesting_simple_proto_rawDescGZIP(), []int{0, 2}
}

func (x *VestingSimpleAdaptorV2_WithdrawAnyFromVesting) GetVestingContract() string {
	if x != nil {
		return x.VestingContract
	}
	return ""
}

func (x *VestingSimpleAdaptorV2_WithdrawAnyFromVesting) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

// Withdraw a certain amount of tokens from vesting, from any deposit. This will not affect the cellar's TVL because any deposit must
// already have vested, and will be reported in balanceOf. Will revert if not enough tokens are available based on amountToWithdraw.
//
// Represents function `withdrawAllFromVesting(VestingSimple vestingContract)`
type VestingSimpleAdaptorV2_WithdrawAllFromVesting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VestingContract string `protobuf:"bytes,1,opt,name=vesting_contract,json=vestingContract,proto3" json:"vesting_contract,omitempty"`
}

func (x *VestingSimpleAdaptorV2_WithdrawAllFromVesting) Reset() {
	*x = VestingSimpleAdaptorV2_WithdrawAllFromVesting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vesting_simple_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VestingSimpleAdaptorV2_WithdrawAllFromVesting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VestingSimpleAdaptorV2_WithdrawAllFromVesting) ProtoMessage() {}

func (x *VestingSimpleAdaptorV2_WithdrawAllFromVesting) ProtoReflect() protoreflect.Message {
	mi := &file_vesting_simple_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VestingSimpleAdaptorV2_WithdrawAllFromVesting.ProtoReflect.Descriptor instead.
func (*VestingSimpleAdaptorV2_WithdrawAllFromVesting) Descriptor() ([]byte, []int) {
	return file_vesting_simple_proto_rawDescGZIP(), []int{0, 3}
}

func (x *VestingSimpleAdaptorV2_WithdrawAllFromVesting) GetVestingContract() string {
	if x != nil {
		return x.VestingContract
	}
	return ""
}

var File_vesting_simple_proto protoreflect.FileDescriptor

var file_vesting_simple_proto_rawDesc = []byte{
	0x0a, 0x14, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x34, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0,
	0x07, 0x0a, 0x16, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x12, 0x45, 0x0a, 0x0f, 0x72, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x48, 0x00,
	0x52, 0x0e, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x12, 0x63, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x76,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73,
	0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x32,
	0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x6f, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x6f, 0x56, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x6c, 0x0a, 0x15, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x34, 0x2e, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41,
	0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x13,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x76, 0x0a, 0x19, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f,
	0x61, 0x6e, 0x79, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x34, 0x2e, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x41, 0x6e, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x16, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6e, 0x79,
	0x46, 0x72, 0x6f, 0x6d, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x76, 0x0a, 0x19, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x56, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72,
	0x56, 0x32, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6c, 0x6c, 0x46, 0x72,
	0x6f, 0x6d, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x16, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6c, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x1a, 0x55, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x6f,
	0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x77, 0x0a, 0x13, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x5b, 0x0a, 0x16, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41,
	0x6e, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a,
	0x10, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x43, 0x0a, 0x16, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6c, 0x6c, 0x46,
	0x72, 0x6f, 0x6d, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x57, 0x0a, 0x1b, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x56, 0x32, 0x43, 0x61, 0x6c, 0x6c, 0x73,
	0x12, 0x38, 0x0a, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x73, 0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x56, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f,
	0x72, 0x56, 0x32, 0x52, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x42, 0x10, 0x5a, 0x0e, 0x2f, 0x73,
	0x74, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vesting_simple_proto_rawDescOnce sync.Once
	file_vesting_simple_proto_rawDescData = file_vesting_simple_proto_rawDesc
)

func file_vesting_simple_proto_rawDescGZIP() []byte {
	file_vesting_simple_proto_rawDescOnce.Do(func() {
		file_vesting_simple_proto_rawDescData = protoimpl.X.CompressGZIP(file_vesting_simple_proto_rawDescData)
	})
	return file_vesting_simple_proto_rawDescData
}

var file_vesting_simple_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_vesting_simple_proto_goTypes = []interface{}{
	(*VestingSimpleAdaptorV2)(nil),                        // 0: steward.v4.VestingSimpleAdaptorV2
	(*VestingSimpleAdaptorV2Calls)(nil),                   // 1: steward.v4.VestingSimpleAdaptorV2Calls
	(*VestingSimpleAdaptorV2_DepositToVesting)(nil),       // 2: steward.v4.VestingSimpleAdaptorV2.DepositToVesting
	(*VestingSimpleAdaptorV2_WithdrawFromVesting)(nil),    // 3: steward.v4.VestingSimpleAdaptorV2.WithdrawFromVesting
	(*VestingSimpleAdaptorV2_WithdrawAnyFromVesting)(nil), // 4: steward.v4.VestingSimpleAdaptorV2.WithdrawAnyFromVesting
	(*VestingSimpleAdaptorV2_WithdrawAllFromVesting)(nil), // 5: steward.v4.VestingSimpleAdaptorV2.WithdrawAllFromVesting
	(*RevokeApproval)(nil),                                // 6: steward.v4.RevokeApproval
}
var file_vesting_simple_proto_depIdxs = []int32{
	6, // 0: steward.v4.VestingSimpleAdaptorV2.revoke_approval:type_name -> steward.v4.RevokeApproval
	2, // 1: steward.v4.VestingSimpleAdaptorV2.deposit_to_vesting:type_name -> steward.v4.VestingSimpleAdaptorV2.DepositToVesting
	3, // 2: steward.v4.VestingSimpleAdaptorV2.withdraw_from_vesting:type_name -> steward.v4.VestingSimpleAdaptorV2.WithdrawFromVesting
	4, // 3: steward.v4.VestingSimpleAdaptorV2.withdraw_any_from_vesting:type_name -> steward.v4.VestingSimpleAdaptorV2.WithdrawAnyFromVesting
	5, // 4: steward.v4.VestingSimpleAdaptorV2.withdraw_all_from_vesting:type_name -> steward.v4.VestingSimpleAdaptorV2.WithdrawAllFromVesting
	0, // 5: steward.v4.VestingSimpleAdaptorV2Calls.calls:type_name -> steward.v4.VestingSimpleAdaptorV2
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_vesting_simple_proto_init() }
func file_vesting_simple_proto_init() {
	if File_vesting_simple_proto != nil {
		return
	}
	file_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vesting_simple_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VestingSimpleAdaptorV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vesting_simple_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VestingSimpleAdaptorV2Calls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vesting_simple_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VestingSimpleAdaptorV2_DepositToVesting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vesting_simple_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VestingSimpleAdaptorV2_WithdrawFromVesting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vesting_simple_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VestingSimpleAdaptorV2_WithdrawAnyFromVesting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vesting_simple_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VestingSimpleAdaptorV2_WithdrawAllFromVesting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_vesting_simple_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*VestingSimpleAdaptorV2_RevokeApproval)(nil),
		(*VestingSimpleAdaptorV2_DepositToVesting_)(nil),
		(*VestingSimpleAdaptorV2_WithdrawFromVesting_)(nil),
		(*VestingSimpleAdaptorV2_WithdrawAnyFromVesting_)(nil),
		(*VestingSimpleAdaptorV2_WithdrawAllFromVesting_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vesting_simple_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vesting_simple_proto_goTypes,
		DependencyIndexes: file_vesting_simple_proto_depIdxs,
		MessageInfos:      file_vesting_simple_proto_msgTypes,
	}.Build()
	File_vesting_simple_proto = out.File
	file_vesting_simple_proto_rawDesc = nil
	file_vesting_simple_proto_goTypes = nil
	file_vesting_simple_proto_depIdxs = nil
}
